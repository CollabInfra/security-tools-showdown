{
	"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
	"version": "2.1.0",
	"runs": [
		{
			"tool": {
				"driver": {
					"name": "KICS",
					"version": "v1.7.1",
					"fullName": "Keeping Infrastructure as Code Secure",
					"informationUri": "https://www.kics.io/",
					"rules": [
						{
							"id": "a3a055d2-9a2e-4cc9-b9fb-12850a1a3a4b",
							"name": "AD Admin Not Configured For SQL Server",
							"shortDescription": {
								"text": "AD Admin Not Configured For SQL Server"
							},
							"fullDescription": {
								"text": "The Active Directory Administrator is not configured for a SQL server"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_active_directory_administrator",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "599318f2-6653-4569-9e21-041d06c63a89",
							"name": "AKS Private Cluster Disabled",
							"shortDescription": {
								"text": "AKS Private Cluster Disabled"
							},
							"fullDescription": {
								"text": "Azure Kubernetes Service (AKS) API should not be exposed to the internet"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#private_cluster_enabled",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b61cce4b-0cc4-472b-8096-15617a6d769b",
							"name": "App Service Managed Identity Disabled",
							"shortDescription": {
								"text": "App Service Managed Identity Disabled"
							},
							"fullDescription": {
								"text": "Azure App Service should have managed identity enabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity",
							"relationships": [
								{
									"target": {
										"id": "CAT011",
										"index": 14,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b7b9d1c7-2d3b-49b4-b867-ebbe68d0b643",
							"name": "App Service Not Using Latest TLS Encryption Version",
							"shortDescription": {
								"text": "App Service Not Using Latest TLS Encryption Version"
							},
							"fullDescription": {
								"text": "Ensure App Service is using the latest version of TLS encryption"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#min_tls_version",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "3ddfa124-6407-4845-a501-179f90c65097",
							"name": "Authentication Without MFA",
							"shortDescription": {
								"text": "Authentication Without MFA"
							},
							"fullDescription": {
								"text": "Users should authenticate with MFA (Multi-factor Authentication) to ensure an extra layer of protection when authenticating"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user_policy",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "a81573f9-3691-4d83-88a0-7d4af63e17a3",
							"name": "Azure App Service Client Certificate Disabled",
							"shortDescription": {
								"text": "Azure App Service Client Certificate Disabled"
							},
							"fullDescription": {
								"text": "Azure App Service client certificate should be enabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "dafe30ec-325d-4516-85d1-e8e6776f012c",
							"name": "Azure Instance Using Basic Authentication",
							"shortDescription": {
								"text": "Azure Instance Using Basic Authentication"
							},
							"fullDescription": {
								"text": "Azure Instances should use SSH Key instead of basic authentication"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/linux_virtual_machine#admin_ssh_key",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "e576ce44-dd03-4022-a8c0-3906acca2ab4",
							"name": "BigQuery Dataset Is Public",
							"shortDescription": {
								"text": "BigQuery Dataset Is Public"
							},
							"fullDescription": {
								"text": "BigQuery dataset is anonymously or publicly accessible"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://www.terraform.io/docs/providers/google/r/bigquery_dataset.html",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "22fbfeac-7b5a-421a-8a27-7a2178bb910b",
							"name": "CMK Rotation Disabled",
							"shortDescription": {
								"text": "CMK Rotation Disabled"
							},
							"fullDescription": {
								"text": "Customer Master Keys (CMK) must have rotation enabled, which means the attribute 'enable_key_rotation' must be set to 'true' when the key is enabled."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "ffee2785-c347-451e-89f3-11aeb08e5c84",
							"name": "CMK Unencrypted Storage",
							"shortDescription": {
								"text": "CMK Unencrypted Storage"
							},
							"fullDescription": {
								"text": "Ensure that storage is encrypted."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "a6cd52a1-3056-4910-96a5-894de9f3f3b3",
							"name": "Cloud Storage Anonymous or Publicly Accessible",
							"shortDescription": {
								"text": "Cloud Storage Anonymous or Publicly Accessible"
							},
							"fullDescription": {
								"text": "Cloud Storage Buckets must not be anonymously or publicly accessible, which means the attribute 'members' must not possess 'allUsers' or 'allAuthenticatedUsers'"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket_iam#google_storage_bucket_iam_binding",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "d6cabc3a-d57e-48c2-b341-bf3dd4f4a120",
							"name": "Cloud Storage Bucket Logging Not Enabled",
							"shortDescription": {
								"text": "Cloud Storage Bucket Logging Not Enabled"
							},
							"fullDescription": {
								"text": "Cloud storage bucket should have logging enabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#log_bucket",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "e7e961ac-d17e-4413-84bc-8a1fbe242944",
							"name": "Cloud Storage Bucket Versioning Disabled",
							"shortDescription": {
								"text": "Cloud Storage Bucket Versioning Disabled"
							},
							"fullDescription": {
								"text": "Cloud Storage Bucket should have versioning enabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#enabled",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "65c1bc7a-4835-4ac4-a2b6-13d310b0648d",
							"name": "Cluster Labels Disabled",
							"shortDescription": {
								"text": "Cluster Labels Disabled"
							},
							"fullDescription": {
								"text": "Kubernetes Clusters must be configured with labels, which means the attribute 'resource_labels' must be defined"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
							"name": "Container Is Privileged",
							"shortDescription": {
								"text": "Container Is Privileged"
							},
							"fullDescription": {
								"text": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "35113e6f-2c6b-414d-beec-7a9482d3b2d1",
							"name": "DB Instance Publicly Accessible",
							"shortDescription": {
								"text": "DB Instance Publicly Accessible"
							},
							"fullDescription": {
								"text": "RDS must not be defined with public interface, which means the field 'publicly_accessible' should not be set to 'true' (default is 'false')."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#publicly_accessible",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "de38e1d5-54cb-4111-a868-6f7722695007",
							"name": "DB Instance Publicly Accessible",
							"shortDescription": {
								"text": "DB Instance Publicly Accessible"
							},
							"fullDescription": {
								"text": "RDS must not be defined with public interface, which means the attribute 'PubliclyAccessible' must be set to false."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "08bd0760-8752-44e1-9779-7bb369b2b4e4",
							"name": "DB Instance Storage Not Encrypted",
							"shortDescription": {
								"text": "DB Instance Storage Not Encrypted"
							},
							"fullDescription": {
								"text": "AWS DB Instance should have its storage encrypted by setting the parameter to 'true'. The storage_encrypted default value is 'false'."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "9564406d-e761-4e61-b8d7-5926e3ab8e79",
							"name": "DB Security Group With Public Scope",
							"shortDescription": {
								"text": "DB Security Group With Public Scope"
							},
							"fullDescription": {
								"text": "The IP address in a DB Security Group should not be '0.0.0.0/0' (IPv4) or '::/0' (IPv6). If so, any IP can access it"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "e6b4b943-6883-47a9-9739-7ada9568f8ca",
							"name": "EBS Volume Snapshot Not Encrypted",
							"shortDescription": {
								"text": "EBS Volume Snapshot Not Encrypted"
							},
							"fullDescription": {
								"text": "The value on AWS EBS Volume Snapshot Encryptation must be true"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/ebs_snapshot#encrypted",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "5a2486aa-facf-477d-a5c1-b010789459ce",
							"name": "EC2 Instance Has Public IP",
							"shortDescription": {
								"text": "EC2 Instance Has Public IP"
							},
							"fullDescription": {
								"text": "EC2 Instance should not have a public IP address."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b3de4e4c-14be-4159-b99d-9ad194365e4c",
							"name": "EC2 Instance Subnet Has Public IP Mapping On Launch",
							"shortDescription": {
								"text": "EC2 Instance Subnet Has Public IP Mapping On Launch"
							},
							"fullDescription": {
								"text": "EC2 Instance Subnet should not have MapPublicIpOnLaunch set to true"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "63ebcb19-2739-4d3f-aa5c-e8bbb9b85281",
							"name": "EKS Cluster Encryption Disabled",
							"shortDescription": {
								"text": "EKS Cluster Encryption Disabled"
							},
							"fullDescription": {
								"text": "EKS Cluster should be encrypted"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "5baa92d2-d8ee-4c75-88a4-52d9d8bb8067",
							"name": "GKE Legacy Authorization Enabled",
							"shortDescription": {
								"text": "GKE Legacy Authorization Enabled"
							},
							"fullDescription": {
								"text": "Kubernetes Engine Clusters must have Legacy Authorization set to disabled, which means the attribute 'enable_legacy_abac' must not be true"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "8b042c30-e441-453f-b162-7696982ebc58",
							"name": "Geo Redundancy Is Disabled",
							"shortDescription": {
								"text": "Geo Redundancy Is Disabled"
							},
							"fullDescription": {
								"text": "Make sure that on PostgreSQL Geo Redundant Backups is enabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server",
							"relationships": [
								{
									"target": {
										"id": "CAT003",
										"index": 4,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "ffac8a12-322e-42c1-b9b9-81ff85c39ef7",
							"name": "HTTP Port Open To Internet",
							"shortDescription": {
								"text": "HTTP Port Open To Internet"
							},
							"fullDescription": {
								"text": "The HTTP port is open to the internet in a Security Group"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "ddfc4eaa-af23-409f-b96c-bf5c45dc4daa",
							"name": "HTTP Port Open To Internet",
							"shortDescription": {
								"text": "HTTP Port Open To Internet"
							},
							"fullDescription": {
								"text": "The HTTP port is open to the internet in a Security Group"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "88fd05e0-ac0e-43d2-ba6d-fc0ba60ae1a6",
							"name": "IAM Database Auth Not Enabled",
							"shortDescription": {
								"text": "IAM Database Auth Not Enabled"
							},
							"fullDescription": {
								"text": "IAM Database Auth Enabled should be configured to true when using compatible engine and version"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#iam_database_authentication_enabled",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "9fcd0a0a-9b6f-4670-a215-d94e6bf3f184",
							"name": "IAM Database Auth Not Enabled",
							"shortDescription": {
								"text": "IAM Database Auth Not Enabled"
							},
							"fullDescription": {
								"text": "IAM Database Auth Enabled should be configured to true when using compatible engine and version"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-enableiamdatabaseauthentication",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "c606ba1d-d736-43eb-ac24-e16108f3a9e0",
							"name": "IP Aliasing Disabled",
							"shortDescription": {
								"text": "IP Aliasing Disabled"
							},
							"fullDescription": {
								"text": "Kubernetes Clusters must be created with Alias IP ranges enabled, which means the attribut 'ip_allocation_policy' must be defined and, if defined, the attribute 'networking_mode' must be VPC_NATIVE "
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "7ebc9038-0bde-479a-acc4-6ed7b6758899",
							"name": "KMS Key With Vulnerable Policy",
							"shortDescription": {
								"text": "KMS Key With Vulnerable Policy"
							},
							"fullDescription": {
								"text": "Checks if the policy is vulnerable and needs updating."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "4d080822-5ee2-49a4-8984-68f3d4c890fc",
							"name": "Key Expiration Not Set",
							"shortDescription": {
								"text": "Key Expiration Not Set"
							},
							"fullDescription": {
								"text": "Make sure that for all keys the expiration date is set"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "ade36cf4-329f-4830-a83d-9db72c800507",
							"name": "MSSQL Server Public Network Access Enabled",
							"shortDescription": {
								"text": "MSSQL Server Public Network Access Enabled"
							},
							"fullDescription": {
								"text": "MSSQL Server public network access should be disabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#public_network_access_enabled",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "fd54f200-402c-4333-a5a4-36ef6709af2f",
							"name": "Missing User Instruction",
							"shortDescription": {
								"text": "Missing User Instruction"
							},
							"fullDescription": {
								"text": "A user should be specified in the dockerfile, otherwise the image will run as root"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.docker.com/engine/reference/builder/#user",
							"relationships": [
								{
									"target": {
										"id": "CAT005",
										"index": 13,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "73e42469-3a86-4f39-ad78-098f325b4e9f",
							"name": "MySQL SSL Connection Disabled",
							"shortDescription": {
								"text": "MySQL SSL Connection Disabled"
							},
							"fullDescription": {
								"text": "Make sure that for MySQL Database Server, 'Enforce SSL connection' is enabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f118890b-2468-42b1-9ce9-af35146b425b",
							"name": "MySQL Server Public Access Enabled",
							"shortDescription": {
								"text": "MySQL Server Public Access Enabled"
							},
							"fullDescription": {
								"text": "MySQL Server public access should be disabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "11e7550e-c4b6-472e-adff-c698f157cdd7",
							"name": "Network Policy Disabled",
							"shortDescription": {
								"text": "Network Policy Disabled"
							},
							"fullDescription": {
								"text": "Kubernetes Engine Clusters must have Network Policy enabled, meaning that the attribute 'network_policy.enabled' must be true and the attribute 'addons_config.network_policy_config.disabled' must be false "
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b90842e5-6779-44d4-9760-972f4c03ba1c",
							"name": "Network Watcher Flow Disabled",
							"shortDescription": {
								"text": "Network Watcher Flow Disabled"
							},
							"fullDescription": {
								"text": "Check if enable field in the resource azurerm_network_watcher_flow_log is false."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_watcher_flow_log",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b139213e-7d24-49c2-8025-c18faa21ecaa",
							"name": "Node Auto Upgrade Disabled",
							"shortDescription": {
								"text": "Node Auto Upgrade Disabled"
							},
							"fullDescription": {
								"text": "Kubernetes nodes must have auto upgrades set to true, which means Node 'auto_upgrade' should be enabled for Kubernetes Clusters"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade",
							"relationships": [
								{
									"target": {
										"id": "CAT011",
										"index": 14,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "62232513-b16f-4010-83d7-51d0e1d45426",
							"name": "OSS Bucket Public Access Enabled",
							"shortDescription": {
								"text": "OSS Bucket Public Access Enabled"
							},
							"fullDescription": {
								"text": "OSS Bucket should have public access disabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/oss_bucket#acl",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "76c0bcde-903d-456e-ac13-e58c34987852",
							"name": "Passwords And Secrets - AWS Access Key",
							"shortDescription": {
								"text": "Passwords And Secrets - AWS Access Key"
							},
							"fullDescription": {
								"text": "Query to find passwords and secrets in infrastructure code."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.kics.io/latest/secrets/",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "83ab47ff-381d-48cd-bac5-fb32222f54af",
							"name": "Passwords And Secrets - AWS Secret Key",
							"shortDescription": {
								"text": "Passwords And Secrets - AWS Secret Key"
							},
							"fullDescription": {
								"text": "Query to find passwords and secrets in infrastructure code."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.kics.io/latest/secrets/",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "74736dd1-dd11-4139-beb6-41cd43a50317",
							"name": "Passwords And Secrets - Generic API Key",
							"shortDescription": {
								"text": "Passwords And Secrets - Generic API Key"
							},
							"fullDescription": {
								"text": "Query to find passwords and secrets in infrastructure code."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.kics.io/latest/secrets/",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "7f370dd5-eea3-4e5f-8354-3cb2506f9f13",
							"name": "Passwords And Secrets - Generic Access Key",
							"shortDescription": {
								"text": "Passwords And Secrets - Generic Access Key"
							},
							"fullDescription": {
								"text": "Query to find passwords and secrets in infrastructure code."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.kics.io/latest/secrets/",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "487f4be7-3fd9-4506-a07a-eae252180c08",
							"name": "Passwords And Secrets - Generic Password",
							"shortDescription": {
								"text": "Passwords And Secrets - Generic Password"
							},
							"fullDescription": {
								"text": "Query to find passwords and secrets in infrastructure code."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.kics.io/latest/secrets/",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "3e2d3b2f-c22a-4df1-9cc6-a7a0aebb0c99",
							"name": "Passwords And Secrets - Generic Secret",
							"shortDescription": {
								"text": "Passwords And Secrets - Generic Secret"
							},
							"fullDescription": {
								"text": "Query to find passwords and secrets in infrastructure code."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.kics.io/latest/secrets/",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
							"name": "Passwords And Secrets - Generic Token",
							"shortDescription": {
								"text": "Passwords And Secrets - Generic Token"
							},
							"fullDescription": {
								"text": "Query to find passwords and secrets in infrastructure code."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.kics.io/latest/secrets/",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "e9856348-4069-4ac0-bd91-415f6a7b84a4",
							"name": "Passwords And Secrets - Google API Key",
							"shortDescription": {
								"text": "Passwords And Secrets - Google API Key"
							},
							"fullDescription": {
								"text": "Query to find passwords and secrets in infrastructure code."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.kics.io/latest/secrets/",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "9192e0f9-eca5-4056-9282-ae2a736a4088",
							"name": "Pod Security Policy Disabled",
							"shortDescription": {
								"text": "Pod Security Policy Disabled"
							},
							"fullDescription": {
								"text": "Kubernetes Clusters must have Pod Security Policy controller enabled, which means there must be a 'pod_security_policy_config' with the 'enabled' attribute equal to true"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "c407c3cf-c409-4b29-b590-db5f4138d332",
							"name": "PostgreSQL Server Threat Detection Policy Disabled",
							"shortDescription": {
								"text": "PostgreSQL Server Threat Detection Policy Disabled"
							},
							"fullDescription": {
								"text": "PostgreSQL Server Threat Detection Policy should be enabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#threat_detection_policy",
							"relationships": [
								{
									"target": {
										"id": "CAT011",
										"index": 14,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "6ccb85d7-0420-4907-9380-50313f80946b",
							"name": "Private Cluster Disabled",
							"shortDescription": {
								"text": "Private Cluster Disabled"
							},
							"fullDescription": {
								"text": "Kubernetes Clusters must be created with Private Clusters enabled, meaning the 'private_cluster_config' must be defined and the attributes 'enable_private_nodes' and 'enable_private_endpoint' must be true"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
							"name": "Privilege Escalation Allowed",
							"shortDescription": {
								"text": "Privilege Escalation Allowed"
							},
							"fullDescription": {
								"text": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "1b4565c0-4877-49ac-ab03-adebbccd42ae",
							"name": "RDS DB Instance Publicly Accessible",
							"shortDescription": {
								"text": "RDS DB Instance Publicly Accessible"
							},
							"fullDescription": {
								"text": "'0.0.0.0' or '0.0.0.0/0' should not be in 'security_ips' list"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/db_instance#security_ips",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "7a1ee8a9-71be-4b11-bb70-efb62d16863b",
							"name": "RDS Instance SSL Action Disabled",
							"shortDescription": {
								"text": "RDS Instance SSL Action Disabled"
							},
							"fullDescription": {
								"text": "ssl_action parameter should be set to Open for RDS instances"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/db_instance#ssl_action",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "5beacce3-4020-4a3d-9e1d-a36f953df630",
							"name": "RDS Storage Not Encrypted",
							"shortDescription": {
								"text": "RDS Storage Not Encrypted"
							},
							"fullDescription": {
								"text": "RDS Storage should be encrypted, which means the attribute 'StorageEncrypted' should be set to 'true'"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "3199c26c-7871-4cb3-99c2-10a59244ce7f",
							"name": "RDS Storage Not Encrypted",
							"shortDescription": {
								"text": "RDS Storage Not Encrypted"
							},
							"fullDescription": {
								"text": "RDS Storage should be encrypted, which means the attribute 'storage_encrypted' should be set to 'true'"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#storage_encrypted",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "38c5ee0d-7f22-4260-ab72-5073048df100",
							"name": "S3 Bucket ACL Allows Read Or Write to All Users",
							"shortDescription": {
								"text": "S3 Bucket ACL Allows Read Or Write to All Users"
							},
							"fullDescription": {
								"text": "S3 Buckets should not be readable and writable to all users"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "219f4c95-aa50-44e0-97de-cf71f4641170",
							"name": "S3 Bucket ACL Allows Read to All Users",
							"shortDescription": {
								"text": "S3 Bucket ACL Allows Read to All Users"
							},
							"fullDescription": {
								"text": "S3 Buckets should not be readable to all users"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "860ba89b-b8de-4e72-af54-d6aee4138a69",
							"name": "S3 Bucket Allows Public Policy",
							"shortDescription": {
								"text": "S3 Bucket Allows Public Policy"
							},
							"fullDescription": {
								"text": "S3 bucket allows public policy"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "5fb49a69-8d46-4495-a2f8-9c8c622b2b6e",
							"name": "S3 Bucket Object Not Encrypted",
							"shortDescription": {
								"text": "S3 Bucket Object Not Encrypted"
							},
							"fullDescription": {
								"text": "S3 Bucket Object should have server-side encryption enabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_object#server_side_encryption",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "6726dcc0-5ff5-459d-b473-a780bef7665c",
							"name": "S3 Bucket SSE Disabled",
							"shortDescription": {
								"text": "S3 Bucket SSE Disabled"
							},
							"fullDescription": {
								"text": "If algorithm is AES256 then the master key is null, empty or undefined, otherwise the master key is required"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#server_side_encryption_configuration",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "64ab651b-f5b2-4af0-8c89-ddd03c4d0e61",
							"name": "S3 Bucket SSE Disabled",
							"shortDescription": {
								"text": "S3 Bucket SSE Disabled"
							},
							"fullDescription": {
								"text": "If algorithm is AES256 then the master key is null, empty or undefined, otherwise the master key is required"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
							"name": "S3 Bucket Without Enabled MFA Delete",
							"shortDescription": {
								"text": "S3 Bucket Without Enabled MFA Delete"
							},
							"fullDescription": {
								"text": "S3 bucket without MFA Delete Enabled. MFA delete cannot be enabled through Terraform, it can be done by adding a MFA device (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable.html) and enabling versioning and MFA delete by using AWS CLI: 'aws s3api put-bucket-versioning --versioning-configuration=Status=Enabled,MFADelete=Enabled --bucket=\u003cBUCKET_NAME\u003e --mfa=\u003cMFA_SERIAL_NUMBER\u003e'. Please, also notice that MFA delete can not be used with lifecycle configurations"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#mfa_delete",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "350cd468-0e2c-44ef-9d22-cfb73a62523c",
							"name": "S3 Bucket Without Restriction Of Public Bucket",
							"shortDescription": {
								"text": "S3 Bucket Without Restriction Of Public Bucket"
							},
							"fullDescription": {
								"text": "S3 bucket without restriction of public bucket"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "38c64e76-c71e-4d92-a337-60174d1de1c9",
							"name": "S3 Bucket Without SSL In Write Actions",
							"shortDescription": {
								"text": "S3 Bucket Without SSL In Write Actions"
							},
							"fullDescription": {
								"text": "S3 Buckets should enforce encryption of data transfers using Secure Sockets Layer (SSL)"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b2e8752c-3497-4255-98d2-e4ae5b46bbf5",
							"name": "S3 Bucket Without Server-side-encryption",
							"shortDescription": {
								"text": "S3 Bucket Without Server-side-encryption"
							},
							"fullDescription": {
								"text": "S3 Buckets should have server-side encryption at rest enabled to protect sensitive data"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/default-bucket-encryption.html",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "cf3c7631-cd1e-42f3-8801-a561214a6e79",
							"name": "SQL DB Instance Backup Disabled",
							"shortDescription": {
								"text": "SQL DB Instance Backup Disabled"
							},
							"fullDescription": {
								"text": "Checks if backup configuration is enabled for all Cloud SQL Database instances"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
							"relationships": [
								{
									"target": {
										"id": "CAT003",
										"index": 4,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b187edca-b81e-4fdc-aff4-aab57db45edb",
							"name": "SQL DB Instance Publicly Accessible",
							"shortDescription": {
								"text": "SQL DB Instance Publicly Accessible"
							},
							"fullDescription": {
								"text": "Cloud SQL instances should not be publicly accessible."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "02474449-71aa-40a1-87ae-e14497747b00",
							"name": "SQL DB Instance With SSL Disabled",
							"shortDescription": {
								"text": "SQL DB Instance With SSL Disabled"
							},
							"fullDescription": {
								"text": "Cloud SQL Database Instance should have SLL enabled"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#require_ssl",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "0437633b-daa6-4bbc-8526-c0d2443b946e",
							"name": "SSL Enforce Disabled",
							"shortDescription": {
								"text": "SSL Enforce Disabled"
							},
							"fullDescription": {
								"text": "Make sure that for PosgreSQL, the 'Enforce SSL connection' is set to 'ENABLED'"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "dfa20ffa-f476-428f-a490-424b41e91c7f",
							"name": "Secret Expiration Not Set",
							"shortDescription": {
								"text": "Secret Expiration Not Set"
							},
							"fullDescription": {
								"text": "Make sure that for all secrets the expiration date is set"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "6e856af2-62d7-4ba2-adc1-73b62cef9cc1",
							"name": "Security Group With Unrestricted Access To SSH",
							"shortDescription": {
								"text": "Security Group With Unrestricted Access To SSH"
							},
							"fullDescription": {
								"text": "'SSH' (TCP:22) should not be public in AWS Security Group"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "65905cec-d691-4320-b320-2000436cb696",
							"name": "Security Group With Unrestricted Access To SSH",
							"shortDescription": {
								"text": "Security Group With Unrestricted Access To SSH"
							},
							"fullDescription": {
								"text": "'SSH' (TCP:22) should not be public in AWS Security Group"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "cdbb0467-2957-4a77-9992-7b55b29df7b7",
							"name": "Security Groups With Exposed Admin Ports",
							"shortDescription": {
								"text": "Security Groups With Exposed Admin Ports"
							},
							"fullDescription": {
								"text": "Security Groups should not have ports open in (20, 21, 22, 23, 115, 137, 138, 139, 2049, 3389)"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "4c7ebcb2-eae2-461e-bc83-456ee2d4f694",
							"name": "Stackdriver Logging Disabled",
							"shortDescription": {
								"text": "Stackdriver Logging Disabled"
							},
							"fullDescription": {
								"text": "Kubernetes Engine Clusters must have Stackdriver Logging enabled, which means the attribute 'logging_service' must either be undefined or set to 'logging.googleapis.com/kubernetes'"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "30e8dfd2-3591-4d19-8d11-79e93106c93d",
							"name": "Stackdriver Monitoring Disabled",
							"shortDescription": {
								"text": "Stackdriver Monitoring Disabled"
							},
							"fullDescription": {
								"text": "Kubernetes Engine Clusters must have Stackdriver Monitoring enabled, which means the attribute 'monitoring_service' must either be undefined or set to 'monitoring.googleapis.com/kubernetes'"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "12944ec4-1fa0-47be-8b17-42a034f937c2",
							"name": "Storage Account Not Forcing HTTPS",
							"shortDescription": {
								"text": "Storage Account Not Forcing HTTPS"
							},
							"fullDescription": {
								"text": "Storage Accounts should enforce the use of HTTPS"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "5400f379-a347-4bdd-a032-446465fdcc6f",
							"name": "Trusted Microsoft Services Not Enabled",
							"shortDescription": {
								"text": "Trusted Microsoft Services Not Enabled"
							},
							"fullDescription": {
								"text": "Trusted Microsoft Services should be enabled for Storage Account access"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "829ce3b8-065c-41a3-ad57-e0accfea82d2",
							"name": "Unknown Port Exposed To Internet",
							"shortDescription": {
								"text": "Unknown Port Exposed To Internet"
							},
							"fullDescription": {
								"text": "AWS Security Group should not have an unknown port exposed to the entire Internet"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "4728cd65-a20c-49da-8b31-9c08b423e4db",
							"name": "Unrestricted Security Group Ingress",
							"shortDescription": {
								"text": "Unrestricted Security Group Ingress"
							},
							"fullDescription": {
								"text": "Security groups allow ingress from 0.0.0.0:0 and/or ::/0"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://www.terraform.io/docs/providers/aws/r/security_group.html",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "4a1e6b34-1008-4e61-a5f2-1f7c276f8d14",
							"name": "Unrestricted Security Group Ingress",
							"shortDescription": {
								"text": "Unrestricted Security Group Ingress"
							},
							"fullDescription": {
								"text": "AWS Security Group Ingress CIDR should not be open to the world"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "38c71c00-c177-4cd7-8d36-cd1007cdb190",
							"name": "Vault Auditing Disabled",
							"shortDescription": {
								"text": "Vault Auditing Disabled"
							},
							"fullDescription": {
								"text": "Ensure that logging for Azure KeyVault is 'Enabled'"
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://www.terraform.io/docs/providers/azurerm/r/key_vault.html",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "11e9a948-c6c3-4a0f-8dcf-b5cf1763cdbe",
							"name": "Web App Accepting Traffic Other Than HTTPS",
							"shortDescription": {
								"text": "Web App Accepting Traffic Other Than HTTPS"
							},
							"fullDescription": {
								"text": "Web app should only accept HTTPS traffic in Azure Web App Service."
							},
							"defaultConfiguration": {
								"level": "error"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#https_only",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b17d8bb8-4c08-4785-867e-cb9e62a622aa",
							"name": "AKS Disk Encryption Set ID Undefined",
							"shortDescription": {
								"text": "AKS Disk Encryption Set ID Undefined"
							},
							"fullDescription": {
								"text": "Azure Container Service (AKS) should use Disk Encryption Set ID in supported types of disk"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#disk_encryption_set_id",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f5342045-b935-402d-adf1-8dbbd09c0eef",
							"name": "AKS Network Policy Misconfigured",
							"shortDescription": {
								"text": "AKS Network Policy Misconfigured"
							},
							"fullDescription": {
								"text": "Azure Kubernetes Service should have the proper network policy configuration to ensure the principle of least privileges, which means that 'network_profile.network_policy' should be defined"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/kubernetes_cluster",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "86f92117-eed8-4614-9c6c-b26da20ff37f",
							"name": "AKS RBAC Disabled",
							"shortDescription": {
								"text": "AKS RBAC Disabled"
							},
							"fullDescription": {
								"text": "Azure Container Service (AKS) instance should have role-based access control (RBAC) enabled"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#role_based_access_control",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "c065b98e-1515-4991-9dca-b602bd6a2fbb",
							"name": "Action Trail Logging For All Regions Disabled",
							"shortDescription": {
								"text": "Action Trail Logging For All Regions Disabled"
							},
							"fullDescription": {
								"text": "Action Trail Logging for all regions should be enabled"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/actiontrail_trail#trail_region",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "8a893e46-e267-485a-8690-51f39951de58",
							"name": "COS Node Image Not Used",
							"shortDescription": {
								"text": "COS Node Image Not Used"
							},
							"fullDescription": {
								"text": "The node image should be Container-Optimized OS(COS)"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#node_config",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
							"name": "CPU Limits Not Set",
							"shortDescription": {
								"text": "CPU Limits Not Set"
							},
							"fullDescription": {
								"text": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
							"relationships": [
								{
									"target": {
										"id": "CAT011",
										"index": 14,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
							"name": "CPU Requests Not Set",
							"shortDescription": {
								"text": "CPU Requests Not Set"
							},
							"fullDescription": {
								"text": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
							"relationships": [
								{
									"target": {
										"id": "CAT011",
										"index": 14,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
							"name": "Container Running As Root",
							"shortDescription": {
								"text": "Container Running As Root"
							},
							"fullDescription": {
								"text": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
							"name": "Container Running With Low UID",
							"shortDescription": {
								"text": "Container Running With Low UID"
							},
							"fullDescription": {
								"text": "Check if containers are running with low UID, which might cause conflicts with the host's user table."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "a5613650-32ec-4975-a305-31af783153ea",
							"name": "Default Azure Storage Account Network Access Is Too Permissive",
							"shortDescription": {
								"text": "Default Azure Storage Account Network Access Is Too Permissive"
							},
							"fullDescription": {
								"text": "Default Azure Storage Account network access should be set to Deny"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action",
							"relationships": [
								{
									"target": {
										"id": "CAT008",
										"index": 2,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b1d51728-7270-4991-ac2f-fc26e2695b38",
							"name": "Disk Encryption Disabled",
							"shortDescription": {
								"text": "Disk Encryption Disabled"
							},
							"fullDescription": {
								"text": "VM disks for critical VMs must be encrypted with Customer Supplied Encryption Keys (CSEK) or with Customer-managed encryption keys (CMEK), which means the attribute 'disk_encryption_key' must be defined and its sub attributes 'raw_key' or 'kms_key_self_link' must also be defined"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "cc997676-481b-4e93-aa81-d19f8c5e9b12",
							"name": "EBS Volume Encryption Disabled",
							"shortDescription": {
								"text": "EBS Volume Encryption Disabled"
							},
							"fullDescription": {
								"text": "EBS volumes should be encrypted"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "80b7ac3f-d2b7-4577-9b10-df7913497162",
							"name": "EBS Volume Encryption Disabled",
							"shortDescription": {
								"text": "EBS Volume Encryption Disabled"
							},
							"fullDescription": {
								"text": "EBS volumes should be encrypted"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b7063015-6c31-4658-a8e7-14f98f37fd42",
							"name": "EBS Volume Without KmsKeyId",
							"shortDescription": {
								"text": "EBS Volume Without KmsKeyId"
							},
							"fullDescription": {
								"text": "EBS Volume should specify a KmsKeyId value"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f914357d-8386-4d56-9ba6-456e5723f9a6",
							"name": "EC2 Instance Has No IAM Role",
							"shortDescription": {
								"text": "EC2 Instance Has No IAM Role"
							},
							"fullDescription": {
								"text": "Check if an EC2 instance refers to an IAM profile, which represents an IAM Role."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "d1846b12-20c5-4d45-8798-fc35b79268eb",
							"name": "ECR Image Tag Not Immutable",
							"shortDescription": {
								"text": "ECR Image Tag Not Immutable"
							},
							"fullDescription": {
								"text": "ECR should have an image tag be immutable. This prevents image tags from being overwritten."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "20018359-6fd7-4d05-ab26-d4dffccbdf79",
							"name": "ELB Access Log Disabled",
							"shortDescription": {
								"text": "ELB Access Log Disabled"
							},
							"fullDescription": {
								"text": "ELB should have logging enabled to help on error investigation"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elb#enabled",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "24e16922-4330-4e9d-be8a-caa90299466a",
							"name": "ElasticSearch Not Encrypted At Rest",
							"shortDescription": {
								"text": "ElasticSearch Not Encrypted At Rest"
							},
							"fullDescription": {
								"text": "Check if ElasticSearch encryption is disabled at Rest"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "967eb3e6-26fc-497d-8895-6428beb6e8e2",
							"name": "Elasticsearch Domain Not Encrypted Node To Node",
							"shortDescription": {
								"text": "Elasticsearch Domain Not Encrypted Node To Node"
							},
							"fullDescription": {
								"text": "Elasticsearch Domain encryption should be enabled node to node"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#node_to_node_encryption",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "16c4216a-50d3-4785-bfb2-4adb5144a8ba",
							"name": "Elasticsearch Domain With Vulnerable Policy",
							"shortDescription": {
								"text": "Elasticsearch Domain With Vulnerable Policy"
							},
							"fullDescription": {
								"text": "Elasticsearch Domain policy should avoid wildcard in 'Action' and 'Principal'."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain_policy#access_policies",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "acb6b4e2-a086-4f35-aefd-4db6ea51ada2",
							"name": "Elasticsearch Log Disabled",
							"shortDescription": {
								"text": "Elasticsearch Log Disabled"
							},
							"fullDescription": {
								"text": "AWS Elasticsearch should have logs enabled"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_publishing_options",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "9db38e87-f6aa-4b5e-a1ec-7266df259409",
							"name": "Email Alerts Disabled",
							"shortDescription": {
								"text": "Email Alerts Disabled"
							},
							"fullDescription": {
								"text": "Make sure that alerts notifications are set to 'On' in the Azure Security Center Contact"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_contact",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "a99130ab-4c0e-43aa-97f8-78d4fcb30024",
							"name": "Encryption On Managed Disk Disabled",
							"shortDescription": {
								"text": "Encryption On Managed Disk Disabled"
							},
							"fullDescription": {
								"text": "Ensure that the encryption is active on the disk"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/managed_disk#encryption_settings",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "22ef1d26-80f8-4a6c-8c15-f35aab3cac78",
							"name": "Google Compute Network Using Firewall Rule that Allows All Ports",
							"shortDescription": {
								"text": "Google Compute Network Using Firewall Rule that Allows All Ports"
							},
							"fullDescription": {
								"text": "Google Compute Network should not use a firewall rule that allows all ports"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall#allow",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "40430747-442d-450a-a34f-dc57149f4609",
							"name": "Google Compute Subnetwork Logging Disabled",
							"shortDescription": {
								"text": "Google Compute Subnetwork Logging Disabled"
							},
							"fullDescription": {
								"text": "This query checks if logs are enabled for a Google Compute Subnetwork resource."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_subnetwork",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "acfdbec6-4a17-471f-b412-169d77553332",
							"name": "Google Container Node Pool Auto Repair Disabled",
							"shortDescription": {
								"text": "Google Container Node Pool Auto Repair Disabled"
							},
							"fullDescription": {
								"text": "Google Container Node Pool Auto Repair should be enabled. This service periodically checks for failing nodes and repairs them to ensure a smooth running state."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "bb0db090-5509-4853-a827-75ced0b3caa0",
							"name": "Google Storage Bucket Level Access Disabled",
							"shortDescription": {
								"text": "Google Storage Bucket Level Access Disabled"
							},
							"fullDescription": {
								"text": "Google Storage Bucket Level Access should be enabled"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "d7b9d850-3e06-4a75-852f-c46c2e92240b",
							"name": "Hardcoded AWS Access Key",
							"shortDescription": {
								"text": "Hardcoded AWS Access Key"
							},
							"fullDescription": {
								"text": "AWS Access Key should not be hardcoded"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "1402afd8-a95c-4e84-8b0b-6fb43758e6ce",
							"name": "Hardcoded AWS Access Key In Lambda",
							"shortDescription": {
								"text": "Hardcoded AWS Access Key In Lambda"
							},
							"fullDescription": {
								"text": "Lambda access/secret keys should not be hardcoded"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b4378389-a9aa-44ee-91e7-ef183f11079e",
							"name": "IAM Policies Attached To User",
							"shortDescription": {
								"text": "IAM Policies Attached To User"
							},
							"fullDescription": {
								"text": "IAM policies should be attached only to groups or roles"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy_attachment",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "a964d6e3-8e1e-4d93-8120-61fa640dd55a",
							"name": "IAM User Without Password Reset",
							"shortDescription": {
								"text": "IAM User Without Password Reset"
							},
							"fullDescription": {
								"text": "IAM User Login Profile should exist and have PasswordResetRequired property set to true"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f34c0c25-47b4-41eb-9c79-249b4dd47b89",
							"name": "IP Forwarding Enabled",
							"shortDescription": {
								"text": "IP Forwarding Enabled"
							},
							"fullDescription": {
								"text": "Instances must not have IP forwarding enabled, which means the attribute 'can_ip_forward' must not be true"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/data-sources/compute_instance",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "8a6d36cd-0bc6-42b7-92c4-67acc8576861",
							"name": "Instance With No VPC",
							"shortDescription": {
								"text": "Instance With No VPC"
							},
							"fullDescription": {
								"text": "EC2 Instances should be configured under a VPC network. AWS VPCs provide the controls to facilitate a formal process for approving and testing all network connections and changes to the firewall and router configurations."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "235ca980-eb71-48f4-9030-df0c371029eb",
							"name": "KMS Key Rotation Disabled",
							"shortDescription": {
								"text": "KMS Key Rotation Disabled"
							},
							"fullDescription": {
								"text": "EnableKeyRotation should not be false or undefined"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "e649a218-d099-4550-86a4-1231e1fcb60d",
							"name": "Low RDS Backup Retention Period",
							"shortDescription": {
								"text": "Low RDS Backup Retention Period"
							},
							"fullDescription": {
								"text": "AWS RDS backup retention policy should be at least 7 days"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html",
							"relationships": [
								{
									"target": {
										"id": "CAT003",
										"index": 4,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "609839ae-bd81-4375-9910-5bce72ae7b92",
							"name": "MSSQL Server Auditing Disabled",
							"shortDescription": {
								"text": "MSSQL Server Auditing Disabled"
							},
							"fullDescription": {
								"text": "Make sure that for MSSQL Servers, that 'Auditing' is set to 'On'"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
							"name": "Memory Limits Not Defined",
							"shortDescription": {
								"text": "Memory Limits Not Defined"
							},
							"fullDescription": {
								"text": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
							"relationships": [
								{
									"target": {
										"id": "CAT011",
										"index": 14,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
							"name": "Memory Requests Not Defined",
							"shortDescription": {
								"text": "Memory Requests Not Defined"
							},
							"fullDescription": {
								"text": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
							"relationships": [
								{
									"target": {
										"id": "CAT011",
										"index": 14,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
							"name": "NET_RAW Capabilities Not Being Dropped",
							"shortDescription": {
								"text": "NET_RAW Capabilities Not Being Dropped"
							},
							"fullDescription": {
								"text": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "c91d7ea0-d4d1-403b-8fe1-c9961ac082c5",
							"name": "Neptune Cluster With IAM Database Authentication Disabled",
							"shortDescription": {
								"text": "Neptune Cluster With IAM Database Authentication Disabled"
							},
							"fullDescription": {
								"text": "Neptune Cluster should have IAM Database Authentication enabled"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "98d59056-f745-4ef5-8613-32bca8d40b7e",
							"name": "Neptune Database Cluster Encryption Disabled",
							"shortDescription": {
								"text": "Neptune Database Cluster Encryption Disabled"
							},
							"fullDescription": {
								"text": "Neptune database cluster storage should have encryption enabled"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
							"name": "Non Kube System Pod With Host Mount",
							"shortDescription": {
								"text": "Non Kube System Pod With Host Mount"
							},
							"fullDescription": {
								"text": "A non kube-system workload should not have hostPath mounted"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/storage/volumes/",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b86987e1-6397-4619-81d5-8807f2387c79",
							"name": "Not Using JSON In CMD And ENTRYPOINT Arguments",
							"shortDescription": {
								"text": "Not Using JSON In CMD And ENTRYPOINT Arguments"
							},
							"fullDescription": {
								"text": "Ensure that we are using JSON in the CMD and ENTRYPOINT Arguments"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.docker.com/engine/reference/builder/#entrypoint",
							"relationships": [
								{
									"target": {
										"id": "CAT005",
										"index": 13,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "d0b4d550-c001-46c3-bbdb-d5d75d33f05f",
							"name": "OSLogin Is Disabled For VM Instance",
							"shortDescription": {
								"text": "OSLogin Is Disabled For VM Instance"
							},
							"fullDescription": {
								"text": "Check if any VM instance disables OSLogin"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f20e97f9-4919-43f1-9be9-f203cd339cdd",
							"name": "OSS Bucket Encryption Using CMK Disabled",
							"shortDescription": {
								"text": "OSS Bucket Encryption Using CMK Disabled"
							},
							"fullDescription": {
								"text": "OSS Bucket should have encryption enabled using Customer Master Key"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/oss_bucket#server_side_encryption_rule",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "05db341e-de7d-4972-a106-3e2bd5ee53e1",
							"name": "OSS Bucket Logging Disabled",
							"shortDescription": {
								"text": "OSS Bucket Logging Disabled"
							},
							"fullDescription": {
								"text": "OSS Bucket should have logging enabled, for better visibility of resources and objects."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/oss_bucket#logging",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "70919c0b-2548-4e6b-8d7a-3d84ab6dabba",
							"name": "OSS Bucket Versioning Disabled",
							"shortDescription": {
								"text": "OSS Bucket Versioning Disabled"
							},
							"fullDescription": {
								"text": "OSS Bucket should have versioning enabled"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/oss_bucket#versioning",
							"relationships": [
								{
									"target": {
										"id": "CAT003",
										"index": 4,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "3790d386-be81-4dcf-9850-eaa7df6c10d9",
							"name": "PostgreSQL Log Checkpoints Disabled",
							"shortDescription": {
								"text": "PostgreSQL Log Checkpoints Disabled"
							},
							"fullDescription": {
								"text": "Make sure that for Postgre SQL Database Server, parameter 'log_checkpoints' is set to 'ON'"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "2b3c671f-1b76-4741-8789-ed1fe0785dc4",
							"name": "PostgreSQL Server Without Connection Throttling",
							"shortDescription": {
								"text": "PostgreSQL Server Without Connection Throttling"
							},
							"fullDescription": {
								"text": "Ensure that Connection Throttling is set for the PostgreSQL server"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "3e4d5ce6-3280-4027-8010-c26eeea1ec01",
							"name": "Project-wide SSH Keys Are Enabled In VM Instances",
							"shortDescription": {
								"text": "Project-wide SSH Keys Are Enabled In VM Instances"
							},
							"fullDescription": {
								"text": "VM Instance should block project-wide SSH keys"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance",
							"relationships": [
								{
									"target": {
										"id": "CAT012",
										"index": 10,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "678fd659-96f2-454a-a2a0-c2571f83a4a3",
							"name": "RDP Access Is Not Restricted",
							"shortDescription": {
								"text": "RDP Access Is Not Restricted"
							},
							"fullDescription": {
								"text": "Check if the Google compute firewall allows unrestricted RDP access. Allowed ports should not contain RDP port 3389"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "dc158941-28ce-481d-a7fa-dc80761edf46",
							"name": "RDS Instance Retention Period Not Recommended",
							"shortDescription": {
								"text": "RDS Instance Retention Period Not Recommended"
							},
							"fullDescription": {
								"text": "RDS Instance SQL Retention Period should be greater than 180"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/db_instance#sql_collector_config_value",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "2b1d4935-9acf-48a7-8466-10d18bf51a69",
							"name": "RDS Multi-AZ Deployment Disabled",
							"shortDescription": {
								"text": "RDS Multi-AZ Deployment Disabled"
							},
							"fullDescription": {
								"text": "AWS RDS Instance should have a multi-az deployment"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
							"relationships": [
								{
									"target": {
										"id": "CAT003",
										"index": 4,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "1dc73fb4-5b51-430c-8c5f-25dcf9090b02",
							"name": "RDS With Backup Disabled",
							"shortDescription": {
								"text": "RDS With Backup Disabled"
							},
							"fullDescription": {
								"text": "Make sure the AWS RDS configuration has automatic backup configured. If the retention period is equal to 0 there is no backup"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance",
							"relationships": [
								{
									"target": {
										"id": "CAT003",
										"index": 4,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "8c415f6f-7b90-4a27-a44a-51047e1506f9",
							"name": "RDS With Backup Disabled",
							"shortDescription": {
								"text": "RDS With Backup Disabled"
							},
							"fullDescription": {
								"text": "Make sure the AWS RDS configuration has automatic backup configured. If the retention period is equal to 0 there is no backup"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
							"relationships": [
								{
									"target": {
										"id": "CAT003",
										"index": 4,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f4a6bcd3-e231-4acf-993c-aa027be50d2e",
							"name": "RUN Instruction Using 'cd' Instead of WORKDIR",
							"shortDescription": {
								"text": "RUN Instruction Using 'cd' Instead of WORKDIR"
							},
							"fullDescription": {
								"text": "When using RUN command 'cd' should only be used for full path. For relative path make use of WORKDIR command instead."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
							"relationships": [
								{
									"target": {
										"id": "CAT005",
										"index": 13,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
							"name": "Readiness Probe Is Not Configured",
							"shortDescription": {
								"text": "Readiness Probe Is Not Configured"
							},
							"fullDescription": {
								"text": "Check if Readiness Probe is not configured."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
							"relationships": [
								{
									"target": {
										"id": "CAT002",
										"index": 15,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "3fa5900f-9aac-4982-96b2-a6143d9c99fb",
							"name": "Role Definition Allows Custom Role Creation",
							"shortDescription": {
								"text": "Role Definition Allows Custom Role Creation"
							},
							"fullDescription": {
								"text": "Role Definition should not allow custom role creation (Microsoft.Authorization/roleDefinitions/write)"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/role_definition#actions",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "4f0908b9-eb66-433f-9145-134274e1e944",
							"name": "RouterTable with Default Routing",
							"shortDescription": {
								"text": "RouterTable with Default Routing"
							},
							"fullDescription": {
								"text": "NAT gateways are recommended, and not the default route which permits all traffic, in Route Tables."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html",
							"relationships": [
								{
									"target": {
										"id": "CAT008",
										"index": 2,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "48f100d9-f499-4c6d-b2b8-deafe47ffb26",
							"name": "S3 Bucket Allows Public ACL",
							"shortDescription": {
								"text": "S3 Bucket Allows Public ACL"
							},
							"fullDescription": {
								"text": "S3 bucket allows public ACL"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f861041c-8c9f-4156-acfc-5e6e524f5884",
							"name": "S3 Bucket Logging Disabled",
							"shortDescription": {
								"text": "S3 Bucket Logging Disabled"
							},
							"fullDescription": {
								"text": "Server Access Logging should be enabled on S3 Buckets so that all changes are logged and trackable"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "4552b71f-0a2a-4bc4-92dd-ed7ec1b4674c",
							"name": "S3 Bucket Logging Disabled",
							"shortDescription": {
								"text": "S3 Bucket Logging Disabled"
							},
							"fullDescription": {
								"text": "Server Access Logging should be enabled on S3 Buckets so that all changes are logged and trackable"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-loggingconfig",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "37fa8188-738b-42c8-bf82-6334ea567738",
							"name": "S3 Bucket Should Have Bucket Policy",
							"shortDescription": {
								"text": "S3 Bucket Should Have Bucket Policy"
							},
							"fullDescription": {
								"text": "Checks if S3 Bucket has the same name as a Bucket Policy, if it has, S3 Bucket has a Bucket Policy associated"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html",
							"relationships": [
								{
									"target": {
										"id": "CAT008",
										"index": 2,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "568a4d22-3517-44a6-a7ad-6a7eed88722c",
							"name": "S3 Bucket Without Versioning",
							"shortDescription": {
								"text": "S3 Bucket Without Versioning"
							},
							"fullDescription": {
								"text": "S3 bucket should have versioning enabled"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "a227ec01-f97a-4084-91a4-47b350c1db54",
							"name": "S3 Bucket Without Versioning",
							"shortDescription": {
								"text": "S3 Bucket Without Versioning"
							},
							"fullDescription": {
								"text": "S3 bucket should have versioning enabled"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f7e296b0-6660-4bc5-8f87-22ac4a815edf",
							"name": "SQL Server Auditing Disabled",
							"shortDescription": {
								"text": "SQL Server Auditing Disabled"
							},
							"fullDescription": {
								"text": "Make sure that for SQL Servers, 'Auditing' is set to 'On'"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "c4dcdcdf-10dd-4bf4-b4a0-8f6239e6aaa0",
							"name": "SSH Access Is Not Restricted",
							"shortDescription": {
								"text": "SSH Access Is Not Restricted"
							},
							"fullDescription": {
								"text": "Google Firewall should not allow SSH access (port 22) from the Internet (public CIDR block) to ensure the principle of least privileges"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
							"name": "Seccomp Profile Is Not Configured",
							"shortDescription": {
								"text": "Seccomp Profile Is Not Configured"
							},
							"fullDescription": {
								"text": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "819d50fd-1cdf-45c3-9936-be408aaad93e",
							"name": "Security Center Pricing Tier Is Not Standard",
							"shortDescription": {
								"text": "Security Center Pricing Tier Is Not Standard"
							},
							"fullDescription": {
								"text": "Make sure that the 'Standard' pricing tiers were selected."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "97fa667a-d05b-4f16-9071-58b939f34751",
							"name": "Serial Ports Are Enabled For VM Instances",
							"shortDescription": {
								"text": "Serial Ports Are Enabled For VM Instances"
							},
							"fullDescription": {
								"text": "Google Compute Engine VM instances should not enable serial ports. When enabled, anyone can access your VM, if they know the username, project ID, SSH key, instance name and zone"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
							"name": "Service Account Token Automount Not Disabled",
							"shortDescription": {
								"text": "Service Account Token Automount Not Disabled"
							},
							"fullDescription": {
								"text": "Service Account Tokens are automatically mounted even if not necessary"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
							"relationships": [
								{
									"target": {
										"id": "CAT008",
										"index": 2,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
							"name": "Service With External Load Balancer",
							"shortDescription": {
								"text": "Service With External Load Balancer"
							},
							"fullDescription": {
								"text": "Service has an external load balancer, which may cause accessibility from other networks and the Internet"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "2b856bf9-8e8c-4005-875f-303a8cba3918",
							"name": "Small Activity Log Retention Period",
							"shortDescription": {
								"text": "Small Activity Log Retention Period"
							},
							"fullDescription": {
								"text": "Ensure that Activity Log Retention is set 365 days or greater"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "7750fcca-dd03-4d38-b663-4b70289bcfd4",
							"name": "Small Flow Logs Retention Period",
							"shortDescription": {
								"text": "Small Flow Logs Retention Period"
							},
							"fullDescription": {
								"text": "Flow logs enable capturing information about IP traffic flowing in and out of the network security groups. Network Security Group Flow Logs must be enabled with retention period greater than or equal to 90 days. This is important, because these logs are used to check for anomalies and give information of suspected breaches"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_watcher_flow_log",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "d3499f6d-1651-41bb-a9a7-de925fea487b",
							"name": "Unpinned Package Version in Apk Add",
							"shortDescription": {
								"text": "Unpinned Package Version in Apk Add"
							},
							"fullDescription": {
								"text": "Package version pinning reduces the range of versions that can be installed, reducing the chances of failure due to unanticipated changes"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
							"relationships": [
								{
									"target": {
										"id": "CAT013",
										"index": 6,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "9630336b-3fed-4096-8173-b9afdfe346a7",
							"name": "Unscanned ECR Image",
							"shortDescription": {
								"text": "Unscanned ECR Image"
							},
							"fullDescription": {
								"text": "Checks if the ECR Image has been scanned"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#scan_on_push",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "9bae49be-0aa3-4de5-bab2-4c3a069e40cd",
							"name": "Update Instruction Alone",
							"shortDescription": {
								"text": "Update Instruction Alone"
							},
							"fullDescription": {
								"text": "Instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run",
							"relationships": [
								{
									"target": {
										"id": "CAT005",
										"index": 13,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "3cb4af0b-056d-4fb1-8b95-fdc4593625ff",
							"name": "Using Default Service Account",
							"shortDescription": {
								"text": "Using Default Service Account"
							},
							"fullDescription": {
								"text": "Instances should not be configured to use the Default Service Account, that has full access to all Cloud APIs, which means the attribute 'service_account' and its sub attribute 'email' must be defined. Additionally, 'email' must not be empty and must also not be a default Google Compute Engine service account."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance",
							"relationships": [
								{
									"target": {
										"id": "CAT008",
										"index": 2,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
							"name": "Using Unrecommended Namespace",
							"shortDescription": {
								"text": "Using Unrecommended Namespace"
							},
							"fullDescription": {
								"text": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "52f04a44-6bfa-4c41-b1d3-4ae99a2de05c",
							"name": "VPC Subnet Assigns Public IP",
							"shortDescription": {
								"text": "VPC Subnet Assigns Public IP"
							},
							"fullDescription": {
								"text": "VPC Subnet should not assign public IP"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "3e293410-d5b8-411f-85fd-7d26294f20c9",
							"name": "VPC Without Network Firewall",
							"shortDescription": {
								"text": "VPC Without Network Firewall"
							},
							"fullDescription": {
								"text": "VPC should have a Network Firewall associated"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-vpcid",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "fd632aaf-b8a1-424d-a4d1-0de22fd3247a",
							"name": "VPC Without Network Firewall",
							"shortDescription": {
								"text": "VPC Without Network Firewall"
							},
							"fullDescription": {
								"text": "VPC should have a Network Firewall associated"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkfirewall_firewall#vpc_id",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b4cc2c52-34a6-4b43-b57c-4bdeb4514a5a",
							"name": "Virtual Network with DDoS Protection Plan disabled",
							"shortDescription": {
								"text": "Virtual Network with DDoS Protection Plan disabled"
							},
							"fullDescription": {
								"text": "Virtual Network should have DDoS Protection Plan enabled"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
							"relationships": [
								{
									"target": {
										"id": "CAT002",
										"index": 15,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
							"name": "Volume Mount With OS Directory Write Permissions",
							"shortDescription": {
								"text": "Volume Mount With OS Directory Write Permissions"
							},
							"fullDescription": {
								"text": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/storage/volumes/",
							"relationships": [
								{
									"target": {
										"id": "CAT011",
										"index": 14,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "2e48d91c-50e4-45c8-9312-27b625868a72",
							"name": "WAF Is Disabled For Azure Application Gateway",
							"shortDescription": {
								"text": "WAF Is Disabled For Azure Application Gateway"
							},
							"fullDescription": {
								"text": "Check if Web Application Firewall is disabled or not configured for Azure's Application Gateway."
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/application_gateway",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
							"name": "Workload Mounting With Sensitive OS Directory",
							"shortDescription": {
								"text": "Workload Mounting With Sensitive OS Directory"
							},
							"fullDescription": {
								"text": "Workload is mounting a volume with sensitive OS Directory"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "00481784-25aa-4a55-8633-3136dfcf4f37",
							"name": "Yum Clean All Missing",
							"shortDescription": {
								"text": "Yum Clean All Missing"
							},
							"fullDescription": {
								"text": "Need to use 'yum clean all' after using a 'yum install' command to clean package cached data and reduce image size"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run",
							"relationships": [
								{
									"target": {
										"id": "CAT013",
										"index": 6,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "6452c424-1d92-4deb-bb18-a03e95d579c4",
							"name": "Yum install Without Version",
							"shortDescription": {
								"text": "Yum install Without Version"
							},
							"fullDescription": {
								"text": "Not specifying the package version can cause failures due to unanticipated changes in required packages"
							},
							"defaultConfiguration": {
								"level": "warning"
							},
							"helpUri": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run",
							"relationships": [
								{
									"target": {
										"id": "CAT013",
										"index": 6,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "43789711-161b-4708-b5bb-9d1c626f7492",
							"name": "AKS Uses Azure Policies Add-On Disabled",
							"shortDescription": {
								"text": "AKS Uses Azure Policies Add-On Disabled"
							},
							"fullDescription": {
								"text": "Azure Container Service (AKS) should use Azure Policies Add-On"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#azure_policy",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "525b53be-62ed-4244-b4df-41aecfcb4071",
							"name": "App Service HTTP2 Disabled",
							"shortDescription": {
								"text": "App Service HTTP2 Disabled"
							},
							"fullDescription": {
								"text": "App Service should have 'http2_enabled' enabled"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f0104061-8bfc-4b45-8a7d-630eb502f281",
							"name": "Automatic Minor Upgrades Disabled",
							"shortDescription": {
								"text": "Automatic Minor Upgrades Disabled"
							},
							"fullDescription": {
								"text": "RDS instance should have automatic minor upgrades enabled, which means the attribute 'AutoMinorVersionUpgrade' must be set to true."
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "aa93e17f-b6db-4162-9334-c70334e7ac28",
							"name": "Chown Flag Exists",
							"shortDescription": {
								"text": "Chown Flag Exists"
							},
							"fullDescription": {
								"text": "It is considered a best practice for every executable in a container to be owned by the root user even if it is executed by a non-root user, only execution permissions are required on the file, not ownership"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "aee3c7d2-a811-4201-90c7-11c028be9a46",
							"name": "Container Requests Not Equal To It's Limits",
							"shortDescription": {
								"text": "Container Requests Not Equal To It's Limits"
							},
							"fullDescription": {
								"text": "Containers must have the same resource requests set as limits. This is recommended to avoid resource DDoS of the node during spikes and means that 'requests.memory' and 'requests.cpu' must equal 'limits.memory' and 'limits.cpu', respectively"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
							"relationships": [
								{
									"target": {
										"id": "CAT011",
										"index": 14,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "61c3cb8b-0715-47e4-b788-86dde40dd2db",
							"name": "Dashboard Is Enabled",
							"shortDescription": {
								"text": "Dashboard Is Enabled"
							},
							"fullDescription": {
								"text": "Check if the Kubernetes Dashboard is enabled."
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
							"name": "Deployment Without PodDisruptionBudget",
							"shortDescription": {
								"text": "Deployment Without PodDisruptionBudget"
							},
							"fullDescription": {
								"text": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
							"relationships": [
								{
									"target": {
										"id": "CAT002",
										"index": 15,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "a6f34658-fdfb-4154-9536-56d516f65828",
							"name": "Docker Daemon Socket is Exposed to Containers",
							"shortDescription": {
								"text": "Docker Daemon Socket is Exposed to Containers"
							},
							"fullDescription": {
								"text": "Sees if Docker Daemon Socket is not exposed to Containers"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/storage/volumes/",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "0b93729a-d882-4803-bdc3-ac429a21f158",
							"name": "EC2 Instance Using API Keys",
							"shortDescription": {
								"text": "EC2 Instance Using API Keys"
							},
							"fullDescription": {
								"text": "EC2 instances should use roles to be granted access to other AWS services"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#iam_instance_profile",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "0e32d561-4b5a-4664-a6e3-a3fa85649157",
							"name": "ECR Repository Not Encrypted With CMK",
							"shortDescription": {
								"text": "ECR Repository Not Encrypted With CMK"
							},
							"fullDescription": {
								"text": "ECR repositories should be encrypted with customer-managed keys to meet stricter security and compliance requirements on access control, monitoring, and key rotation"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "69e7c320-b65d-41bb-be02-d63ecc0bcc9d",
							"name": "ECR Repository Without Policy",
							"shortDescription": {
								"text": "ECR Repository Without Policy"
							},
							"fullDescription": {
								"text": "ECR Repository should have Policies attached to it"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository_policy",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "37304d3f-f852-40b8-ae3f-725e87a7cedf",
							"name": "EKS cluster logging is not enabled",
							"shortDescription": {
								"text": "EKS cluster logging is not enabled"
							},
							"fullDescription": {
								"text": "Amazon EKS control plane logging is not enabled"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "ee7b93c1-b3f8-4a3b-9588-146d481814f5",
							"name": "Google Compute Subnetwork with Private Google Access Disabled",
							"shortDescription": {
								"text": "Google Compute Subnetwork with Private Google Access Disabled"
							},
							"fullDescription": {
								"text": "Google Compute Subnetwork should have Private Google Access enabled, which means 'private_ip_google_access' should be set to true"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_subnetwork#private_ip_google_access",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "b03a748a-542d-44f4-bb86-9199ab4fd2d5",
							"name": "Healthcheck Instruction Missing",
							"shortDescription": {
								"text": "Healthcheck Instruction Missing"
							},
							"fullDescription": {
								"text": "Ensure that HEALTHCHECK is being used. The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.docker.com/engine/reference/builder/#healthcheck",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "e592a0c5-5bdb-414c-9066-5dba7cdea370",
							"name": "IAM Access Analyzer Not Enabled",
							"shortDescription": {
								"text": "IAM Access Analyzer Not Enabled"
							},
							"fullDescription": {
								"text": "IAM Access Analyzer should be enabled and configured to continuously monitor resource permissions"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/accessanalyzer_analyzer",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "06933df4-0ea7-461c-b9b5-104d27390e0e",
							"name": "IAM User With No Group",
							"shortDescription": {
								"text": "IAM User With No Group"
							},
							"fullDescription": {
								"text": "A IAM user should belong to a group"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-iam.html#scenario-iam-policy",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
							"name": "Image Pull Policy Of The Container Is Not Set To Always",
							"shortDescription": {
								"text": "Image Pull Policy Of The Container Is Not Set To Always"
							},
							"fullDescription": {
								"text": "Image Pull Policy of the container must be defined and set to Always"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "7c81d34c-8e5a-402b-9798-9f442630e678",
							"name": "Image Without Digest",
							"shortDescription": {
								"text": "Image Without Digest"
							},
							"fullDescription": {
								"text": "Images should be specified together with their digests to ensure integrity"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "583053b7-e632-46f0-b989-f81ff8045385",
							"name": "Invalid Image Tag",
							"shortDescription": {
								"text": "Invalid Image Tag"
							},
							"fullDescription": {
								"text": "Image tag must be defined and not be empty or equal to latest."
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
							"relationships": [
								{
									"target": {
										"id": "CAT013",
										"index": 6,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f8e08a38-fc6e-4915-abbe-a7aadf1d59ef",
							"name": "Key Vault Secrets Content Type Undefined",
							"shortDescription": {
								"text": "Key Vault Secrets Content Type Undefined"
							},
							"fullDescription": {
								"text": "Key Vault Secrets should have set Content Type"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "c2eae442-d3ba-4cb1-84ca-1db4f80eae3d",
							"name": "Lambda Function Without Dead Letter Queue",
							"shortDescription": {
								"text": "Lambda Function Without Dead Letter Queue"
							},
							"fullDescription": {
								"text": "AWS Lambda Function should be configured for a Dead Letter Queue(DLQ)"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-deadletterconfig",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "8152e0cf-d2f0-47ad-96d5-d003a76eabd1",
							"name": "Lambda Functions Without X-Ray Tracing",
							"shortDescription": {
								"text": "Lambda Functions Without X-Ray Tracing"
							},
							"fullDescription": {
								"text": "AWS Lambda functions should have TracingConfig enabled. For this, property 'tracing_Config.mode' should have the value 'Active'"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#tracing_config",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "9488c451-074e-4cd3-aee3-7db6104f542c",
							"name": "Lambda Functions Without X-Ray Tracing",
							"shortDescription": {
								"text": "Lambda Functions Without X-Ray Tracing"
							},
							"fullDescription": {
								"text": "AWS Lambda functions should have TracingConfig enabled. For this, property 'tracingConfig.mode' should have the value 'Active'"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "0ca1017d-3b80-423e-bb9c-6cd5898d34bd",
							"name": "Lambda IAM InvokeFunction Misconfigured",
							"shortDescription": {
								"text": "Lambda IAM InvokeFunction Misconfigured"
							},
							"fullDescription": {
								"text": "Lambda permission may be misconfigured if the action field is not filled in by 'lambda:InvokeFunction'"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "ade74944-a674-4e00-859e-c6eab5bde441",
							"name": "Liveness Probe Is Not Defined",
							"shortDescription": {
								"text": "Liveness Probe Is Not Defined"
							},
							"fullDescription": {
								"text": "In case of an unresponsive container, a Liveness Probe can help your application become more available since it restarts the container. However, it can lead to cascading failures. Define one if you really need it"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#when-should-you-use-a-liveness-probe",
							"relationships": [
								{
									"target": {
										"id": "CAT002",
										"index": 15,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "99614418-f82b-4852-a9ae-5051402b741c",
							"name": "MAINTAINER Instruction Being Used",
							"shortDescription": {
								"text": "MAINTAINER Instruction Being Used"
							},
							"fullDescription": {
								"text": "The MAINTAINER instruction sets the Author field of the generated images. The LABEL instruction is a much more flexible version of this and you should use it instead, as it enables setting any metadata you require, and can be viewed easily"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.docker.com/engine/reference/builder/#maintainer-deprecated",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
							"name": "Missing AppArmor Profile",
							"shortDescription": {
								"text": "Missing AppArmor Profile"
							},
							"fullDescription": {
								"text": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
							"name": "No Drop Capabilities for Containers",
							"shortDescription": {
								"text": "No Drop Capabilities for Containers"
							},
							"fullDescription": {
								"text": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "7db8bd7e-9772-478c-9ec5-4bc202c5686f",
							"name": "OSS Bucket Lifecycle Rule Disabled",
							"shortDescription": {
								"text": "OSS Bucket Lifecycle Rule Disabled"
							},
							"fullDescription": {
								"text": "OSS Bucket should have lifecycle rule enabled and set to true"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/oss_bucket#lifecycle_rule",
							"relationships": [
								{
									"target": {
										"id": "CAT003",
										"index": 4,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "8f98334a-99aa-4d85-b72a-1399ca010413",
							"name": "OSS Bucket Transfer Acceleration Disabled",
							"shortDescription": {
								"text": "OSS Bucket Transfer Acceleration Disabled"
							},
							"fullDescription": {
								"text": "OSS Bucket should have transfer acceleration enabled"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/oss_bucket#transfer_acceleration",
							"relationships": [
								{
									"target": {
										"id": "CAT002",
										"index": 15,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
							"name": "Pod or Container Without LimitRange",
							"shortDescription": {
								"text": "Pod or Container Without LimitRange"
							},
							"fullDescription": {
								"text": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/policy/limit-range/",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
							"name": "Pod or Container Without ResourceQuota",
							"shortDescription": {
								"text": "Pod or Container Without ResourceQuota"
							},
							"fullDescription": {
								"text": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "a97a340a-0063-418e-b3a1-3028941d0995",
							"name": "Pod or Container Without Security Context",
							"shortDescription": {
								"text": "Pod or Container Without Security Context"
							},
							"fullDescription": {
								"text": "A security context defines privilege and access control settings for a Pod or Container"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "6425c98b-ca4e-41fe-896a-c78772c131f8",
							"name": "PostgreSQL Server Infrastructure Encryption Disabled",
							"shortDescription": {
								"text": "PostgreSQL Server Infrastructure Encryption Disabled"
							},
							"fullDescription": {
								"text": "PostgreSQL Server Infrastructure Encryption should be enabled"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#infrastructure_encryption_enabled",
							"relationships": [
								{
									"target": {
										"id": "CAT006",
										"index": 1,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "2c161e58-cb52-454f-abea-6470c37b5e6e",
							"name": "RDS DB Instance With Deletion Protection Disabled",
							"shortDescription": {
								"text": "RDS DB Instance With Deletion Protection Disabled"
							},
							"fullDescription": {
								"text": "RDS DBInstance should have deletion protection set to true"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-deletionprotection",
							"relationships": [
								{
									"target": {
										"id": "CAT003",
										"index": 4,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "140869ea-25f2-40d4-a595-0c0da135114e",
							"name": "RDS Instance Log Connections Disabled",
							"shortDescription": {
								"text": "RDS Instance Log Connections Disabled"
							},
							"fullDescription": {
								"text": "'log_connections' parameter should be set to ON for RDS instances"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/db_instance#parameters",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "d53f4123-f8d8-4224-8cb3-f920b151cc98",
							"name": "RDS Instance Log Disconnections Disabled",
							"shortDescription": {
								"text": "RDS Instance Log Disconnections Disabled"
							},
							"fullDescription": {
								"text": "log_disconnections parameter should be set to ON for RDS instances"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/db_instance#parameters",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "a597e05a-c065-44e7-9cc8-742f572a504a",
							"name": "RDS Instance Log Duration Disabled",
							"shortDescription": {
								"text": "RDS Instance Log Duration Disabled"
							},
							"fullDescription": {
								"text": "log_duration parameter should be set to ON for RDS instances"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/resources/db_instance#parameters",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
							"name": "Root Container Not Mounted Read-only",
							"shortDescription": {
								"text": "Root Container Not Mounted Read-only"
							},
							"fullDescription": {
								"text": "Check if the root container filesystem is not being mounted read-only."
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
							"relationships": [
								{
									"target": {
										"id": "CAT005",
										"index": 13,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "6c8d51af-218d-4bfb-94a9-94eabaa0703a",
							"name": "S3 Bucket Without Ignore Public ACL",
							"shortDescription": {
								"text": "S3 Bucket Without Ignore Public ACL"
							},
							"fullDescription": {
								"text": "S3 bucket without ignore public ACL"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
							"name": "Service Does Not Target Pod",
							"shortDescription": {
								"text": "Service Does Not Target Pod"
							},
							"fullDescription": {
								"text": "Service should Target a Pod"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/services-networking/service/",
							"relationships": [
								{
									"target": {
										"id": "CAT007",
										"index": 5,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "ad7444cf-817a-4765-a79e-2145f7981faf",
							"name": "Shield Advanced Not In Use",
							"shortDescription": {
								"text": "Shield Advanced Not In Use"
							},
							"fullDescription": {
								"text": "AWS Shield Advanced should be used for Amazon Route 53 hosted zone, AWS Global Accelerator accelerator, Elastic IP Address, Elastic Load Balancing, and Amazon CloudFront Distribution to protect these resources against robust DDoS attacks"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html",
							"relationships": [
								{
									"target": {
										"id": "CAT009",
										"index": 9,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "68a51e22-ae5a-4d48-8e87-b01a323605c9",
							"name": "Using Unnamed Build Stages",
							"shortDescription": {
								"text": "Using Unnamed Build Stages"
							},
							"fullDescription": {
								"text": " This query is used to ensure that build stages are named. This way even if the Dockerfile is re-ordered, the COPY instruction doesn’t break."
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.docker.com/develop/develop-images/multistage-build/",
							"relationships": [
								{
									"target": {
										"id": "CAT005",
										"index": 13,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f6d299d2-21eb-41cc-b1e1-fe12d857500b",
							"name": "VPC FlowLogs Disabled",
							"shortDescription": {
								"text": "VPC FlowLogs Disabled"
							},
							"fullDescription": {
								"text": "Every VPC resource should have an associated Flow Log"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "f83121ea-03da-434f-9277-9cd247ab3047",
							"name": "VPC FlowLogs Disabled",
							"shortDescription": {
								"text": "VPC FlowLogs Disabled"
							},
							"fullDescription": {
								"text": "Every VPC resource should have an associated Flow Log"
							},
							"defaultConfiguration": {
								"level": "note"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "c7fc1481-2899-4490-bbd8-544a3a61a2f3",
							"name": "App Service Authentication Disabled",
							"shortDescription": {
								"text": "App Service Authentication Disabled"
							},
							"fullDescription": {
								"text": "Azure App Service authentication settings should be enabled"
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "23b70e32-032e-4fa6-ba5c-82f56b9980e6",
							"name": "EC2 Instance Monitoring Disabled",
							"shortDescription": {
								"text": "EC2 Instance Monitoring Disabled"
							},
							"fullDescription": {
								"text": "EC2 Instance should have detailed monitoring enabled. With detailed monitoring enabled data is available in 1-minute periods"
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#monitoring",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "60224630-175a-472a-9e23-133827040766",
							"name": "EC2 Not EBS Optimized",
							"shortDescription": {
								"text": "EC2 Not EBS Optimized"
							},
							"fullDescription": {
								"text": "It's considered a best practice for an EC2 instance to use an EBS optimized instance. This provides the best performance for your EBS volumes by minimizing contention between Amazon EBS I/O and other traffic from your instance"
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs_optimized",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "8dd0ff1f-0da4-48df-9bb3-7f338ae36a40",
							"name": "EC2 Not EBS Optimized",
							"shortDescription": {
								"text": "EC2 Not EBS Optimized"
							},
							"fullDescription": {
								"text": "It's considered a best practice for an EC2 instance to use an EBS optimized instance. This provides the best performance for your EBS volumes by minimizing contention between Amazon EBS I/O and other traffic from your instance"
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "e84eaf4d-2f45-47b2-abe8-e581b06deb66",
							"name": "Ensure Administrative Boundaries Between Resources",
							"shortDescription": {
								"text": "Ensure Administrative Boundaries Between Resources"
							},
							"fullDescription": {
								"text": "As a best practice, ensure that is made the correct use of namespaces to adequately administer your resources. Kubernetes Authorization plugins can also be used to create policies that segregate user access to namespaces."
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
							"relationships": [
								{
									"target": {
										"id": "CAT001",
										"index": 8,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
							"name": "Name Is Not Snake Case",
							"shortDescription": {
								"text": "Name Is Not Snake Case"
							},
							"fullDescription": {
								"text": "All names should follow snake case pattern."
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://www.terraform.io/docs/extend/best-practices/naming.html#naming",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "45cff7b6-3b80-40c1-ba7b-2cf480678bb8",
							"name": "Neptune Logging Is Disabled",
							"shortDescription": {
								"text": "Neptune Logging Is Disabled"
							},
							"fullDescription": {
								"text": "Neptune logging should be enabled"
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#enable_cloudwatch_logs_exports",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "59312e8a-a64e-41e7-a252-618533dd1ea8",
							"name": "Output Without Description",
							"shortDescription": {
								"text": "Output Without Description"
							},
							"fullDescription": {
								"text": "All outputs should contain a valid description."
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://www.terraform.io/docs/language/values/outputs.html#description-output-value-documentation",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "8d7f7b8c-6c7c-40f8-baa6-62006c6c7b56",
							"name": "RDS Without Logging",
							"shortDescription": {
								"text": "RDS Without Logging"
							},
							"fullDescription": {
								"text": "RDS does not have any kind of logger"
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#enabled_cloudwatch_logs_exports",
							"relationships": [
								{
									"target": {
										"id": "CAT010",
										"index": 3,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "e38a8e0a-b88b-4902-b3fe-b0fcb17d5c10",
							"name": "Resource Not Using Tags",
							"shortDescription": {
								"text": "Resource Not Using Tags"
							},
							"fullDescription": {
								"text": "AWS services resource tags are an essential part of managing components. As a best practice, the field 'tags' should have additional tags defined other than 'Name'"
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/guides/resource-tagging",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "55975007-f6e7-4134-83c3-298f1fe4b519",
							"name": "SQL Server Alert Email Disabled",
							"shortDescription": {
								"text": "SQL Server Alert Email Disabled"
							},
							"fullDescription": {
								"text": "SQL Server alert email should be enabled"
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "5e6c9c68-8a82-408e-8749-ddad78cbb9c5",
							"name": "Security Group Rule Without Description",
							"shortDescription": {
								"text": "Security Group Rule Without Description"
							},
							"fullDescription": {
								"text": "It's considered a best practice for AWS Security Group to have a description"
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "cb3f5ed6-0d18-40de-a93d-b3538db31e8c",
							"name": "Security Group Rule Without Description",
							"shortDescription": {
								"text": "Security Group Rule Without Description"
							},
							"fullDescription": {
								"text": "It's considered a best practice for AWS Security Group to have a description"
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group#description",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "68eb4bf3-f9bf-463d-b5cf-e029bb446d2e",
							"name": "Security Group Rule Without Description",
							"shortDescription": {
								"text": "Security Group Rule Without Description"
							},
							"fullDescription": {
								"text": "It's considered a best practice for all rules in AWS Security Group to have a description"
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group#description",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "2a153952-2544-4687-bcc9-cc8fea814a9b",
							"name": "Variable Without Description",
							"shortDescription": {
								"text": "Variable Without Description"
							},
							"fullDescription": {
								"text": "All variables should contain a valid description."
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://www.terraform.io/docs/language/values/variables.html#input-variable-documentation",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						},
						{
							"id": "fc5109bf-01fd-49fb-8bde-4492b543c34a",
							"name": "Variable Without Type",
							"shortDescription": {
								"text": "Variable Without Type"
							},
							"fullDescription": {
								"text": "All variables should contain a valid type."
							},
							"defaultConfiguration": {
								"level": "none"
							},
							"helpUri": "https://www.terraform.io/docs/language/values/variables.html#input-variable-documentation",
							"relationships": [
								{
									"target": {
										"id": "CAT004",
										"index": 12,
										"toolComponent": {
											"name": "Categories",
											"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
											"index": 0
										}
									}
								}
							]
						}
					]
				}
			},
			"results": [
				{
					"ruleId": "a3a055d2-9a2e-4cc9-b9fb-12850a1a3a4b",
					"ruleIndex": 0,
					"kind": "fail",
					"message": {
						"text": "A 'azurerm_sql_active_directory_administrator' is not defined for 'azurerm_sql_server[example]'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 9
								}
							}
						}
					]
				},
				{
					"ruleId": "599318f2-6653-4569-9e21-041d06c63a89",
					"ruleIndex": 1,
					"kind": "fail",
					"message": {
						"text": "'azurerm_kubernetes_cluster[k8s_cluster].private_cluster_enabled' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/aks.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "b61cce4b-0cc4-472b-8096-15617a6d769b",
					"ruleIndex": 2,
					"kind": "fail",
					"message": {
						"text": "'azurerm_app_service[app-service1].identity' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "b61cce4b-0cc4-472b-8096-15617a6d769b",
					"ruleIndex": 2,
					"kind": "fail",
					"message": {
						"text": "'azurerm_app_service[app-service2].identity' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 43
								}
							}
						}
					]
				},
				{
					"ruleId": "b7b9d1c7-2d3b-49b4-b867-ebbe68d0b643",
					"ruleIndex": 3,
					"kind": "fail",
					"message": {
						"text": "'azurerm_app_service[app-service1].site_config.min_tls_version' is not set to '1.2'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 29
								}
							}
						}
					]
				},
				{
					"ruleId": "3ddfa124-6407-4845-a501-179f90c65097",
					"ruleIndex": 4,
					"kind": "fail",
					"message": {
						"text": "The attribute(s) 'policy.Statement.Condition' or/and 'policy.Statement.Condition.BoolIfExists' or/and 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' is/are undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/iam.tf"
								},
								"region": {
									"startLine": 29
								}
							}
						}
					]
				},
				{
					"ruleId": "a81573f9-3691-4d83-88a0-7d4af63e17a3",
					"ruleIndex": 5,
					"kind": "fail",
					"message": {
						"text": "'azurerm_app_service[app-service2].client_cert_enabeld' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 43
								}
							}
						}
					]
				},
				{
					"ruleId": "a81573f9-3691-4d83-88a0-7d4af63e17a3",
					"ruleIndex": 5,
					"kind": "fail",
					"message": {
						"text": "'azurerm_app_service[app-service1].client_cert_enabeld' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "dafe30ec-325d-4516-85d1-e8e6776f012c",
					"ruleIndex": 6,
					"kind": "fail",
					"message": {
						"text": "'azurerm_linux_virtual_machine[linux_machine]' is using username and password for authentication"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/instance.tf"
								},
								"region": {
									"startLine": 9
								}
							}
						}
					]
				},
				{
					"ruleId": "e576ce44-dd03-4022-a8c0-3906acca2ab4",
					"ruleIndex": 7,
					"kind": "fail",
					"message": {
						"text": "'access.special_group' is equal to 'allAuthenticatedUsers'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/big_data.tf"
								},
								"region": {
									"startLine": 24
								}
							}
						}
					]
				},
				{
					"ruleId": "22fbfeac-7b5a-421a-8a27-7a2178bb910b",
					"ruleIndex": 8,
					"kind": "fail",
					"message": {
						"text": "aws_kms_key[logs_key].enable_key_rotation is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/kms.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "ffee2785-c347-451e-89f3-11aeb08e5c84",
					"ruleIndex": 9,
					"kind": "fail",
					"message": {
						"text": "Resources.DefaultDB.Properties.StorageEncrypted is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 488
								}
							}
						}
					]
				},
				{
					"ruleId": "a6cd52a1-3056-4910-96a5-894de9f3f3b3",
					"ruleIndex": 10,
					"kind": "fail",
					"message": {
						"text": "'google_storage_bucket_iam_binding[allow_public_read].members' has 'allUsers'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gcs.tf"
								},
								"region": {
									"startLine": 19
								}
							}
						}
					]
				},
				{
					"ruleId": "d6cabc3a-d57e-48c2-b341-bf3dd4f4a120",
					"ruleIndex": 11,
					"kind": "fail",
					"message": {
						"text": "'google_storage_bucket.logging' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gcs.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "e7e961ac-d17e-4413-84bc-8a1fbe242944",
					"ruleIndex": 12,
					"kind": "fail",
					"message": {
						"text": "'versioning' it undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gcs.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "65c1bc7a-4835-4ac4-a2b6-13d310b0648d",
					"ruleIndex": 13,
					"kind": "fail",
					"message": {
						"text": "Attribute 'resource_labels' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gke.tf"
								},
								"region": {
									"startLine": 6
								}
							}
						}
					]
				},
				{
					"ruleId": "dd29336b-fe57-445b-a26e-e6aa867ae609",
					"ruleIndex": 14,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.containers.name={{health-check}}.securityContext.privileged is true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 25
								}
							}
						}
					]
				},
				{
					"ruleId": "35113e6f-2c6b-414d-beec-7a9482d3b2d1",
					"ruleIndex": 15,
					"kind": "fail",
					"message": {
						"text": "'publicly_accessible' is set to true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/db-app.tf"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "de38e1d5-54cb-4111-a868-6f7722695007",
					"ruleIndex": 16,
					"kind": "fail",
					"message": {
						"text": "'Resources.DefaultDB.Properties.PubliclyAccessible' is set to true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 490
								}
							}
						}
					]
				},
				{
					"ruleId": "08bd0760-8752-44e1-9779-7bb369b2b4e4",
					"ruleIndex": 17,
					"kind": "fail",
					"message": {
						"text": "'storage_encrypted' is set to false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/db-app.tf"
								},
								"region": {
									"startLine": 19
								}
							}
						}
					]
				},
				{
					"ruleId": "9564406d-e761-4e61-b8d7-5926e3ab8e79",
					"ruleIndex": 18,
					"kind": "fail",
					"message": {
						"text": "'Resources.WebNodeSG.Properties.SecurityGroupIngress' is '0.0.0.0/0'."
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "e6b4b943-6883-47a9-9739-7ada9568f8ca",
					"ruleIndex": 19,
					"kind": "fail",
					"message": {
						"text": "'aws_ebs_volume[web_host_storage].encrypted' associated with aws_ebs_snapshot[example_snapshot] is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 53
								}
							}
						}
					]
				},
				{
					"ruleId": "5a2486aa-facf-477d-a5c1-b010789459ce",
					"ruleIndex": 20,
					"kind": "fail",
					"message": {
						"text": "'associate_public_ip_address' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/db-app.tf"
								},
								"region": {
									"startLine": 243
								}
							}
						}
					]
				},
				{
					"ruleId": "5a2486aa-facf-477d-a5c1-b010789459ce",
					"ruleIndex": 20,
					"kind": "fail",
					"message": {
						"text": "'associate_public_ip_address' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "b3de4e4c-14be-4159-b99d-9ad194365e4c",
					"ruleIndex": 21,
					"kind": "fail",
					"message": {
						"text": "'Resources.WebSubnet.Properties.MapPublicIpOnLaunch' is true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 182
								}
							}
						}
					]
				},
				{
					"ruleId": "b3de4e4c-14be-4159-b99d-9ad194365e4c",
					"ruleIndex": 21,
					"kind": "fail",
					"message": {
						"text": "'Resources.WebSubnet2.Properties.MapPublicIpOnLaunch' is true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 211
								}
							}
						}
					]
				},
				{
					"ruleId": "63ebcb19-2739-4d3f-aa5c-e8bbb9b85281",
					"ruleIndex": 22,
					"kind": "fail",
					"message": {
						"text": "'encryption_config' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "5baa92d2-d8ee-4c75-88a4-52d9d8bb8067",
					"ruleIndex": 23,
					"kind": "fail",
					"message": {
						"text": "Attribute 'enable_legacy_abac' is true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gke.tf"
								},
								"region": {
									"startLine": 12
								}
							}
						}
					]
				},
				{
					"ruleId": "8b042c30-e441-453f-b162-7696982ebc58",
					"ruleIndex": 24,
					"kind": "fail",
					"message": {
						"text": "'azurerm_postgresql_server.example.geo_redundant_backup_enabled' is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 80
								}
							}
						}
					]
				},
				{
					"ruleId": "ffac8a12-322e-42c1-b9b9-81ff85c39ef7",
					"ruleIndex": 25,
					"kind": "fail",
					"message": {
						"text": "aws_security_group.ingress opens the HTTP port (80)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 77
								}
							}
						}
					]
				},
				{
					"ruleId": "ddfc4eaa-af23-409f-b96c-bf5c45dc4daa",
					"ruleIndex": 26,
					"kind": "fail",
					"message": {
						"text": "Resources.WebNodeSG.Properties.SecurityGroupIngress[0] opens the HTTP port (80)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "88fd05e0-ac0e-43d2-ba6d-fc0ba60ae1a6",
					"ruleIndex": 27,
					"kind": "fail",
					"message": {
						"text": "'iam_database_authentication_enabled' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/db-app.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "9fcd0a0a-9b6f-4670-a215-d94e6bf3f184",
					"ruleIndex": 28,
					"kind": "fail",
					"message": {
						"text": "Resources.DefaultDB.Properties.EnableIAMDatabaseAuthentication is not defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 471
								}
							}
						}
					]
				},
				{
					"ruleId": "c606ba1d-d736-43eb-ac24-e16108f3a9e0",
					"ruleIndex": 29,
					"kind": "fail",
					"message": {
						"text": "Attributes 'ip_allocation_policy' and 'networking_mode' are undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gke.tf"
								},
								"region": {
									"startLine": 6
								}
							}
						}
					]
				},
				{
					"ruleId": "7ebc9038-0bde-479a-acc4-6ed7b6758899",
					"ruleIndex": 30,
					"kind": "fail",
					"message": {
						"text": "aws_kms_key[logs_key].policy is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/kms.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "4d080822-5ee2-49a4-8984-68f3d4c890fc",
					"ruleIndex": 31,
					"kind": "fail",
					"message": {
						"text": "'expiration_date' is missing"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/key_vault.tf"
								},
								"region": {
									"startLine": 33
								}
							}
						}
					]
				},
				{
					"ruleId": "ade36cf4-329f-4830-a83d-9db72c800507",
					"ruleIndex": 32,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server[mssql4].public_network_access_enabled' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 77
								}
							}
						}
					]
				},
				{
					"ruleId": "ade36cf4-329f-4830-a83d-9db72c800507",
					"ruleIndex": 32,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server[mssql7].public_network_access_enabled' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 134
								}
							}
						}
					]
				},
				{
					"ruleId": "ade36cf4-329f-4830-a83d-9db72c800507",
					"ruleIndex": 32,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server[mssql6].public_network_access_enabled' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 115
								}
							}
						}
					]
				},
				{
					"ruleId": "ade36cf4-329f-4830-a83d-9db72c800507",
					"ruleIndex": 32,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server[mssql2].public_network_access_enabled' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 39
								}
							}
						}
					]
				},
				{
					"ruleId": "ade36cf4-329f-4830-a83d-9db72c800507",
					"ruleIndex": 32,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server[mssql1].public_network_access_enabled' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 20
								}
							}
						}
					]
				},
				{
					"ruleId": "ade36cf4-329f-4830-a83d-9db72c800507",
					"ruleIndex": 32,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server[mssql3].public_network_access_enabled' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 58
								}
							}
						}
					]
				},
				{
					"ruleId": "ade36cf4-329f-4830-a83d-9db72c800507",
					"ruleIndex": 32,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server[mssql5].public_network_access_enabled' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 96
								}
							}
						}
					]
				},
				{
					"ruleId": "fd54f200-402c-4333-a5a4-36ef6709af2f",
					"ruleIndex": 33,
					"kind": "fail",
					"message": {
						"text": "The 'Dockerfile' does not contain any 'USER' instruction"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/resources/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "fd54f200-402c-4333-a5a4-36ef6709af2f",
					"ruleIndex": 33,
					"kind": "fail",
					"message": {
						"text": "The 'Dockerfile' does not contain any 'USER' instruction"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "73e42469-3a86-4f39-ad78-098f325b4e9f",
					"ruleIndex": 34,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mysql_server.example.ssl_enforcement_enabled' is equal 'false'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 60
								}
							}
						}
					]
				},
				{
					"ruleId": "f118890b-2468-42b1-9ce9-af35146b425b",
					"ruleIndex": 35,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mysql_server[example].public_network_access_enabled' is set to true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 59
								}
							}
						}
					]
				},
				{
					"ruleId": "11e7550e-c4b6-472e-adff-c698f157cdd7",
					"ruleIndex": 36,
					"kind": "fail",
					"message": {
						"text": "Attribute 'network_policy' is undefined or Attribute 'addons_config' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gke.tf"
								},
								"region": {
									"startLine": 6
								}
							}
						}
					]
				},
				{
					"ruleId": "b90842e5-6779-44d4-9760-972f4c03ba1c",
					"ruleIndex": 37,
					"kind": "fail",
					"message": {
						"text": "azurerm_network_watcher_flow_log.enabled is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/networking.tf"
								},
								"region": {
									"startLine": 126
								}
							}
						}
					]
				},
				{
					"ruleId": "b139213e-7d24-49c2-8025-c18faa21ecaa",
					"ruleIndex": 38,
					"kind": "fail",
					"message": {
						"text": "google_container_node_pool.management is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gke.tf"
								},
								"region": {
									"startLine": 24
								}
							}
						}
					]
				},
				{
					"ruleId": "62232513-b16f-4010-83d7-51d0e1d45426",
					"ruleIndex": 39,
					"kind": "fail",
					"message": {
						"text": "'acl' is public-read-write"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/bucket.tf"
								},
								"region": {
									"startLine": 7
								}
							}
						}
					]
				},
				{
					"ruleId": "76c0bcde-903d-456e-ac13-e58c34987852",
					"ruleIndex": 40,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 461
								}
							}
						}
					]
				},
				{
					"ruleId": "76c0bcde-903d-456e-ac13-e58c34987852",
					"ruleIndex": 40,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 69
								}
							}
						}
					]
				},
				{
					"ruleId": "76c0bcde-903d-456e-ac13-e58c34987852",
					"ruleIndex": 40,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 737
								}
							}
						}
					]
				},
				{
					"ruleId": "76c0bcde-903d-456e-ac13-e58c34987852",
					"ruleIndex": 40,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/providers.tf"
								},
								"region": {
									"startLine": 10
								}
							}
						}
					]
				},
				{
					"ruleId": "76c0bcde-903d-456e-ac13-e58c34987852",
					"ruleIndex": 40,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/lambda.tf"
								},
								"region": {
									"startLine": 45
								}
							}
						}
					]
				},
				{
					"ruleId": "76c0bcde-903d-456e-ac13-e58c34987852",
					"ruleIndex": 40,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 15
								}
							}
						}
					]
				},
				{
					"ruleId": "76c0bcde-903d-456e-ac13-e58c34987852",
					"ruleIndex": 40,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 538
								}
							}
						}
					]
				},
				{
					"ruleId": "76c0bcde-903d-456e-ac13-e58c34987852",
					"ruleIndex": 40,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 313
								}
							}
						}
					]
				},
				{
					"ruleId": "83ab47ff-381d-48cd-bac5-fb32222f54af",
					"ruleIndex": 41,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 16
								}
							}
						}
					]
				},
				{
					"ruleId": "83ab47ff-381d-48cd-bac5-fb32222f54af",
					"ruleIndex": 41,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 70
								}
							}
						}
					]
				},
				{
					"ruleId": "83ab47ff-381d-48cd-bac5-fb32222f54af",
					"ruleIndex": 41,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 738
								}
							}
						}
					]
				},
				{
					"ruleId": "74736dd1-dd11-4139-beb6-41cd43a50317",
					"ruleIndex": 42,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 847
								}
							}
						}
					]
				},
				{
					"ruleId": "74736dd1-dd11-4139-beb6-41cd43a50317",
					"ruleIndex": 42,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 253
								}
							}
						}
					]
				},
				{
					"ruleId": "7f370dd5-eea3-4e5f-8354-3cb2506f9f13",
					"ruleIndex": 43,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 461
								}
							}
						}
					]
				},
				{
					"ruleId": "7f370dd5-eea3-4e5f-8354-3cb2506f9f13",
					"ruleIndex": 43,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 207
								}
							}
						}
					]
				},
				{
					"ruleId": "7f370dd5-eea3-4e5f-8354-3cb2506f9f13",
					"ruleIndex": 43,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 538
								}
							}
						}
					]
				},
				{
					"ruleId": "7f370dd5-eea3-4e5f-8354-3cb2506f9f13",
					"ruleIndex": 43,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/lambda.tf"
								},
								"region": {
									"startLine": 45
								}
							}
						}
					]
				},
				{
					"ruleId": "7f370dd5-eea3-4e5f-8354-3cb2506f9f13",
					"ruleIndex": 43,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 313
								}
							}
						}
					]
				},
				{
					"ruleId": "7f370dd5-eea3-4e5f-8354-3cb2506f9f13",
					"ruleIndex": 43,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/providers.tf"
								},
								"region": {
									"startLine": 10
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 102
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 801
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 121
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 527
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 613
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 140
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 45
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 671
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 606
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 83
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 726
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 15
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 832
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 544
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 83
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 64
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 750
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 26
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 590
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 201
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 734
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 806
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 520
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 553
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 866
								}
							}
						}
					]
				},
				{
					"ruleId": "487f4be7-3fd9-4506-a07a-eae252180c08",
					"ruleIndex": 44,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 561
								}
							}
						}
					]
				},
				{
					"ruleId": "3e2d3b2f-c22a-4df1-9cc6-a7a0aebb0c99",
					"ruleIndex": 45,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/providers.tf"
								},
								"region": {
									"startLine": 11
								}
							}
						}
					]
				},
				{
					"ruleId": "3e2d3b2f-c22a-4df1-9cc6-a7a0aebb0c99",
					"ruleIndex": 45,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 586
								}
							}
						}
					]
				},
				{
					"ruleId": "3e2d3b2f-c22a-4df1-9cc6-a7a0aebb0c99",
					"ruleIndex": 45,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/lambda.tf"
								},
								"region": {
									"startLine": 46
								}
							}
						}
					]
				},
				{
					"ruleId": "3e2d3b2f-c22a-4df1-9cc6-a7a0aebb0c99",
					"ruleIndex": 45,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 314
								}
							}
						}
					]
				},
				{
					"ruleId": "3e2d3b2f-c22a-4df1-9cc6-a7a0aebb0c99",
					"ruleIndex": 45,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 539
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 546
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 240
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 858
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 841
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 825
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 212
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 327
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 614
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 236
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 852
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 224
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 985
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 731
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 579
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 597
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 819
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 818
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 547
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 255
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 741
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 926
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 837
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 860
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 254
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 720
								}
							}
						}
					]
				},
				{
					"ruleId": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
					"ruleIndex": 46,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 202
								}
							}
						}
					]
				},
				{
					"ruleId": "e9856348-4069-4ac0-bd91-415f6a7b84a4",
					"ruleIndex": 47,
					"kind": "fail",
					"message": {
						"text": "Hardcoded secret key appears in source"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 327
								}
							}
						}
					]
				},
				{
					"ruleId": "9192e0f9-eca5-4056-9282-ae2a736a4088",
					"ruleIndex": 48,
					"kind": "fail",
					"message": {
						"text": "Attribute 'pod_security_policy_config' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gke.tf"
								},
								"region": {
									"startLine": 6
								}
							}
						}
					]
				},
				{
					"ruleId": "c407c3cf-c409-4b29-b590-db5f4138d332",
					"ruleIndex": 49,
					"kind": "fail",
					"message": {
						"text": "'azurerm_postgresql_server[example].threat_detection_policy' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 73
								}
							}
						}
					]
				},
				{
					"ruleId": "6ccb85d7-0420-4907-9380-50313f80946b",
					"ruleIndex": 50,
					"kind": "fail",
					"message": {
						"text": "Attribute 'private_cluster_config' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gke.tf"
								},
								"region": {
									"startLine": 6
								}
							}
						}
					]
				},
				{
					"ruleId": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
					"ruleIndex": 51,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.securityContext.allowPrivilegeEscalation is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
					"ruleIndex": 51,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.containers.name={{health-check}}.securityContext.allowPrivilegeEscalation is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 24
								}
							}
						}
					]
				},
				{
					"ruleId": "1b4565c0-4877-49ac-ab03-adebbccd42ae",
					"ruleIndex": 52,
					"kind": "fail",
					"message": {
						"text": "'0.0.0.0' is in 'security_ips' list"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/rds.tf"
								},
								"region": {
									"startLine": 9
								}
							}
						}
					]
				},
				{
					"ruleId": "7a1ee8a9-71be-4b11-bb70-efb62d16863b",
					"ruleIndex": 53,
					"kind": "fail",
					"message": {
						"text": "'ssl_action' is not defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/rds.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "5beacce3-4020-4a3d-9e1d-a36f953df630",
					"ruleIndex": 54,
					"kind": "fail",
					"message": {
						"text": "Resources.DefaultDB.Properties.StorageEncrypted is set to false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 488
								}
							}
						}
					]
				},
				{
					"ruleId": "3199c26c-7871-4cb3-99c2-10a59244ce7f",
					"ruleIndex": 55,
					"kind": "fail",
					"message": {
						"text": "aws_rds_cluster.storage_encrypted is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 17
								}
							}
						}
					]
				},
				{
					"ruleId": "3199c26c-7871-4cb3-99c2-10a59244ce7f",
					"ruleIndex": 55,
					"kind": "fail",
					"message": {
						"text": "aws_rds_cluster.storage_encrypted is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 113
								}
							}
						}
					]
				},
				{
					"ruleId": "3199c26c-7871-4cb3-99c2-10a59244ce7f",
					"ruleIndex": 55,
					"kind": "fail",
					"message": {
						"text": "aws_rds_cluster.storage_encrypted is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 65
								}
							}
						}
					]
				},
				{
					"ruleId": "3199c26c-7871-4cb3-99c2-10a59244ce7f",
					"ruleIndex": 55,
					"kind": "fail",
					"message": {
						"text": "aws_rds_cluster.storage_encrypted is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 33
								}
							}
						}
					]
				},
				{
					"ruleId": "3199c26c-7871-4cb3-99c2-10a59244ce7f",
					"ruleIndex": 55,
					"kind": "fail",
					"message": {
						"text": "aws_rds_cluster.storage_encrypted is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 97
								}
							}
						}
					]
				},
				{
					"ruleId": "3199c26c-7871-4cb3-99c2-10a59244ce7f",
					"ruleIndex": 55,
					"kind": "fail",
					"message": {
						"text": "aws_rds_cluster.storage_encrypted is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 130
								}
							}
						}
					]
				},
				{
					"ruleId": "3199c26c-7871-4cb3-99c2-10a59244ce7f",
					"ruleIndex": 55,
					"kind": "fail",
					"message": {
						"text": "aws_rds_cluster.storage_encrypted is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 81
								}
							}
						}
					]
				},
				{
					"ruleId": "3199c26c-7871-4cb3-99c2-10a59244ce7f",
					"ruleIndex": 55,
					"kind": "fail",
					"message": {
						"text": "aws_rds_cluster.storage_encrypted is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "3199c26c-7871-4cb3-99c2-10a59244ce7f",
					"ruleIndex": 55,
					"kind": "fail",
					"message": {
						"text": "aws_rds_cluster.storage_encrypted is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 49
								}
							}
						}
					]
				},
				{
					"ruleId": "38c5ee0d-7f22-4260-ab72-5073048df100",
					"ruleIndex": 56,
					"kind": "fail",
					"message": {
						"text": "'acl' is equal 'public-read'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 8
								}
							}
						}
					]
				},
				{
					"ruleId": "219f4c95-aa50-44e0-97de-cf71f4641170",
					"ruleIndex": 57,
					"kind": "fail",
					"message": {
						"text": "S3 bucket 'DataBucket' has ACL set to 'PublicRead'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 923
								}
							}
						}
					]
				},
				{
					"ruleId": "860ba89b-b8de-4e72-af54-d6aee4138a69",
					"ruleIndex": 58,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=DataScienceBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1003
								}
							}
						}
					]
				},
				{
					"ruleId": "860ba89b-b8de-4e72-af54-d6aee4138a69",
					"ruleIndex": 58,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=DataBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 921
								}
							}
						}
					]
				},
				{
					"ruleId": "860ba89b-b8de-4e72-af54-d6aee4138a69",
					"ruleIndex": 58,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=FinancialsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 949
								}
							}
						}
					]
				},
				{
					"ruleId": "860ba89b-b8de-4e72-af54-d6aee4138a69",
					"ruleIndex": 58,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=LogsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1034
								}
							}
						}
					]
				},
				{
					"ruleId": "860ba89b-b8de-4e72-af54-d6aee4138a69",
					"ruleIndex": 58,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=OperationsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 975
								}
							}
						}
					]
				},
				{
					"ruleId": "5fb49a69-8d46-4495-a2f8-9c8c622b2b6e",
					"ruleIndex": 59,
					"kind": "fail",
					"message": {
						"text": "aws_s3_bucket_object.server_side_encryption is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 23
								}
							}
						}
					]
				},
				{
					"ruleId": "5fb49a69-8d46-4495-a2f8-9c8c622b2b6e",
					"ruleIndex": 59,
					"kind": "fail",
					"message": {
						"text": "aws_s3_bucket_object.server_side_encryption is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 16
								}
							}
						}
					]
				},
				{
					"ruleId": "6726dcc0-5ff5-459d-b473-a780bef7665c",
					"ruleIndex": 60,
					"kind": "fail",
					"message": {
						"text": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 65
								}
							}
						}
					]
				},
				{
					"ruleId": "6726dcc0-5ff5-459d-b473-a780bef7665c",
					"ruleIndex": 60,
					"kind": "fail",
					"message": {
						"text": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 42
								}
							}
						}
					]
				},
				{
					"ruleId": "6726dcc0-5ff5-459d-b473-a780bef7665c",
					"ruleIndex": 60,
					"kind": "fail",
					"message": {
						"text": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "6726dcc0-5ff5-459d-b473-a780bef7665c",
					"ruleIndex": 60,
					"kind": "fail",
					"message": {
						"text": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "6726dcc0-5ff5-459d-b473-a780bef7665c",
					"ruleIndex": 60,
					"kind": "fail",
					"message": {
						"text": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 27
								}
							}
						}
					]
				},
				{
					"ruleId": "6726dcc0-5ff5-459d-b473-a780bef7665c",
					"ruleIndex": 60,
					"kind": "fail",
					"message": {
						"text": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 89
								}
							}
						}
					]
				},
				{
					"ruleId": "6726dcc0-5ff5-459d-b473-a780bef7665c",
					"ruleIndex": 60,
					"kind": "fail",
					"message": {
						"text": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 42
								}
							}
						}
					]
				},
				{
					"ruleId": "6726dcc0-5ff5-459d-b473-a780bef7665c",
					"ruleIndex": 60,
					"kind": "fail",
					"message": {
						"text": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 59
								}
							}
						}
					]
				},
				{
					"ruleId": "6726dcc0-5ff5-459d-b473-a780bef7665c",
					"ruleIndex": 60,
					"kind": "fail",
					"message": {
						"text": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 271
								}
							}
						}
					]
				},
				{
					"ruleId": "64ab651b-f5b2-4af0-8c89-ddd03c4d0e61",
					"ruleIndex": 61,
					"kind": "fail",
					"message": {
						"text": "Resources.DataBucket.Properties.BucketEncryption is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 921
								}
							}
						}
					]
				},
				{
					"ruleId": "64ab651b-f5b2-4af0-8c89-ddd03c4d0e61",
					"ruleIndex": 61,
					"kind": "fail",
					"message": {
						"text": "Resources.FinancialsBucket.Properties.BucketEncryption is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 949
								}
							}
						}
					]
				},
				{
					"ruleId": "64ab651b-f5b2-4af0-8c89-ddd03c4d0e61",
					"ruleIndex": 61,
					"kind": "fail",
					"message": {
						"text": "Resources.OperationsBucket.Properties.BucketEncryption is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 975
								}
							}
						}
					]
				},
				{
					"ruleId": "64ab651b-f5b2-4af0-8c89-ddd03c4d0e61",
					"ruleIndex": 61,
					"kind": "fail",
					"message": {
						"text": "Resources.DataScienceBucket.Properties.BucketEncryption is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1003
								}
							}
						}
					]
				},
				{
					"ruleId": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
					"ruleIndex": 62,
					"kind": "fail",
					"message": {
						"text": "versioning is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
					"ruleIndex": 62,
					"kind": "fail",
					"message": {
						"text": "'mfa_delete' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 78
								}
							}
						}
					]
				},
				{
					"ruleId": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
					"ruleIndex": 62,
					"kind": "fail",
					"message": {
						"text": "'mfa_delete' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 48
								}
							}
						}
					]
				},
				{
					"ruleId": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
					"ruleIndex": 62,
					"kind": "fail",
					"message": {
						"text": "'mfa_delete' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 116
								}
							}
						}
					]
				},
				{
					"ruleId": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
					"ruleIndex": 62,
					"kind": "fail",
					"message": {
						"text": "'mfa_delete' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 70
								}
							}
						}
					]
				},
				{
					"ruleId": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
					"ruleIndex": 62,
					"kind": "fail",
					"message": {
						"text": "versioning is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 42
								}
							}
						}
					]
				},
				{
					"ruleId": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
					"ruleIndex": 62,
					"kind": "fail",
					"message": {
						"text": "'mfa_delete' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 64
								}
							}
						}
					]
				},
				{
					"ruleId": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
					"ruleIndex": 62,
					"kind": "fail",
					"message": {
						"text": "versioning is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 27
								}
							}
						}
					]
				},
				{
					"ruleId": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
					"ruleIndex": 62,
					"kind": "fail",
					"message": {
						"text": "versioning is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
					"ruleIndex": 62,
					"kind": "fail",
					"message": {
						"text": "'mfa_delete' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 93
								}
							}
						}
					]
				},
				{
					"ruleId": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
					"ruleIndex": 62,
					"kind": "fail",
					"message": {
						"text": "versioning is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 271
								}
							}
						}
					]
				},
				{
					"ruleId": "350cd468-0e2c-44ef-9d22-cfb73a62523c",
					"ruleIndex": 63,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=FinancialsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 949
								}
							}
						}
					]
				},
				{
					"ruleId": "350cd468-0e2c-44ef-9d22-cfb73a62523c",
					"ruleIndex": 63,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=LogsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1034
								}
							}
						}
					]
				},
				{
					"ruleId": "350cd468-0e2c-44ef-9d22-cfb73a62523c",
					"ruleIndex": 63,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=DataScienceBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1003
								}
							}
						}
					]
				},
				{
					"ruleId": "350cd468-0e2c-44ef-9d22-cfb73a62523c",
					"ruleIndex": 63,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=OperationsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 975
								}
							}
						}
					]
				},
				{
					"ruleId": "350cd468-0e2c-44ef-9d22-cfb73a62523c",
					"ruleIndex": 63,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=DataBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 921
								}
							}
						}
					]
				},
				{
					"ruleId": "38c64e76-c71e-4d92-a337-60174d1de1c9",
					"ruleIndex": 64,
					"kind": "fail",
					"message": {
						"text": "Resources.DataScienceBucket bucket doesn't have a policy"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 999
								}
							}
						}
					]
				},
				{
					"ruleId": "38c64e76-c71e-4d92-a337-60174d1de1c9",
					"ruleIndex": 64,
					"kind": "fail",
					"message": {
						"text": "Resources.FinancialsBucket bucket doesn't have a policy"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 945
								}
							}
						}
					]
				},
				{
					"ruleId": "38c64e76-c71e-4d92-a337-60174d1de1c9",
					"ruleIndex": 64,
					"kind": "fail",
					"message": {
						"text": "Resources.LogsBucket bucket doesn't have a policy"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1030
								}
							}
						}
					]
				},
				{
					"ruleId": "38c64e76-c71e-4d92-a337-60174d1de1c9",
					"ruleIndex": 64,
					"kind": "fail",
					"message": {
						"text": "Resources.OperationsBucket bucket doesn't have a policy"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 971
								}
							}
						}
					]
				},
				{
					"ruleId": "38c64e76-c71e-4d92-a337-60174d1de1c9",
					"ruleIndex": 64,
					"kind": "fail",
					"message": {
						"text": "Resources.DataBucket bucket doesn't have a policy"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 917
								}
							}
						}
					]
				},
				{
					"ruleId": "b2e8752c-3497-4255-98d2-e4ae5b46bbf5",
					"ruleIndex": 65,
					"kind": "fail",
					"message": {
						"text": "Resources.DataBucket.Properties.BucketEncryption.ServerSideEncryptionConfiguration is undefined or empty"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 921
								}
							}
						}
					]
				},
				{
					"ruleId": "b2e8752c-3497-4255-98d2-e4ae5b46bbf5",
					"ruleIndex": 65,
					"kind": "fail",
					"message": {
						"text": "Resources.DataScienceBucket.Properties.BucketEncryption.ServerSideEncryptionConfiguration is undefined or empty"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1003
								}
							}
						}
					]
				},
				{
					"ruleId": "b2e8752c-3497-4255-98d2-e4ae5b46bbf5",
					"ruleIndex": 65,
					"kind": "fail",
					"message": {
						"text": "Resources.OperationsBucket.Properties.BucketEncryption.ServerSideEncryptionConfiguration is undefined or empty"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 975
								}
							}
						}
					]
				},
				{
					"ruleId": "b2e8752c-3497-4255-98d2-e4ae5b46bbf5",
					"ruleIndex": 65,
					"kind": "fail",
					"message": {
						"text": "Resources.FinancialsBucket.Properties.BucketEncryption.ServerSideEncryptionConfiguration is undefined or empty"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 949
								}
							}
						}
					]
				},
				{
					"ruleId": "cf3c7631-cd1e-42f3-8801-a561214a6e79",
					"ruleIndex": 66,
					"kind": "fail",
					"message": {
						"text": "settings.backup_configuration.enabled is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/big_data.tf"
								},
								"region": {
									"startLine": 16
								}
							}
						}
					]
				},
				{
					"ruleId": "b187edca-b81e-4fdc-aff4-aab57db45edb",
					"ruleIndex": 67,
					"kind": "fail",
					"message": {
						"text": "'authorized_network' address is not restricted: '0.0.0.0/0'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/big_data.tf"
								},
								"region": {
									"startLine": 12
								}
							}
						}
					]
				},
				{
					"ruleId": "02474449-71aa-40a1-87ae-e14497747b00",
					"ruleIndex": 68,
					"kind": "fail",
					"message": {
						"text": "'settings.ip_configuration.require_ssl' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/big_data.tf"
								},
								"region": {
									"startLine": 8
								}
							}
						}
					]
				},
				{
					"ruleId": "0437633b-daa6-4bbc-8526-c0d2443b946e",
					"ruleIndex": 69,
					"kind": "fail",
					"message": {
						"text": "'azurerm_postgresql_server.example.ssl_enforcement_enabled' is equal 'false'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 85
								}
							}
						}
					]
				},
				{
					"ruleId": "dfa20ffa-f476-428f-a490-424b41e91c7f",
					"ruleIndex": 70,
					"kind": "fail",
					"message": {
						"text": "'expiration_date' is missing"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/key_vault.tf"
								},
								"region": {
									"startLine": 58
								}
							}
						}
					]
				},
				{
					"ruleId": "6e856af2-62d7-4ba2-adc1-73b62cef9cc1",
					"ruleIndex": 71,
					"kind": "fail",
					"message": {
						"text": "One of the Resources.WebNodeSG.Properties.SecurityGroupIngress has port 22"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "65905cec-d691-4320-b320-2000436cb696",
					"ruleIndex": 72,
					"kind": "fail",
					"message": {
						"text": "aws_security_group[web-node] 'SSH' (Port:22) is public"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 87
								}
							}
						}
					]
				},
				{
					"ruleId": "cdbb0467-2957-4a77-9992-7b55b29df7b7",
					"ruleIndex": 73,
					"kind": "fail",
					"message": {
						"text": "One of the Resources.WebNodeSG.Properties.SecurityGroupIngress has a exposed port (20,21,22,23,115,137,138,2049,3389)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "4c7ebcb2-eae2-461e-bc83-456ee2d4f694",
					"ruleIndex": 74,
					"kind": "fail",
					"message": {
						"text": "Attribute 'logging_service' is 'none'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gke.tf"
								},
								"region": {
									"startLine": 8
								}
							}
						}
					]
				},
				{
					"ruleId": "30e8dfd2-3591-4d19-8d11-79e93106c93d",
					"ruleIndex": 75,
					"kind": "fail",
					"message": {
						"text": "Attribute 'monitoring_service' is 'none'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gke.tf"
								},
								"region": {
									"startLine": 13
								}
							}
						}
					]
				},
				{
					"ruleId": "12944ec4-1fa0-47be-8b17-42a034f937c2",
					"ruleIndex": 76,
					"kind": "fail",
					"message": {
						"text": "'azurerm_storage_account.example.enable_https_traffic_only' does not exist"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/storage.tf"
								},
								"region": {
									"startLine": 23
								}
							}
						}
					]
				},
				{
					"ruleId": "5400f379-a347-4bdd-a032-446465fdcc6f",
					"ruleIndex": 77,
					"kind": "fail",
					"message": {
						"text": "'bypass' does not contain 'AzureServices'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/storage.tf"
								},
								"region": {
									"startLine": 68
								}
							}
						}
					]
				},
				{
					"ruleId": "5400f379-a347-4bdd-a032-446465fdcc6f",
					"ruleIndex": 77,
					"kind": "fail",
					"message": {
						"text": "'network_rules' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/storage.tf"
								},
								"region": {
									"startLine": 23
								}
							}
						}
					]
				},
				{
					"ruleId": "5400f379-a347-4bdd-a032-446465fdcc6f",
					"ruleIndex": 77,
					"kind": "fail",
					"message": {
						"text": "'network_rules' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "829ce3b8-065c-41a3-ad57-e0accfea82d2",
					"ruleIndex": 78,
					"kind": "fail",
					"message": {
						"text": "Resources.WebNodeSG.Properties.SecurityGroupIngress[2] opens unknown ports to the Internet"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 127
								}
							}
						}
					]
				},
				{
					"ruleId": "4728cd65-a20c-49da-8b31-9c08b423e4db",
					"ruleIndex": 79,
					"kind": "fail",
					"message": {
						"text": "One of 'ingress.cidr_blocks' equal '0.0.0.0/0'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 88
								}
							}
						}
					]
				},
				{
					"ruleId": "4728cd65-a20c-49da-8b31-9c08b423e4db",
					"ruleIndex": 79,
					"kind": "fail",
					"message": {
						"text": "One of 'ingress.cidr_blocks' equal '0.0.0.0/0'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 95
								}
							}
						}
					]
				},
				{
					"ruleId": "4a1e6b34-1008-4e61-a5f2-1f7c276f8d14",
					"ruleIndex": 80,
					"kind": "fail",
					"message": {
						"text": "Resources.WebNodeSG.Properties.SecurityGroupIngress[2].CidrIp is open to the world (0.0.0.0/0)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "4a1e6b34-1008-4e61-a5f2-1f7c276f8d14",
					"ruleIndex": 80,
					"kind": "fail",
					"message": {
						"text": "Resources.WebNodeSG.Properties.SecurityGroupIngress[1].CidrIp is open to the world (0.0.0.0/0)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "4a1e6b34-1008-4e61-a5f2-1f7c276f8d14",
					"ruleIndex": 80,
					"kind": "fail",
					"message": {
						"text": "Resources.WebNodeSG.Properties.SecurityGroupIngress[0].CidrIp is open to the world (0.0.0.0/0)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "38c71c00-c177-4cd7-8d36-cd1007cdb190",
					"ruleIndex": 81,
					"kind": "fail",
					"message": {
						"text": "'azurerm_key_vault' is not associated with 'azurerm_monitor_diagnostic_setting'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/key_vault.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "11e9a948-c6c3-4a0f-8dcf-b5cf1763cdbe",
					"ruleIndex": 82,
					"kind": "fail",
					"message": {
						"text": "'azurerm_app_service[app-service1].https_only' is not set to true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 27
								}
							}
						}
					]
				},
				{
					"ruleId": "b17d8bb8-4c08-4785-867e-cb9e62a622aa",
					"ruleIndex": 83,
					"kind": "fail",
					"message": {
						"text": "'azurerm_kubernetes_cluster[k8s_cluster].disk_encryption_set_id' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/aks.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "f5342045-b935-402d-adf1-8dbbd09c0eef",
					"ruleIndex": 84,
					"kind": "fail",
					"message": {
						"text": "'azurerm_kubernetes_cluster[k8s_cluster].network_profile' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/aks.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "86f92117-eed8-4614-9c6c-b26da20ff37f",
					"ruleIndex": 85,
					"kind": "fail",
					"message": {
						"text": "'azurerm_kubernetes_cluster[k8s_cluster].role_based_access_control.enabled' is not set to true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/aks.tf"
								},
								"region": {
									"startLine": 23
								}
							}
						}
					]
				},
				{
					"ruleId": "c065b98e-1515-4991-9dca-b602bd6a2fbb",
					"ruleIndex": 86,
					"kind": "fail",
					"message": {
						"text": "'event_rw' is not set to All"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/trail.tf"
								},
								"region": {
									"startLine": 7
								}
							}
						}
					]
				},
				{
					"ruleId": "c065b98e-1515-4991-9dca-b602bd6a2fbb",
					"ruleIndex": 86,
					"kind": "fail",
					"message": {
						"text": "'trail_region' is not set to All"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/trail.tf"
								},
								"region": {
									"startLine": 8
								}
							}
						}
					]
				},
				{
					"ruleId": "8a893e46-e267-485a-8690-51f39951de58",
					"ruleIndex": 87,
					"kind": "fail",
					"message": {
						"text": "'node_config.image_type' does not start with 'COS'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gke.tf"
								},
								"region": {
									"startLine": 29
								}
							}
						}
					]
				},
				{
					"ruleId": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
					"ruleIndex": 88,
					"kind": "fail",
					"message": {
						"text": "spec.template.spec.containers.name=kustomizegoat doesn't have resources defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "ca469dd4-c736-448f-8ac1-30a642705e0a",
					"ruleIndex": 89,
					"kind": "fail",
					"message": {
						"text": "spec.template.spec.containers.name=health-check.resources doesn't have requests defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 17
								}
							}
						}
					]
				},
				{
					"ruleId": "ca469dd4-c736-448f-8ac1-30a642705e0a",
					"ruleIndex": 89,
					"kind": "fail",
					"message": {
						"text": "spec.template.spec.containers.name=kustomizegoat doesn't have resources defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
					"ruleIndex": 90,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
					"ruleIndex": 90,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.containers.name={{health-check}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 24
								}
							}
						}
					]
				},
				{
					"ruleId": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
					"ruleIndex": 91,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.containers.name={{health-check}}.securityContext.runAsUser is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 24
								}
							}
						}
					]
				},
				{
					"ruleId": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
					"ruleIndex": 91,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.securityContext.runAsUser is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "a5613650-32ec-4975-a305-31af783153ea",
					"ruleIndex": 92,
					"kind": "fail",
					"message": {
						"text": "azurerm_storage_account.public_network_access_enabled is not set (default is 'true')"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "a5613650-32ec-4975-a305-31af783153ea",
					"ruleIndex": 92,
					"kind": "fail",
					"message": {
						"text": "azurerm_storage_account.public_network_access_enabled is not set (default is 'true')"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/storage.tf"
								},
								"region": {
									"startLine": 23
								}
							}
						}
					]
				},
				{
					"ruleId": "b1d51728-7270-4991-ac2f-fc26e2695b38",
					"ruleIndex": 93,
					"kind": "fail",
					"message": {
						"text": "'google_compute_disk[unencrypted_disk].disk_encryption_key' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/instances.tf"
								},
								"region": {
									"startLine": 36
								}
							}
						}
					]
				},
				{
					"ruleId": "cc997676-481b-4e93-aa81-d19f8c5e9b12",
					"ruleIndex": 94,
					"kind": "fail",
					"message": {
						"text": "One of 'aws_ebs_volume.encrypted' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 34
								}
							}
						}
					]
				},
				{
					"ruleId": "80b7ac3f-d2b7-4577-9b10-df7913497162",
					"ruleIndex": 95,
					"kind": "fail",
					"message": {
						"text": "Resources.WebHostStorage.Properties.Encrypted is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 76
								}
							}
						}
					]
				},
				{
					"ruleId": "b7063015-6c31-4658-a8e7-14f98f37fd42",
					"ruleIndex": 96,
					"kind": "fail",
					"message": {
						"text": "Resources.WebHostStorage.Properties.KmsKeyId is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 76
								}
							}
						}
					]
				},
				{
					"ruleId": "f914357d-8386-4d56-9ba6-456e5723f9a6",
					"ruleIndex": 97,
					"kind": "fail",
					"message": {
						"text": "'Resources.EC2Instance.Properties.IamInstanceProfile' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 33
								}
							}
						}
					]
				},
				{
					"ruleId": "d1846b12-20c5-4d45-8798-fc35b79268eb",
					"ruleIndex": 98,
					"kind": "fail",
					"message": {
						"text": "aws_ecr_repository.repository.image_tag_mutability is 'MUTABLE'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ecr.tf"
								},
								"region": {
									"startLine": 3
								}
							}
						}
					]
				},
				{
					"ruleId": "20018359-6fd7-4d05-ab26-d4dffccbdf79",
					"ruleIndex": 99,
					"kind": "fail",
					"message": {
						"text": "'aws_elb[{{weblb}}].access_logs' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/elb.tf"
								},
								"region": {
									"startLine": 2
								}
							}
						}
					]
				},
				{
					"ruleId": "24e16922-4330-4e9d-be8a-caa90299466a",
					"ruleIndex": 100,
					"kind": "fail",
					"message": {
						"text": "'encrypt_at_rest' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/es.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "967eb3e6-26fc-497d-8895-6428beb6e8e2",
					"ruleIndex": 101,
					"kind": "fail",
					"message": {
						"text": "The attribute 'node_to_node_encryption' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/es.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "16c4216a-50d3-4785-bfb2-4adb5144a8ba",
					"ruleIndex": 102,
					"kind": "fail",
					"message": {
						"text": "aws_elasticsearch_domain_policy[monitoring-framework-policy].access_policies has wildcard in 'Action' or 'Principal'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/es.tf"
								},
								"region": {
									"startLine": 43
								}
							}
						}
					]
				},
				{
					"ruleId": "acb6b4e2-a086-4f35-aefd-4db6ea51ada2",
					"ruleIndex": 103,
					"kind": "fail",
					"message": {
						"text": "'log_publishing_options' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/es.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "9db38e87-f6aa-4b5e-a1ec-7266df259409",
					"ruleIndex": 104,
					"kind": "fail",
					"message": {
						"text": "'azurerm_security_center_contact.contact.alert_notifications' is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/security_center.tf"
								},
								"region": {
									"startLine": 6
								}
							}
						}
					]
				},
				{
					"ruleId": "a99130ab-4c0e-43aa-97f8-78d4fcb30024",
					"ruleIndex": 105,
					"kind": "fail",
					"message": {
						"text": "azurerm_managed_disk[example].encryption_settings.enabled is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/storage.tf"
								},
								"region": {
									"startLine": 9
								}
							}
						}
					]
				},
				{
					"ruleId": "22ef1d26-80f8-4a6c-8c15-f35aab3cac78",
					"ruleIndex": 106,
					"kind": "fail",
					"message": {
						"text": "'google_compute_network[vpc]' is using a firewall rule that allows access to all ports"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/networks.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "40430747-442d-450a-a34f-dc57149f4609",
					"ruleIndex": 107,
					"kind": "fail",
					"message": {
						"text": "'google_compute_subnetwork[public-subnetwork].log_config' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/networks.tf"
								},
								"region": {
									"startLine": 7
								}
							}
						}
					]
				},
				{
					"ruleId": "acfdbec6-4a17-471f-b412-169d77553332",
					"ruleIndex": 108,
					"kind": "fail",
					"message": {
						"text": "google_container_node_pool[custom_node_pool].management.auto_repair is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gke.tf"
								},
								"region": {
									"startLine": 24
								}
							}
						}
					]
				},
				{
					"ruleId": "bb0db090-5509-4853-a827-75ced0b3caa0",
					"ruleIndex": 109,
					"kind": "fail",
					"message": {
						"text": "google_storage_bucket[terragoat_website].uniform_bucket_level_access is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/gcs.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "d7b9d850-3e06-4a75-852f-c46c2e92240b",
					"ruleIndex": 110,
					"kind": "fail",
					"message": {
						"text": "'user_data' contains hardcoded access key"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 9
								}
							}
						}
					]
				},
				{
					"ruleId": "1402afd8-a95c-4e84-8b0b-6fb43758e6ce",
					"ruleIndex": 111,
					"kind": "fail",
					"message": {
						"text": "'environment.variables' contains AWS Access Key"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/lambda.tf"
								},
								"region": {
									"startLine": 45
								}
							}
						}
					]
				},
				{
					"ruleId": "b4378389-a9aa-44ee-91e7-ef183f11079e",
					"ruleIndex": 112,
					"kind": "fail",
					"message": {
						"text": "'user' exists"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/iam.tf"
								},
								"region": {
									"startLine": 27
								}
							}
						}
					]
				},
				{
					"ruleId": "a964d6e3-8e1e-4d93-8120-61fa640dd55a",
					"ruleIndex": 113,
					"kind": "fail",
					"message": {
						"text": "'Resources.User.Properties' does not include LoginProfile"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 379
								}
							}
						}
					]
				},
				{
					"ruleId": "f34c0c25-47b4-41eb-9c79-249b4dd47b89",
					"ruleIndex": 114,
					"kind": "fail",
					"message": {
						"text": "Attribute 'can_ip_forward' is true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/instances.tf"
								},
								"region": {
									"startLine": 17
								}
							}
						}
					]
				},
				{
					"ruleId": "8a6d36cd-0bc6-42b7-92c4-67acc8576861",
					"ruleIndex": 115,
					"kind": "fail",
					"message": {
						"text": "Resources.DBAppInstance.Properties.NetworkInterfaces is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 692
								}
							}
						}
					]
				},
				{
					"ruleId": "8a6d36cd-0bc6-42b7-92c4-67acc8576861",
					"ruleIndex": 115,
					"kind": "fail",
					"message": {
						"text": "Resources.EC2Instance.Properties.NetworkInterfaces is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 33
								}
							}
						}
					]
				},
				{
					"ruleId": "235ca980-eb71-48f4-9030-df0c371029eb",
					"ruleIndex": 116,
					"kind": "fail",
					"message": {
						"text": "Resources.LogsKey.Properties.EnableKeyRotation is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 429
								}
							}
						}
					]
				},
				{
					"ruleId": "e649a218-d099-4550-86a4-1231e1fcb60d",
					"ruleIndex": 117,
					"kind": "fail",
					"message": {
						"text": "The RDS DBCluster 'DefaultDB' resource has backup retention period of '%!s(int=0)' which is less than the minimum of 7 days, and no RDS Cluster are defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 487
								}
							}
						}
					]
				},
				{
					"ruleId": "609839ae-bd81-4375-9910-5bce72ae7b92",
					"ruleIndex": 118,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server.mssql6.extended_auditing_policy' does not exist"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 115
								}
							}
						}
					]
				},
				{
					"ruleId": "609839ae-bd81-4375-9910-5bce72ae7b92",
					"ruleIndex": 118,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server.mssql7.extended_auditing_policy' does not exist"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 134
								}
							}
						}
					]
				},
				{
					"ruleId": "609839ae-bd81-4375-9910-5bce72ae7b92",
					"ruleIndex": 118,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server.mssql2.extended_auditing_policy' does not exist"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 39
								}
							}
						}
					]
				},
				{
					"ruleId": "609839ae-bd81-4375-9910-5bce72ae7b92",
					"ruleIndex": 118,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server.mssql4.extended_auditing_policy' does not exist"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 77
								}
							}
						}
					]
				},
				{
					"ruleId": "609839ae-bd81-4375-9910-5bce72ae7b92",
					"ruleIndex": 118,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server.mssql5.extended_auditing_policy' does not exist"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 96
								}
							}
						}
					]
				},
				{
					"ruleId": "609839ae-bd81-4375-9910-5bce72ae7b92",
					"ruleIndex": 118,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server.mssql1.extended_auditing_policy' does not exist"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 20
								}
							}
						}
					]
				},
				{
					"ruleId": "609839ae-bd81-4375-9910-5bce72ae7b92",
					"ruleIndex": 118,
					"kind": "fail",
					"message": {
						"text": "'azurerm_mssql_server.mssql3.extended_auditing_policy' does not exist"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 58
								}
							}
						}
					]
				},
				{
					"ruleId": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
					"ruleIndex": 119,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.resources.limits.memory is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "229588ef-8fde-40c8-8756-f4f2b5825ded",
					"ruleIndex": 120,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.resources.requests.memory is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "229588ef-8fde-40c8-8756-f4f2b5825ded",
					"ruleIndex": 120,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.containers.name={{health-check}}.resources.requests.memory is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 15
								}
							}
						}
					]
				},
				{
					"ruleId": "dbbc6705-d541-43b0-b166-dd4be8208b54",
					"ruleIndex": 121,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.securityContext.capabilities.drop is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "dbbc6705-d541-43b0-b166-dd4be8208b54",
					"ruleIndex": 121,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.containers.name={{health-check}}.securityContext.capabilities.drop is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 15
								}
							}
						}
					]
				},
				{
					"ruleId": "c91d7ea0-d4d1-403b-8fe1-c9961ac082c5",
					"ruleIndex": 122,
					"kind": "fail",
					"message": {
						"text": "'iam_database_authentication_enabled' is set to false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/neptune.tf"
								},
								"region": {
									"startLine": 7
								}
							}
						}
					]
				},
				{
					"ruleId": "98d59056-f745-4ef5-8613-32bca8d40b7e",
					"ruleIndex": 123,
					"kind": "fail",
					"message": {
						"text": "'storage_encrypted' is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/neptune.tf"
								},
								"region": {
									"startLine": 9
								}
							}
						}
					]
				},
				{
					"ruleId": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
					"ruleIndex": 124,
					"kind": "fail",
					"message": {
						"text": "Resource name 'health-check-deployment' of kind 'Deployment' in a non kube-system namespace 'default' has a hostPath '/var/run/docker.sock' mounted"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 32
								}
							}
						}
					]
				},
				{
					"ruleId": "b86987e1-6397-4619-81d5-8807f2387c79",
					"ruleIndex": 125,
					"kind": "fail",
					"message": {
						"text": "FROM={{centos:centos7.2.1511}}.{{CMD echo 'Vulnerable image' \u0026\u0026 /bin/false}} isn't in the JSON Notation"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 191
								}
							}
						}
					]
				},
				{
					"ruleId": "d0b4d550-c001-46c3-bbdb-d5d75d33f05f",
					"ruleIndex": 126,
					"kind": "fail",
					"message": {
						"text": "google_compute_instance[server].metadata.enable-oslogin is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/instances.tf"
								},
								"region": {
									"startLine": 21
								}
							}
						}
					]
				},
				{
					"ruleId": "f20e97f9-4919-43f1-9be9-f203cd339cdd",
					"ruleIndex": 127,
					"kind": "fail",
					"message": {
						"text": "[trail].policy does not have server side encryption rule and kms master key id defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/trail.tf"
								},
								"region": {
									"startLine": 11
								}
							}
						}
					]
				},
				{
					"ruleId": "f20e97f9-4919-43f1-9be9-f203cd339cdd",
					"ruleIndex": 127,
					"kind": "fail",
					"message": {
						"text": "[bad_bucket].policy does not have server side encryption rule and kms master key id defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/bucket.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "05db341e-de7d-4972-a106-3e2bd5ee53e1",
					"ruleIndex": 128,
					"kind": "fail",
					"message": {
						"text": "bad_bucket does not have logging enabled"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/bucket.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "05db341e-de7d-4972-a106-3e2bd5ee53e1",
					"ruleIndex": 128,
					"kind": "fail",
					"message": {
						"text": "trail does not have logging enabled"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/trail.tf"
								},
								"region": {
									"startLine": 11
								}
							}
						}
					]
				},
				{
					"ruleId": "70919c0b-2548-4e6b-8d7a-3d84ab6dabba",
					"ruleIndex": 129,
					"kind": "fail",
					"message": {
						"text": "'versioning' is missing"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/bucket.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "70919c0b-2548-4e6b-8d7a-3d84ab6dabba",
					"ruleIndex": 129,
					"kind": "fail",
					"message": {
						"text": "'versioning' is missing"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/trail.tf"
								},
								"region": {
									"startLine": 11
								}
							}
						}
					]
				},
				{
					"ruleId": "3790d386-be81-4dcf-9850-eaa7df6c10d9",
					"ruleIndex": 130,
					"kind": "fail",
					"message": {
						"text": "'azurerm_postgresql_configuration.example.value' is 'OFF'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 109
								}
							}
						}
					]
				},
				{
					"ruleId": "2b3c671f-1b76-4741-8789-ed1fe0785dc4",
					"ruleIndex": 131,
					"kind": "fail",
					"message": {
						"text": "'azurerm_postgresql_configuration.thrtottling_config.value' is 'OFF'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 102
								}
							}
						}
					]
				},
				{
					"ruleId": "3e4d5ce6-3280-4027-8010-c26eeea1ec01",
					"ruleIndex": 132,
					"kind": "fail",
					"message": {
						"text": "google_compute_instance[server].metadata.block-project-ssh-keys is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/instances.tf"
								},
								"region": {
									"startLine": 20
								}
							}
						}
					]
				},
				{
					"ruleId": "678fd659-96f2-454a-a2a0-c2571f83a4a3",
					"ruleIndex": 133,
					"kind": "fail",
					"message": {
						"text": "'google_compute_firewall[allow_all].allow.ports' includes RDP port 3389"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/networks.tf"
								},
								"region": {
									"startLine": 25
								}
							}
						}
					]
				},
				{
					"ruleId": "dc158941-28ce-481d-a7fa-dc80761edf46",
					"ruleIndex": 134,
					"kind": "fail",
					"message": {
						"text": "'sql_collector_config_value' is not defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/rds.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "dc158941-28ce-481d-a7fa-dc80761edf46",
					"ruleIndex": 134,
					"kind": "fail",
					"message": {
						"text": "'sql_collector_status' is not defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/rds.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "2b1d4935-9acf-48a7-8466-10d18bf51a69",
					"ruleIndex": 135,
					"kind": "fail",
					"message": {
						"text": "The RDS DBInstance 'DefaultDB' has MultiAZ value set to false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 486
								}
							}
						}
					]
				},
				{
					"ruleId": "1dc73fb4-5b51-430c-8c5f-25dcf9090b02",
					"ruleIndex": 136,
					"kind": "fail",
					"message": {
						"text": "'backup_retention_period' is equal '0'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/db-app.tf"
								},
								"region": {
									"startLine": 18
								}
							}
						}
					]
				},
				{
					"ruleId": "8c415f6f-7b90-4a27-a44a-51047e1506f9",
					"ruleIndex": 137,
					"kind": "fail",
					"message": {
						"text": "'Resources.DefaultDB.Properties.BackupRetentionPeriod' is equal to zero"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 487
								}
							}
						}
					]
				},
				{
					"ruleId": "f4a6bcd3-e231-4acf-993c-aa027be50d2e",
					"ruleIndex": 138,
					"kind": "fail",
					"message": {
						"text": "RUN curl -LO \"\"       https://ftp.drupal.org/files/projects/drupal-7.42.tar.gz \u0026\u0026     tar zxf drupal-7.42.tar.gz \u0026\u0026     mkdir /opt/drupal \u0026\u0026     cd drupal-7.42 \u0026\u0026     cp -R . /opt/drupal \u0026\u0026     cd - \u0026\u0026     rm -rf drupal-7.42 \u0026\u0026     rm -f *.tar.gz'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "f4a6bcd3-e231-4acf-993c-aa027be50d2e",
					"ruleIndex": 138,
					"kind": "fail",
					"message": {
						"text": "RUN curl -LO \"\"       http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.69/bin/apache-tomcat-7.0.69.tar.gz \u0026\u0026     tar zxf apache-tomcat-7.0.69.tar.gz \u0026\u0026     mkdir /opt/tomcat \u0026\u0026     cd apache-tomcat-7.0.69 \u0026\u0026     cp -R . /opt/tomcat \u0026\u0026     cd - \u0026\u0026     rm -rf apache-tomcat-7.0.69 \u0026\u0026     rm -f *.tar.gz'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "f4a6bcd3-e231-4acf-993c-aa027be50d2e",
					"ruleIndex": 138,
					"kind": "fail",
					"message": {
						"text": "RUN curl -LO \"\"       https://nodejs.org/dist/v0.10.41/node-v0.10.41-linux-x64.tar.gz \u0026\u0026     tar zxf node-v0.10.41-linux-x64.tar.gz \u0026\u0026     mkdir /opt/nodejs \u0026\u0026     cd node-v0.10.41-linux-x64 \u0026\u0026     cp -R . /opt/nodejs \u0026\u0026     cd - \u0026\u0026     rm -rf node-v0.10.41-linux-x64 \u0026\u0026     rm -rf *.tar.gz'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "f4a6bcd3-e231-4acf-993c-aa027be50d2e",
					"ruleIndex": 138,
					"kind": "fail",
					"message": {
						"text": "RUN curl -LO \"\"       http://www.mirrorservice.org/sites/ftp.gnu.org/gnu/wget/wget-1.15.tar.gz \u0026\u0026     tar zxf wget-1.15.tar.gz \u0026\u0026     cd wget-1.15 \u0026\u0026     ./configure --prefix=/opt/wget \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     rm -rf wget-1.15 \u0026\u0026     rm *.tar.gz'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "f4a6bcd3-e231-4acf-993c-aa027be50d2e",
					"ruleIndex": 138,
					"kind": "fail",
					"message": {
						"text": "RUN curl -LO \"\"       https://sourceforge.net/projects/p7zip/files/p7zip/9.20.1/p7zip_9.20.1_src_all.tar.bz2 \u0026\u0026     bzcat p7zip_9.20.1_src_all.tar.bz2 | tar x \u0026\u0026     cd p7zip_9.20.1 \u0026\u0026     cp install.sh install.sh.orig \u0026\u0026     cat install.sh.orig | sed -e 's|DEST_HOME=/usr/local|DEST_HOME=/opt/p7zip|g' \u003e install.sh \u0026\u0026     make \u0026\u0026     ./install.sh \u0026\u0026     cd - \u0026\u0026     rm -rf p7zip_9.20.1 \u0026\u0026     rm *.tar.bz2'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "f4a6bcd3-e231-4acf-993c-aa027be50d2e",
					"ruleIndex": 138,
					"kind": "fail",
					"message": {
						"text": "RUN curl -LO \"\"       https://ftp.heanet.ie/mirrors/ftp.gnu.org/gnu/bash/bash-4.3.tar.gz \u0026\u0026     tar zxf bash-4.3.tar.gz \u0026\u0026     mkdir /opt/bash \u0026\u0026 cd bash-4.3 \u0026\u0026     ./configure --prefix=/opt/bash \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     rm -rf bash-4.3 \u0026\u0026     rm -rf *.tar.gz'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "f4a6bcd3-e231-4acf-993c-aa027be50d2e",
					"ruleIndex": 138,
					"kind": "fail",
					"message": {
						"text": "RUN curl -LO \"\"           https://pypi.python.org/packages/8c/2b/e6e2f554368785c7eb68d618fd6457625be1535e807f6abf11c7db710f34/hpack-2.1.1.tar.gz \u0026\u0026         tar xvf hpack-2.1.1.tar.gz \u0026\u0026         mkdir /opt/hpack \u0026\u0026         cd hpack-2.1.1 \u0026\u0026         cp -R . /opt/hpack \u0026\u0026         cd - \u0026\u0026         rm -rf hpack-2.1.1 \u0026\u0026         rm -f *.tar.gz'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
					"ruleIndex": 139,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.readinessProbe is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
					"ruleIndex": 139,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.containers.name={{health-check}}.readinessProbe is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 15
								}
							}
						}
					]
				},
				{
					"ruleId": "3fa5900f-9aac-4982-96b2-a6143d9c99fb",
					"ruleIndex": 140,
					"kind": "fail",
					"message": {
						"text": "azurerm_role_definition[example].permissions.actions allows custom role creation"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/roles.tf"
								},
								"region": {
									"startLine": 9
								}
							}
						}
					]
				},
				{
					"ruleId": "4f0908b9-eb66-433f-9145-134274e1e944",
					"ruleIndex": 141,
					"kind": "fail",
					"message": {
						"text": "Resources.PublicRoute.Properties.DestinationCidrBlock is 0.0.0.0/0"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/eks.yaml"
								},
								"region": {
									"startLine": 112
								}
							}
						}
					]
				},
				{
					"ruleId": "4f0908b9-eb66-433f-9145-134274e1e944",
					"ruleIndex": 141,
					"kind": "fail",
					"message": {
						"text": "Resources.PrivateRoute01.Properties.DestinationCidrBlock is 0.0.0.0/0"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/eks.yaml"
								},
								"region": {
									"startLine": 121
								}
							}
						}
					]
				},
				{
					"ruleId": "4f0908b9-eb66-433f-9145-134274e1e944",
					"ruleIndex": 141,
					"kind": "fail",
					"message": {
						"text": "Resources.WebDefaultPublicRoute.Properties.NatGatewayId is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 285
								}
							}
						}
					]
				},
				{
					"ruleId": "4f0908b9-eb66-433f-9145-134274e1e944",
					"ruleIndex": 141,
					"kind": "fail",
					"message": {
						"text": "Resources.PublicRoute.Properties.NatGatewayId is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/eks.yaml"
								},
								"region": {
									"startLine": 110
								}
							}
						}
					]
				},
				{
					"ruleId": "4f0908b9-eb66-433f-9145-134274e1e944",
					"ruleIndex": 141,
					"kind": "fail",
					"message": {
						"text": "Resources.PublicRoute.Properties.DestinationCidrBlock is 0.0.0.0/0"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/eks.yaml"
								},
								"region": {
									"startLine": 167
								}
							}
						}
					]
				},
				{
					"ruleId": "4f0908b9-eb66-433f-9145-134274e1e944",
					"ruleIndex": 141,
					"kind": "fail",
					"message": {
						"text": "Resources.WebDefaultPublicRoute.Properties.DestinationCidrBlock is 0.0.0.0/0"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 287
								}
							}
						}
					]
				},
				{
					"ruleId": "4f0908b9-eb66-433f-9145-134274e1e944",
					"ruleIndex": 141,
					"kind": "fail",
					"message": {
						"text": "Resources.PrivateRoute02.Properties.DestinationCidrBlock is 0.0.0.0/0"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/eks.yaml"
								},
								"region": {
									"startLine": 185
								}
							}
						}
					]
				},
				{
					"ruleId": "4f0908b9-eb66-433f-9145-134274e1e944",
					"ruleIndex": 141,
					"kind": "fail",
					"message": {
						"text": "Resources.PublicRoute.Properties.NatGatewayId is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/eks.yaml"
								},
								"region": {
									"startLine": 165
								}
							}
						}
					]
				},
				{
					"ruleId": "4f0908b9-eb66-433f-9145-134274e1e944",
					"ruleIndex": 141,
					"kind": "fail",
					"message": {
						"text": "Resources.PrivateRoute02.Properties.DestinationCidrBlock is 0.0.0.0/0"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/eks.yaml"
								},
								"region": {
									"startLine": 130
								}
							}
						}
					]
				},
				{
					"ruleId": "4f0908b9-eb66-433f-9145-134274e1e944",
					"ruleIndex": 141,
					"kind": "fail",
					"message": {
						"text": "Resources.PrivateRoute01.Properties.DestinationCidrBlock is 0.0.0.0/0"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/eks.yaml"
								},
								"region": {
									"startLine": 176
								}
							}
						}
					]
				},
				{
					"ruleId": "48f100d9-f499-4c6d-b2b8-deafe47ffb26",
					"ruleIndex": 142,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=OperationsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 975
								}
							}
						}
					]
				},
				{
					"ruleId": "48f100d9-f499-4c6d-b2b8-deafe47ffb26",
					"ruleIndex": 142,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=DataScienceBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1003
								}
							}
						}
					]
				},
				{
					"ruleId": "48f100d9-f499-4c6d-b2b8-deafe47ffb26",
					"ruleIndex": 142,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=FinancialsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 949
								}
							}
						}
					]
				},
				{
					"ruleId": "48f100d9-f499-4c6d-b2b8-deafe47ffb26",
					"ruleIndex": 142,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=LogsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1034
								}
							}
						}
					]
				},
				{
					"ruleId": "48f100d9-f499-4c6d-b2b8-deafe47ffb26",
					"ruleIndex": 142,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=DataBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 921
								}
							}
						}
					]
				},
				{
					"ruleId": "f861041c-8c9f-4156-acfc-5e6e524f5884",
					"ruleIndex": 143,
					"kind": "fail",
					"message": {
						"text": "'logging' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 42
								}
							}
						}
					]
				},
				{
					"ruleId": "f861041c-8c9f-4156-acfc-5e6e524f5884",
					"ruleIndex": 143,
					"kind": "fail",
					"message": {
						"text": "'logging' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 27
								}
							}
						}
					]
				},
				{
					"ruleId": "f861041c-8c9f-4156-acfc-5e6e524f5884",
					"ruleIndex": 143,
					"kind": "fail",
					"message": {
						"text": "'logging' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "f861041c-8c9f-4156-acfc-5e6e524f5884",
					"ruleIndex": 143,
					"kind": "fail",
					"message": {
						"text": "'logging' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 74
								}
							}
						}
					]
				},
				{
					"ruleId": "f861041c-8c9f-4156-acfc-5e6e524f5884",
					"ruleIndex": 143,
					"kind": "fail",
					"message": {
						"text": "'logging' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 42
								}
							}
						}
					]
				},
				{
					"ruleId": "f861041c-8c9f-4156-acfc-5e6e524f5884",
					"ruleIndex": 143,
					"kind": "fail",
					"message": {
						"text": "'logging' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 271
								}
							}
						}
					]
				},
				{
					"ruleId": "f861041c-8c9f-4156-acfc-5e6e524f5884",
					"ruleIndex": 143,
					"kind": "fail",
					"message": {
						"text": "'logging' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "f861041c-8c9f-4156-acfc-5e6e524f5884",
					"ruleIndex": 143,
					"kind": "fail",
					"message": {
						"text": "'logging' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 65
								}
							}
						}
					]
				},
				{
					"ruleId": "f861041c-8c9f-4156-acfc-5e6e524f5884",
					"ruleIndex": 143,
					"kind": "fail",
					"message": {
						"text": "'logging' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 113
								}
							}
						}
					]
				},
				{
					"ruleId": "4552b71f-0a2a-4bc4-92dd-ed7ec1b4674c",
					"ruleIndex": 144,
					"kind": "fail",
					"message": {
						"text": "'Resources.FinancialsBucket.Properties' doesn't have property 'LoggingConfiguration'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 949
								}
							}
						}
					]
				},
				{
					"ruleId": "4552b71f-0a2a-4bc4-92dd-ed7ec1b4674c",
					"ruleIndex": 144,
					"kind": "fail",
					"message": {
						"text": "'Resources.DataBucket.Properties' doesn't have property 'LoggingConfiguration'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 921
								}
							}
						}
					]
				},
				{
					"ruleId": "4552b71f-0a2a-4bc4-92dd-ed7ec1b4674c",
					"ruleIndex": 144,
					"kind": "fail",
					"message": {
						"text": "'Resources.LogsBucket.Properties' doesn't have property 'LoggingConfiguration'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1034
								}
							}
						}
					]
				},
				{
					"ruleId": "4552b71f-0a2a-4bc4-92dd-ed7ec1b4674c",
					"ruleIndex": 144,
					"kind": "fail",
					"message": {
						"text": "'Resources.OperationsBucket.Properties' doesn't have property 'LoggingConfiguration'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 975
								}
							}
						}
					]
				},
				{
					"ruleId": "37fa8188-738b-42c8-bf82-6334ea567738",
					"ruleIndex": 145,
					"kind": "fail",
					"message": {
						"text": "'Resources.DataScienceBucket.Properties.BucketName' or 'Resources.[DataScienceBucket]' is not associated with an 'AWS::S3::BucketPolicy'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 999
								}
							}
						}
					]
				},
				{
					"ruleId": "37fa8188-738b-42c8-bf82-6334ea567738",
					"ruleIndex": 145,
					"kind": "fail",
					"message": {
						"text": "'Resources.OperationsBucket.Properties.BucketName' or 'Resources.[OperationsBucket]' is not associated with an 'AWS::S3::BucketPolicy'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 971
								}
							}
						}
					]
				},
				{
					"ruleId": "37fa8188-738b-42c8-bf82-6334ea567738",
					"ruleIndex": 145,
					"kind": "fail",
					"message": {
						"text": "'Resources.FinancialsBucket.Properties.BucketName' or 'Resources.[FinancialsBucket]' is not associated with an 'AWS::S3::BucketPolicy'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 945
								}
							}
						}
					]
				},
				{
					"ruleId": "37fa8188-738b-42c8-bf82-6334ea567738",
					"ruleIndex": 145,
					"kind": "fail",
					"message": {
						"text": "'Resources.DataBucket.Properties.BucketName' or 'Resources.[DataBucket]' is not associated with an 'AWS::S3::BucketPolicy'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 917
								}
							}
						}
					]
				},
				{
					"ruleId": "37fa8188-738b-42c8-bf82-6334ea567738",
					"ruleIndex": 145,
					"kind": "fail",
					"message": {
						"text": "'Resources.LogsBucket.Properties.BucketName' or 'Resources.[LogsBucket]' is not associated with an 'AWS::S3::BucketPolicy'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1030
								}
							}
						}
					]
				},
				{
					"ruleId": "568a4d22-3517-44a6-a7ad-6a7eed88722c",
					"ruleIndex": 146,
					"kind": "fail",
					"message": {
						"text": "'versioning' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 271
								}
							}
						}
					]
				},
				{
					"ruleId": "568a4d22-3517-44a6-a7ad-6a7eed88722c",
					"ruleIndex": 146,
					"kind": "fail",
					"message": {
						"text": "'versioning' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 27
								}
							}
						}
					]
				},
				{
					"ruleId": "568a4d22-3517-44a6-a7ad-6a7eed88722c",
					"ruleIndex": 146,
					"kind": "fail",
					"message": {
						"text": "'versioning' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "568a4d22-3517-44a6-a7ad-6a7eed88722c",
					"ruleIndex": 146,
					"kind": "fail",
					"message": {
						"text": "'versioning' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 42
								}
							}
						}
					]
				},
				{
					"ruleId": "568a4d22-3517-44a6-a7ad-6a7eed88722c",
					"ruleIndex": 146,
					"kind": "fail",
					"message": {
						"text": "'versioning' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/s3.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "a227ec01-f97a-4084-91a4-47b350c1db54",
					"ruleIndex": 147,
					"kind": "fail",
					"message": {
						"text": "Resources.DataBucket.Properties.VersioningConfiguration is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 921
								}
							}
						}
					]
				},
				{
					"ruleId": "a227ec01-f97a-4084-91a4-47b350c1db54",
					"ruleIndex": 147,
					"kind": "fail",
					"message": {
						"text": "Resources.FinancialsBucket.Properties.VersioningConfiguration is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 949
								}
							}
						}
					]
				},
				{
					"ruleId": "f7e296b0-6660-4bc5-8f87-22ac4a815edf",
					"ruleIndex": 148,
					"kind": "fail",
					"message": {
						"text": "'azurerm_sql_server.example.extended_auditing_policy' does not exist"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 9
								}
							}
						}
					]
				},
				{
					"ruleId": "c4dcdcdf-10dd-4bf4-b4a0-8f6239e6aaa0",
					"ruleIndex": 149,
					"kind": "fail",
					"message": {
						"text": "'google_compute_firewall[allow_all].allow.ports' includes SSH port 22"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/networks.tf"
								},
								"region": {
									"startLine": 25
								}
							}
						}
					]
				},
				{
					"ruleId": "f377b83e-bd07-4f48-a591-60c82b14a78b",
					"ruleIndex": 150,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.securityContext.seccompProfile.type is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "f377b83e-bd07-4f48-a591-60c82b14a78b",
					"ruleIndex": 150,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.containers.name={{health-check}}.securityContext.seccompProfile.type is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 24
								}
							}
						}
					]
				},
				{
					"ruleId": "f377b83e-bd07-4f48-a591-60c82b14a78b",
					"ruleIndex": 150,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.securityContext.seccompProfile.type is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml"
								},
								"region": {
									"startLine": 48
								}
							}
						}
					]
				},
				{
					"ruleId": "819d50fd-1cdf-45c3-9936-be408aaad93e",
					"ruleIndex": 151,
					"kind": "fail",
					"message": {
						"text": "'azurerm_security_center_subscription_pricing.pricing.tier' is 'Free'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/security_center.tf"
								},
								"region": {
									"startLine": 2
								}
							}
						}
					]
				},
				{
					"ruleId": "97fa667a-d05b-4f16-9071-58b939f34751",
					"ruleIndex": 152,
					"kind": "fail",
					"message": {
						"text": "google_compute_instance[server].metadata.serial-port-enable is true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/instances.tf"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "48471392-d4d0-47c0-b135-cdec95eb3eef",
					"ruleIndex": 153,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.automountServiceAccountToken is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 13
								}
							}
						}
					]
				},
				{
					"ruleId": "48471392-d4d0-47c0-b135-cdec95eb3eef",
					"ruleIndex": 153,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.automountServiceAccountToken is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/test/deployment.yaml"
								},
								"region": {
									"startLine": 12
								}
							}
						}
					]
				},
				{
					"ruleId": "48471392-d4d0-47c0-b135-cdec95eb3eef",
					"ruleIndex": 153,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.automountServiceAccountToken is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 19
								}
							}
						}
					]
				},
				{
					"ruleId": "26763a1c-5dda-4772-b507-5fca7fb5f165",
					"ruleIndex": 154,
					"kind": "fail",
					"message": {
						"text": "'metadata.annotations' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/service.yaml"
								},
								"region": {
									"startLine": 6
								}
							}
						}
					]
				},
				{
					"ruleId": "2b856bf9-8e8c-4005-875f-303a8cba3918",
					"ruleIndex": 155,
					"kind": "fail",
					"message": {
						"text": "'azurerm_monitor_log_profile[logging_profile].retention_policy.days' is less than 365 days or different than 0 (indefinitely)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/logging.tf"
								},
								"region": {
									"startLine": 8
								}
							}
						}
					]
				},
				{
					"ruleId": "7750fcca-dd03-4d38-b663-4b70289bcfd4",
					"ruleIndex": 156,
					"kind": "fail",
					"message": {
						"text": "'flow_log.retention_policy' is disabled)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/networking.tf"
								},
								"region": {
									"startLine": 132
								}
							}
						}
					]
				},
				{
					"ruleId": "7750fcca-dd03-4d38-b663-4b70289bcfd4",
					"ruleIndex": 156,
					"kind": "fail",
					"message": {
						"text": "'retention_policy.days' is less than 90 [10])"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/networking.tf"
								},
								"region": {
									"startLine": 133
								}
							}
						}
					]
				},
				{
					"ruleId": "d3499f6d-1651-41bb-a9a7-de925fea487b",
					"ruleIndex": 157,
					"kind": "fail",
					"message": {
						"text": "RUN instruction apk --no-cache add shadow \u0026\u0026 usermod -u 10014 nginx \u0026\u0026     groupmod -g 10014 nginx does not use package pinning form"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/Dockerfile"
								},
								"region": {
									"startLine": 6
								}
							}
						}
					]
				},
				{
					"ruleId": "9630336b-3fed-4096-8173-b9afdfe346a7",
					"ruleIndex": 158,
					"kind": "fail",
					"message": {
						"text": "aws_ecr_repository[repository].image_scanning_configuration is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ecr.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "9bae49be-0aa3-4de5-bab2-4c3a069e40cd",
					"ruleIndex": 159,
					"kind": "fail",
					"message": {
						"text": "Instruction 'RUN \u003cpackage-manager\u003e update' isn't followed by 'RUN \u003cpackage-manager\u003e install in the same 'RUN' statement"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 13
								}
							}
						}
					]
				},
				{
					"ruleId": "3cb4af0b-056d-4fb1-8b95-fdc4593625ff",
					"ruleIndex": 160,
					"kind": "fail",
					"message": {
						"text": "'google_compute_instance[server].service_account' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/instances.tf"
								},
								"region": {
									"startLine": 3
								}
							}
						}
					]
				},
				{
					"ruleId": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
					"ruleIndex": 161,
					"kind": "fail",
					"message": {
						"text": "metadata.namespace is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 37
								}
							}
						}
					]
				},
				{
					"ruleId": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
					"ruleIndex": 161,
					"kind": "fail",
					"message": {
						"text": "metadata.namespace is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 4
								}
							}
						}
					]
				},
				{
					"ruleId": "52f04a44-6bfa-4c41-b1d3-4ae99a2de05c",
					"ruleIndex": 162,
					"kind": "fail",
					"message": {
						"text": "aws_subnet[web_subnet].map_public_ip_on_launch is set to true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 139
								}
							}
						}
					]
				},
				{
					"ruleId": "52f04a44-6bfa-4c41-b1d3-4ae99a2de05c",
					"ruleIndex": 162,
					"kind": "fail",
					"message": {
						"text": "aws_subnet[web_subnet2].map_public_ip_on_launch is set to true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 159
								}
							}
						}
					]
				},
				{
					"ruleId": "52f04a44-6bfa-4c41-b1d3-4ae99a2de05c",
					"ruleIndex": 162,
					"kind": "fail",
					"message": {
						"text": "aws_subnet[eks_subnet2].map_public_ip_on_launch is set to true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 94
								}
							}
						}
					]
				},
				{
					"ruleId": "52f04a44-6bfa-4c41-b1d3-4ae99a2de05c",
					"ruleIndex": 162,
					"kind": "fail",
					"message": {
						"text": "aws_subnet[eks_subnet1].map_public_ip_on_launch is set to true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 66
								}
							}
						}
					]
				},
				{
					"ruleId": "3e293410-d5b8-411f-85fd-7d26294f20c9",
					"ruleIndex": 163,
					"kind": "fail",
					"message": {
						"text": "'Resources.VPC' is not associated with a AWS Network Firewall"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/eks.yaml"
								},
								"region": {
									"startLine": 76
								}
							}
						}
					]
				},
				{
					"ruleId": "3e293410-d5b8-411f-85fd-7d26294f20c9",
					"ruleIndex": 163,
					"kind": "fail",
					"message": {
						"text": "'Resources.VPC' is not associated with a AWS Network Firewall"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/eks.yaml"
								},
								"region": {
									"startLine": 59
								}
							}
						}
					]
				},
				{
					"ruleId": "3e293410-d5b8-411f-85fd-7d26294f20c9",
					"ruleIndex": 163,
					"kind": "fail",
					"message": {
						"text": "'Resources.WebVPC' is not associated with a AWS Network Firewall"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 148
								}
							}
						}
					]
				},
				{
					"ruleId": "fd632aaf-b8a1-424d-a4d1-0de22fd3247a",
					"ruleIndex": 164,
					"kind": "fail",
					"message": {
						"text": "aws_vpc[web_vpc] does not have an 'aws_networkfirewall_firewall' associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 117
								}
							}
						}
					]
				},
				{
					"ruleId": "fd632aaf-b8a1-424d-a4d1-0de22fd3247a",
					"ruleIndex": 164,
					"kind": "fail",
					"message": {
						"text": "aws_vpc[eks_vpc] does not have an 'aws_networkfirewall_firewall' associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 44
								}
							}
						}
					]
				},
				{
					"ruleId": "b4cc2c52-34a6-4b43-b57c-4bdeb4514a5a",
					"ruleIndex": 165,
					"kind": "fail",
					"message": {
						"text": "'azurerm_virtual_network[example].ddos_protection_plan' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/networking.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
					"ruleIndex": 166,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.volumeMounts.name={{cache-volume}}.readOnly is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml"
								},
								"region": {
									"startLine": 57
								}
							}
						}
					]
				},
				{
					"ruleId": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
					"ruleIndex": 166,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.volumeMounts.name={{pid-volume}}.readOnly is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml"
								},
								"region": {
									"startLine": 59
								}
							}
						}
					]
				},
				{
					"ruleId": "2e48d91c-50e4-45c8-9312-27b625868a72",
					"ruleIndex": 167,
					"kind": "fail",
					"message": {
						"text": "'azurerm_application_gateway[network]' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/application_gateway.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
					"ruleIndex": 168,
					"kind": "fail",
					"message": {
						"text": "Workload name 'health-check-deployment' of kind 'Deployment' is mounting a host sensitive OS directory '/var/run/docker.sock' with hostPath"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 32
								}
							}
						}
					]
				},
				{
					"ruleId": "00481784-25aa-4a55-8633-3136dfcf4f37",
					"ruleIndex": 169,
					"kind": "fail",
					"message": {
						"text": "FROM={{centos:centos7.2.1511}}.{{RUN curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/tomcat-7.0.42-4.el7.noarch.rpm \u0026\u0026     curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/tomcat-el-2.2-api-7.0.42-4.el7.noarch.rpm \u0026\u0026     curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/tomcat-jsp-2.2-api-7.0.42-4.el7.noarch.rpm \u0026\u0026     curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/tomcat-lib-7.0.42-4.el7.noarch.rpm \u0026\u0026     curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/tomcat-servlet-3.0-api-7.0.42-4.el7.noarch.rpm \u0026\u0026     touch /var/lib/rpm/* \u0026\u0026     yum -y install yum install tomcat-7.0.42-4.el7.noarch.rpm tomcat-lib-7.0.42-4.el7.noarch.rpm tomcat-servlet-3.0-api-7.0.42-4.el7.noarch.rpm tomcat-el-2.2-api-7.0.42-4.el7.noarch.rpm tomcat-jsp-2.2-api-7.0.42-4.el7.noarch.rpm \u0026\u0026     rm -f *.rpm}} doesn't have 'yum clean all' after 'yum install' command"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 105
								}
							}
						}
					]
				},
				{
					"ruleId": "00481784-25aa-4a55-8633-3136dfcf4f37",
					"ruleIndex": 169,
					"kind": "fail",
					"message": {
						"text": "FROM={{centos:centos7.2.1511}}.{{RUN touch /var/lib/rpm/* \u0026\u0026     yum -y install rpm-build redhat-rpm-config rpmdevtools}} doesn't have 'yum clean all' after 'yum install' command"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 183
								}
							}
						}
					]
				},
				{
					"ruleId": "00481784-25aa-4a55-8633-3136dfcf4f37",
					"ruleIndex": 169,
					"kind": "fail",
					"message": {
						"text": "FROM={{centos:centos7.2.1511}}.{{RUN curl -LO ${CURL_OPTIONS}       http://www.nic.funet.fi/pub/Linux/INSTALL/scientific/7.0/x86_64/updates/security/java-1.8.0-openjdk-1.8.0.91-0.b14.el7_2.x86_64.rpm \u0026\u0026     curl -LO ${CURL_OPTIONS}       http://www.nic.funet.fi/pub/Linux/INSTALL/scientific/7.0/x86_64/updates/security/java-1.8.0-openjdk-headless-1.8.0.91-0.b14.el7_2.x86_64.rpm \u0026\u0026     touch /var/lib/rpm/* \u0026\u0026     yum -y install java-1.8.0-openjdk-1.8.0.91-0.b14.el7_2.x86_64.rpm java-1.8.0-openjdk-headless-1.8.0.91-0.b14.el7_2.x86_64.rpm \u0026\u0026     rm -f *.rpm \u0026\u0026     echo \"exclude=java-1.8.0-openjdk java-1.8.0-openjdk-headless\"  \u003e\u003e /etc/yum.conf}} doesn't have 'yum clean all' after 'yum install' command"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 92
								}
							}
						}
					]
				},
				{
					"ruleId": "00481784-25aa-4a55-8633-3136dfcf4f37",
					"ruleIndex": 169,
					"kind": "fail",
					"message": {
						"text": "FROM={{centos:centos7.2.1511}}.{{RUN yum -y install deltarpm \u0026\u0026 yum -y update}} doesn't have 'yum clean all' after 'yum install' command"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 13
								}
							}
						}
					]
				},
				{
					"ruleId": "00481784-25aa-4a55-8633-3136dfcf4f37",
					"ruleIndex": 169,
					"kind": "fail",
					"message": {
						"text": "FROM={{centos:centos7.2.1511}}.{{RUN curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/wget-1.14-10.el7.x86_64.rpm \u0026\u0026     yum -y install wget-1.14-10.el7.x86_64.rpm \u0026\u0026     rm *.rpm}} doesn't have 'yum clean all' after 'yum install' command"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 25
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'gcc'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 17
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'redhat-rpm-config'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 183
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'yum'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 105
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'bzip2'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 17
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'gnutls-devel'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 17
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'bison'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 17
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'rpmdevtools'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 183
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'deltarpm'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 13
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'install'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 105
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'gcc-c++'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 17
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'rpm-build'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 183
								}
							}
						}
					]
				},
				{
					"ruleId": "6452c424-1d92-4deb-bb18-a03e95d579c4",
					"ruleIndex": 170,
					"kind": "fail",
					"message": {
						"text": "No version is specified in package 'libidn-devel'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 17
								}
							}
						}
					]
				},
				{
					"ruleId": "43789711-161b-4708-b5bb-9d1c626f7492",
					"ruleIndex": 171,
					"kind": "fail",
					"message": {
						"text": "'azurerm_kubernetes_cluster[k8s_cluster].addon_profile.azure_policy' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/aks.tf"
								},
								"region": {
									"startLine": 14
								}
							}
						}
					]
				},
				{
					"ruleId": "525b53be-62ed-4244-b4df-41aecfcb4071",
					"ruleIndex": 172,
					"kind": "fail",
					"message": {
						"text": "'azurerm_app_service[app-service1].site_config.http2_enabled' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 28
								}
							}
						}
					]
				},
				{
					"ruleId": "525b53be-62ed-4244-b4df-41aecfcb4071",
					"ruleIndex": 172,
					"kind": "fail",
					"message": {
						"text": "'azurerm_app_service[app-service2].site_config' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 43
								}
							}
						}
					]
				},
				{
					"ruleId": "f0104061-8bfc-4b45-8a7d-630eb502f281",
					"ruleIndex": 173,
					"kind": "fail",
					"message": {
						"text": "'Resources.DefaultDB.Properties.AutoMinorVersionUpgrade' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 471
								}
							}
						}
					]
				},
				{
					"ruleId": "aa93e17f-b6db-4162-9334-c70334e7ac28",
					"ruleIndex": 174,
					"kind": "fail",
					"message": {
						"text": "The 'Dockerfile' contains the 'chown' flag"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/Dockerfile"
								},
								"region": {
									"startLine": 13
								}
							}
						}
					]
				},
				{
					"ruleId": "aee3c7d2-a811-4201-90c7-11c028be9a46",
					"ruleIndex": 175,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.resources.requests.memory is not equal to resources.limits.memory"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml"
								},
								"region": {
									"startLine": 26
								}
							}
						}
					]
				},
				{
					"ruleId": "aee3c7d2-a811-4201-90c7-11c028be9a46",
					"ruleIndex": 175,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.resources.requests.cpu is not equal to resources.limits.cpu"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml"
								},
								"region": {
									"startLine": 26
								}
							}
						}
					]
				},
				{
					"ruleId": "61c3cb8b-0715-47e4-b788-86dde40dd2db",
					"ruleIndex": 176,
					"kind": "fail",
					"message": {
						"text": "'azurerm_kubernetes_cluster[k8s_cluster].addon_profile.kube_dashboard.enabled' is true"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/aks.tf"
								},
								"region": {
									"startLine": 19
								}
							}
						}
					]
				},
				{
					"ruleId": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
					"ruleIndex": 177,
					"kind": "fail",
					"message": {
						"text": "metadata.name=kustomizegoat is not targeted by a PodDisruptionBudget"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 11
								}
							}
						}
					]
				},
				{
					"ruleId": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
					"ruleIndex": 177,
					"kind": "fail",
					"message": {
						"text": "metadata.name=kustomizegoat is not targeted by a PodDisruptionBudget"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/test/deployment.yaml"
								},
								"region": {
									"startLine": 6
								}
							}
						}
					]
				},
				{
					"ruleId": "a6f34658-fdfb-4154-9536-56d516f65828",
					"ruleIndex": 178,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.volumes.name={{docker-sock-volume}}.hostPath.path is '/var/run/docker.sock'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 32
								}
							}
						}
					]
				},
				{
					"ruleId": "0b93729a-d882-4803-bdc3-ac429a21f158",
					"ruleIndex": 179,
					"kind": "fail",
					"message": {
						"text": "aws_instance[web_host].user_data is being used to configure AWS API keys"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "0e32d561-4b5a-4664-a6e3-a3fa85649157",
					"ruleIndex": 180,
					"kind": "fail",
					"message": {
						"text": "'encryption_configuration' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ecr.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "69e7c320-b65d-41bb-be02-d63ecc0bcc9d",
					"ruleIndex": 181,
					"kind": "fail",
					"message": {
						"text": "aws_ecr_repository[repository] doesn't have policies attached"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ecr.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "37304d3f-f852-40b8-ae3f-725e87a7cedf",
					"ruleIndex": 182,
					"kind": "fail",
					"message": {
						"text": "'enabled_cluster_log_types' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "ee7b93c1-b3f8-4a3b-9588-146d481814f5",
					"ruleIndex": 183,
					"kind": "fail",
					"message": {
						"text": "'google_compute_subnetwork[public-subnetwork].private_ip_google_access' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/networks.tf"
								},
								"region": {
									"startLine": 7
								}
							}
						}
					]
				},
				{
					"ruleId": "b03a748a-542d-44f4-bb86-9199ab4fd2d5",
					"ruleIndex": 184,
					"kind": "fail",
					"message": {
						"text": "Dockerfile doesn't contain instruction 'HEALTHCHECK'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "b03a748a-542d-44f4-bb86-9199ab4fd2d5",
					"ruleIndex": 184,
					"kind": "fail",
					"message": {
						"text": "Dockerfile doesn't contain instruction 'HEALTHCHECK'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "b03a748a-542d-44f4-bb86-9199ab4fd2d5",
					"ruleIndex": 184,
					"kind": "fail",
					"message": {
						"text": "Dockerfile doesn't contain instruction 'HEALTHCHECK'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "b03a748a-542d-44f4-bb86-9199ab4fd2d5",
					"ruleIndex": 184,
					"kind": "fail",
					"message": {
						"text": "Dockerfile doesn't contain instruction 'HEALTHCHECK'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/resources/Dockerfile"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "e592a0c5-5bdb-414c-9066-5dba7cdea370",
					"ruleIndex": 185,
					"kind": "fail",
					"message": {
						"text": "'aws_accessanalyzer_analyzer' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/providers.tf"
								},
								"region": {
									"startLine": 550
								}
							}
						}
					]
				},
				{
					"ruleId": "06933df4-0ea7-461c-b9b5-104d27390e0e",
					"ruleIndex": 186,
					"kind": "fail",
					"message": {
						"text": "'Resources.Properties' does not contain Groups"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 379
								}
							}
						}
					]
				},
				{
					"ruleId": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
					"ruleIndex": 187,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.imagePullPolicy relies on mutable images in cache"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "7c81d34c-8e5a-402b-9798-9f442630e678",
					"ruleIndex": 188,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.image does not include an image digest"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "7c81d34c-8e5a-402b-9798-9f442630e678",
					"ruleIndex": 188,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.containers.name={{health-check}}.image does not include an image digest"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 16
								}
							}
						}
					]
				},
				{
					"ruleId": "583053b7-e632-46f0-b989-f81ff8045385",
					"ruleIndex": 189,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.containers.name={{health-check}}.image tag is not provided or latest"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 16
								}
							}
						}
					]
				},
				{
					"ruleId": "f8e08a38-fc6e-4915-abbe-a7aadf1d59ef",
					"ruleIndex": 190,
					"kind": "fail",
					"message": {
						"text": "'azurerm_key_vault_secret[secret].content_type' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/key_vault.tf"
								},
								"region": {
									"startLine": 58
								}
							}
						}
					]
				},
				{
					"ruleId": "c2eae442-d3ba-4cb1-84ca-1db4f80eae3d",
					"ruleIndex": 191,
					"kind": "fail",
					"message": {
						"text": "'Resources.CleanBucketFunction.Properties.DeadLetterConfig' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1119
								}
							}
						}
					]
				},
				{
					"ruleId": "c2eae442-d3ba-4cb1-84ca-1db4f80eae3d",
					"ruleIndex": 191,
					"kind": "fail",
					"message": {
						"text": "'Resources.AnalysisLambda.Properties.DeadLetterConfig' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 880
								}
							}
						}
					]
				},
				{
					"ruleId": "8152e0cf-d2f0-47ad-96d5-d003a76eabd1",
					"ruleIndex": 192,
					"kind": "fail",
					"message": {
						"text": "aws_lambda_function[analysis_lambda].tracing_config is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/lambda.tf"
								},
								"region": {
									"startLine": 32
								}
							}
						}
					]
				},
				{
					"ruleId": "9488c451-074e-4cd3-aee3-7db6104f542c",
					"ruleIndex": 193,
					"kind": "fail",
					"message": {
						"text": "Property 'TracingConfig' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 880
								}
							}
						}
					]
				},
				{
					"ruleId": "9488c451-074e-4cd3-aee3-7db6104f542c",
					"ruleIndex": 193,
					"kind": "fail",
					"message": {
						"text": "Property 'TracingConfig' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1119
								}
							}
						}
					]
				},
				{
					"ruleId": "0ca1017d-3b80-423e-bb9c-6cd5898d34bd",
					"ruleIndex": 194,
					"kind": "fail",
					"message": {
						"text": "userpolicy[%!s(MISSING)].policy allows access to function (unqualified ARN) and its sub-resources, add another statement with \":*\" to function name"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/iam.tf"
								},
								"region": {
									"startLine": 29
								}
							}
						}
					]
				},
				{
					"ruleId": "ade74944-a674-4e00-859e-c6eab5bde441",
					"ruleIndex": 195,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.containers.name={{kustomizegoat}}.livenessProbe is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "ade74944-a674-4e00-859e-c6eab5bde441",
					"ruleIndex": 195,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.containers.name={{health-check}}.livenessProbe is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 15
								}
							}
						}
					]
				},
				{
					"ruleId": "99614418-f82b-4852-a9ae-5051402b741c",
					"ruleIndex": 196,
					"kind": "fail",
					"message": {
						"text": "Maintainer instruction not being used in Label 'MAINTAINER adrianp@stindustries.net'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/docker/bad-dockerfile/Dockerfile"
								},
								"region": {
									"startLine": 2
								}
							}
						}
					]
				},
				{
					"ruleId": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
					"ruleIndex": 197,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kustomizegoat}}"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml"
								},
								"region": {
									"startLine": 9
								}
							}
						}
					]
				},
				{
					"ruleId": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
					"ruleIndex": 197,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{health-check}}"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 10
								}
							}
						}
					]
				},
				{
					"ruleId": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
					"ruleIndex": 197,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kustomizegoat}}"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 15
								}
							}
						}
					]
				},
				{
					"ruleId": "268ca686-7fb7-4ae9-b129-955a2a89064e",
					"ruleIndex": 198,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.containers.name={{health-check}}.securityContext.capabilities is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 24
								}
							}
						}
					]
				},
				{
					"ruleId": "268ca686-7fb7-4ae9-b129-955a2a89064e",
					"ruleIndex": 198,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.containers.name=kustomizegoat.securityContext is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "7db8bd7e-9772-478c-9ec5-4bc202c5686f",
					"ruleIndex": 199,
					"kind": "fail",
					"message": {
						"text": "'lifecycle_rule' is not set"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/trail.tf"
								},
								"region": {
									"startLine": 11
								}
							}
						}
					]
				},
				{
					"ruleId": "7db8bd7e-9772-478c-9ec5-4bc202c5686f",
					"ruleIndex": 199,
					"kind": "fail",
					"message": {
						"text": "'lifecycle_rule' is not set"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/bucket.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "8f98334a-99aa-4d85-b72a-1399ca010413",
					"ruleIndex": 200,
					"kind": "fail",
					"message": {
						"text": "'transfer_acceleration' is missing"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/trail.tf"
								},
								"region": {
									"startLine": 11
								}
							}
						}
					]
				},
				{
					"ruleId": "8f98334a-99aa-4d85-b72a-1399ca010413",
					"ruleIndex": 200,
					"kind": "fail",
					"message": {
						"text": "'transfer_acceleration' is missing"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/bucket.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
					"ruleIndex": 201,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{unused-pvc}} does not have a 'LimitRange' policy associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/storage.yaml"
								},
								"region": {
									"startLine": 4
								}
							}
						}
					]
				},
				{
					"ruleId": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
					"ruleIndex": 201,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}} does not have a 'LimitRange' policy associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml"
								},
								"region": {
									"startLine": 5
								}
							}
						}
					]
				},
				{
					"ruleId": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
					"ruleIndex": 201,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}} does not have a 'LimitRange' policy associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 7
								}
							}
						}
					]
				},
				{
					"ruleId": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
					"ruleIndex": 201,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}} does not have a 'LimitRange' policy associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 4
								}
							}
						}
					]
				},
				{
					"ruleId": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
					"ruleIndex": 201,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}} does not have a 'LimitRange' policy associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/test/deployment.yaml"
								},
								"region": {
									"startLine": 5
								}
							}
						}
					]
				},
				{
					"ruleId": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
					"ruleIndex": 202,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}} does not have a 'ResourceQuota' policy associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 4
								}
							}
						}
					]
				},
				{
					"ruleId": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
					"ruleIndex": 202,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}} does not have a 'ResourceQuota' policy associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/test/deployment.yaml"
								},
								"region": {
									"startLine": 5
								}
							}
						}
					]
				},
				{
					"ruleId": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
					"ruleIndex": 202,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{unused-pvc}} does not have a 'ResourceQuota' policy associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/storage.yaml"
								},
								"region": {
									"startLine": 4
								}
							}
						}
					]
				},
				{
					"ruleId": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
					"ruleIndex": 202,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}} does not have a 'ResourceQuota' policy associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 7
								}
							}
						}
					]
				},
				{
					"ruleId": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
					"ruleIndex": 202,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}} does not have a 'ResourceQuota' policy associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml"
								},
								"region": {
									"startLine": 5
								}
							}
						}
					]
				},
				{
					"ruleId": "a97a340a-0063-418e-b3a1-3028941d0995",
					"ruleIndex": 203,
					"kind": "fail",
					"message": {
						"text": "spec.template.spec.containers.name=kustomizegoat does not have a security context"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "6425c98b-ca4e-41fe-896a-c78772c131f8",
					"ruleIndex": 204,
					"kind": "fail",
					"message": {
						"text": "'azurerm_postgresql_server[example].infrastructure_encryption_enabled' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 73
								}
							}
						}
					]
				},
				{
					"ruleId": "2c161e58-cb52-454f-abea-6470c37b5e6e",
					"ruleIndex": 205,
					"kind": "fail",
					"message": {
						"text": "Resources.DefaultDB.Properties.DeletionProtection is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 471
								}
							}
						}
					]
				},
				{
					"ruleId": "140869ea-25f2-40d4-a595-0c0da135114e",
					"ruleIndex": 206,
					"kind": "fail",
					"message": {
						"text": "'log_connections' parameter is not defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/rds.tf"
								},
								"region": {
									"startLine": 16
								}
							}
						}
					]
				},
				{
					"ruleId": "d53f4123-f8d8-4224-8cb3-f920b151cc98",
					"ruleIndex": 207,
					"kind": "fail",
					"message": {
						"text": "'log_disconnections' parameter is not defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/rds.tf"
								},
								"region": {
									"startLine": 16
								}
							}
						}
					]
				},
				{
					"ruleId": "a597e05a-c065-44e7-9cc8-742f572a504a",
					"ruleIndex": 208,
					"kind": "fail",
					"message": {
						"text": "'log_duration' parameter is not defined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/alicloud/rds.tf"
								},
								"region": {
									"startLine": 16
								}
							}
						}
					]
				},
				{
					"ruleId": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
					"ruleIndex": 209,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{health-check-deployment}}.spec.template.spec.containers.name={{health-check}}.securityContext.readOnlyRootFilesystem is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/deployment-kind.yaml"
								},
								"region": {
									"startLine": 24
								}
							}
						}
					]
				},
				{
					"ruleId": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
					"ruleIndex": 209,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{kustomizegoat}}.spec.template.spec.containers.name={{kustomizegoat}}.securityContext.readOnlyRootFilesystem is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "6c8d51af-218d-4bfb-94a9-94eabaa0703a",
					"ruleIndex": 210,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=LogsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1034
								}
							}
						}
					]
				},
				{
					"ruleId": "6c8d51af-218d-4bfb-94a9-94eabaa0703a",
					"ruleIndex": 210,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=DataBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 921
								}
							}
						}
					]
				},
				{
					"ruleId": "6c8d51af-218d-4bfb-94a9-94eabaa0703a",
					"ruleIndex": 210,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=OperationsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 975
								}
							}
						}
					]
				},
				{
					"ruleId": "6c8d51af-218d-4bfb-94a9-94eabaa0703a",
					"ruleIndex": 210,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=FinancialsBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 949
								}
							}
						}
					]
				},
				{
					"ruleId": "6c8d51af-218d-4bfb-94a9-94eabaa0703a",
					"ruleIndex": 210,
					"kind": "fail",
					"message": {
						"text": "'PublicAccessBlockConfiguration' is not defined%!(EXTRA string=DataScienceBucket)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 1003
								}
							}
						}
					]
				},
				{
					"ruleId": "3ca03a61-3249-4c16-8427-6f8e47dda729",
					"ruleIndex": 211,
					"kind": "fail",
					"message": {
						"text": "metadata.name={{goatlb}}.spec.ports.port={{80}} does not have a Pod port"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/service.yaml"
								},
								"region": {
									"startLine": 13
								}
							}
						}
					]
				},
				{
					"ruleId": "ad7444cf-817a-4765-a79e-2145f7981faf",
					"ruleIndex": 212,
					"kind": "fail",
					"message": {
						"text": "Resources.NatGatewayEIP1 does not have shield advanced associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/eks.yaml"
								},
								"region": {
									"startLine": 134
								}
							}
						}
					]
				},
				{
					"ruleId": "ad7444cf-817a-4765-a79e-2145f7981faf",
					"ruleIndex": 212,
					"kind": "fail",
					"message": {
						"text": "Resources.NatGatewayEIP2 does not have shield advanced associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/eks.yaml"
								},
								"region": {
									"startLine": 203
								}
							}
						}
					]
				},
				{
					"ruleId": "ad7444cf-817a-4765-a79e-2145f7981faf",
					"ruleIndex": 212,
					"kind": "fail",
					"message": {
						"text": "Resources.NatGatewayEIP2 does not have shield advanced associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/eks.yaml"
								},
								"region": {
									"startLine": 146
								}
							}
						}
					]
				},
				{
					"ruleId": "ad7444cf-817a-4765-a79e-2145f7981faf",
					"ruleIndex": 212,
					"kind": "fail",
					"message": {
						"text": "Resources.NatGatewayEIP1 does not have shield advanced associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/eks.yaml"
								},
								"region": {
									"startLine": 189
								}
							}
						}
					]
				},
				{
					"ruleId": "68a51e22-ae5a-4d48-8e87-b01a323605c9",
					"ruleIndex": 213,
					"kind": "fail",
					"message": {
						"text": "COPY '--from' does not reference a previously defined FROM alias"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/Dockerfile"
								},
								"region": {
									"startLine": 11
								}
							}
						}
					]
				},
				{
					"ruleId": "f6d299d2-21eb-41cc-b1e1-fe12d857500b",
					"ruleIndex": 214,
					"kind": "fail",
					"message": {
						"text": "Resources.VPC doesn't have a FlowLogs resource associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/eks.yaml"
								},
								"region": {
									"startLine": 76
								}
							}
						}
					]
				},
				{
					"ruleId": "f6d299d2-21eb-41cc-b1e1-fe12d857500b",
					"ruleIndex": 214,
					"kind": "fail",
					"message": {
						"text": "Resources.VPC doesn't have a FlowLogs resource associated"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/eks.yaml"
								},
								"region": {
									"startLine": 59
								}
							}
						}
					]
				},
				{
					"ruleId": "f83121ea-03da-434f-9277-9cd247ab3047",
					"ruleIndex": 215,
					"kind": "fail",
					"message": {
						"text": "aws_vpc[eks_vpc] is not the same as Flow Logs VPC id"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 44
								}
							}
						}
					]
				},
				{
					"ruleId": "c7fc1481-2899-4490-bbd8-544a3a61a2f3",
					"ruleIndex": 216,
					"kind": "informational",
					"message": {
						"text": "'azurerm_app_service[app-service1].auth_settings' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "c7fc1481-2899-4490-bbd8-544a3a61a2f3",
					"ruleIndex": 216,
					"kind": "informational",
					"message": {
						"text": "'azurerm_app_service[app-service2].auth_settings.enabled' is false"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 51
								}
							}
						}
					]
				},
				{
					"ruleId": "23b70e32-032e-4fa6-ba5c-82f56b9980e6",
					"ruleIndex": 217,
					"kind": "informational",
					"message": {
						"text": "'monitoring' is undefined or null%!(EXTRA string=db_app)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/db-app.tf"
								},
								"region": {
									"startLine": 243
								}
							}
						}
					]
				},
				{
					"ruleId": "23b70e32-032e-4fa6-ba5c-82f56b9980e6",
					"ruleIndex": 217,
					"kind": "informational",
					"message": {
						"text": "'monitoring' is undefined or null%!(EXTRA string=web_host)"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "60224630-175a-472a-9e23-133827040766",
					"ruleIndex": 218,
					"kind": "informational",
					"message": {
						"text": "'ebs_optimized' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/db-app.tf"
								},
								"region": {
									"startLine": 243
								}
							}
						}
					]
				},
				{
					"ruleId": "60224630-175a-472a-9e23-133827040766",
					"ruleIndex": 218,
					"kind": "informational",
					"message": {
						"text": "'ebs_optimized' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "8dd0ff1f-0da4-48df-9bb3-7f338ae36a40",
					"ruleIndex": 219,
					"kind": "informational",
					"message": {
						"text": "Resources.DBAppInstance.Properties doesn't have EbsOptimized set to true."
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 692
								}
							}
						}
					]
				},
				{
					"ruleId": "8dd0ff1f-0da4-48df-9bb3-7f338ae36a40",
					"ruleIndex": 219,
					"kind": "informational",
					"message": {
						"text": "Resources.EC2Instance.Properties doesn't have EbsOptimized set to true."
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 33
								}
							}
						}
					]
				},
				{
					"ruleId": "e84eaf4d-2f45-47b2-abe8-e581b06deb66",
					"ruleIndex": 220,
					"kind": "informational",
					"message": {
						"text": "namespaces in use: kustomizegoat"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/kustomizegoat/kustomize/base/deployment.yaml"
								},
								"region": {
									"startLine": 7
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'monitoring-framework-policy' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/es.tf"
								},
								"region": {
									"startLine": 41
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'app9-rds-cluster' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 130
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'policy-res' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/policies.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'app6-rds-cluster' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 81
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'app8-rds-cluster' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 113
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'policy_attachment-AmazonEKSClusterPolicy' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 34
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'web-node' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 77
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'app-service2' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 43
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'app2-rds-cluster' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 17
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'app5-rds-cluster' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 65
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'app3-rds-cluster' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 33
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'monitoring-framework' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/es.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'app4-rds-cluster' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 49
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'public-subnetwork' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/networks.tf"
								},
								"region": {
									"startLine": 7
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'app1-rds-cluster' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'policy_attachment-AmazonEKSServicePolicy' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 39
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'tf-compartment' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/oracle/compartment.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'app7-rds-cluster' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/rds.tf"
								},
								"region": {
									"startLine": 97
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'app-service1' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/app_service.tf"
								},
								"region": {
									"startLine": 22
								}
							}
						}
					]
				},
				{
					"ruleId": "1e434b25-8763-4b00-a5ca-ca03b7abbb66",
					"ruleIndex": 221,
					"kind": "informational",
					"message": {
						"text": "'web-eni' is not in snake case"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 231
								}
							}
						}
					]
				},
				{
					"ruleId": "45cff7b6-3b80-40c1-ba7b-2cf480678bb8",
					"ruleIndex": 222,
					"kind": "informational",
					"message": {
						"text": "aws_neptune_cluster.enable_cloudwatch_logs_exports is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/neptune.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "59312e8a-a64e-41e7-a252-618533dd1ea8",
					"ruleIndex": 223,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/iam.tf"
								},
								"region": {
									"startLine": 48
								}
							}
						}
					]
				},
				{
					"ruleId": "59312e8a-a64e-41e7-a252-618533dd1ea8",
					"ruleIndex": 223,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/iam.tf"
								},
								"region": {
									"startLine": 52
								}
							}
						}
					]
				},
				{
					"ruleId": "59312e8a-a64e-41e7-a252-618533dd1ea8",
					"ruleIndex": 223,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 143
								}
							}
						}
					]
				},
				{
					"ruleId": "59312e8a-a64e-41e7-a252-618533dd1ea8",
					"ruleIndex": 223,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 147
								}
							}
						}
					]
				},
				{
					"ruleId": "8d7f7b8c-6c7c-40f8-baa6-62006c6c7b56",
					"ruleIndex": 224,
					"kind": "informational",
					"message": {
						"text": "'enabled_cloudwatch_logs_exports' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/db-app.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "e38a8e0a-b88b-4902-b3fe-b0fcb17d5c10",
					"ruleIndex": 225,
					"kind": "informational",
					"message": {
						"text": "aws_subnet[{{eks_subnet2}}].tags does not have additional tags defined other than 'Name'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 95
								}
							}
						}
					]
				},
				{
					"ruleId": "e38a8e0a-b88b-4902-b3fe-b0fcb17d5c10",
					"ruleIndex": 225,
					"kind": "informational",
					"message": {
						"text": "aws_subnet[{{eks_subnet1}}].tags does not have additional tags defined other than 'Name'"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/eks.tf"
								},
								"region": {
									"startLine": 67
								}
							}
						}
					]
				},
				{
					"ruleId": "e38a8e0a-b88b-4902-b3fe-b0fcb17d5c10",
					"ruleIndex": 225,
					"kind": "informational",
					"message": {
						"text": "aws_s3_bucket[{{data_science}}].tags is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/supplygoat/main.tf"
								},
								"region": {
									"startLine": 59
								}
							}
						}
					]
				},
				{
					"ruleId": "55975007-f6e7-4134-83c3-298f1fe4b519",
					"ruleIndex": 226,
					"kind": "informational",
					"message": {
						"text": "'azurerm_mssql_server_security_alert_policy[alertpolicy6].email_account_admins' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 222
								}
							}
						}
					]
				},
				{
					"ruleId": "55975007-f6e7-4134-83c3-298f1fe4b519",
					"ruleIndex": 226,
					"kind": "informational",
					"message": {
						"text": "'azurerm_mssql_server_security_alert_policy[alertpolicy4].email_account_admins' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 195
								}
							}
						}
					]
				},
				{
					"ruleId": "55975007-f6e7-4134-83c3-298f1fe4b519",
					"ruleIndex": 226,
					"kind": "informational",
					"message": {
						"text": "'azurerm_mssql_server_security_alert_policy[example].email_account_admins' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/sql.tf"
								},
								"region": {
									"startLine": 31
								}
							}
						}
					]
				},
				{
					"ruleId": "55975007-f6e7-4134-83c3-298f1fe4b519",
					"ruleIndex": 226,
					"kind": "informational",
					"message": {
						"text": "'azurerm_mssql_server_security_alert_policy[alertpolicy1].email_account_admins' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 153
								}
							}
						}
					]
				},
				{
					"ruleId": "55975007-f6e7-4134-83c3-298f1fe4b519",
					"ruleIndex": 226,
					"kind": "informational",
					"message": {
						"text": "'azurerm_mssql_server_security_alert_policy[alertpolicy2].email_account_admins' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 167
								}
							}
						}
					]
				},
				{
					"ruleId": "55975007-f6e7-4134-83c3-298f1fe4b519",
					"ruleIndex": 226,
					"kind": "informational",
					"message": {
						"text": "'azurerm_mssql_server_security_alert_policy[alertpolicy5].email_account_admins' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 209
								}
							}
						}
					]
				},
				{
					"ruleId": "55975007-f6e7-4134-83c3-298f1fe4b519",
					"ruleIndex": 226,
					"kind": "informational",
					"message": {
						"text": "'azurerm_mssql_server_security_alert_policy[alertpolicy7].email_account_admins' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 236
								}
							}
						}
					]
				},
				{
					"ruleId": "55975007-f6e7-4134-83c3-298f1fe4b519",
					"ruleIndex": 226,
					"kind": "informational",
					"message": {
						"text": "'azurerm_mssql_server_security_alert_policy[alertpolicy3].email_account_admins' is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/mssql.tf"
								},
								"region": {
									"startLine": 181
								}
							}
						}
					]
				},
				{
					"ruleId": "5e6c9c68-8a82-408e-8749-ddad78cbb9c5",
					"ruleIndex": 227,
					"kind": "informational",
					"message": {
						"text": "Resources.WebNodeSG.Properties.SecurityGroupIngress[2].Description is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "5e6c9c68-8a82-408e-8749-ddad78cbb9c5",
					"ruleIndex": 227,
					"kind": "informational",
					"message": {
						"text": "Resources.WebNodeSG.Properties.SecurityGroupIngress[1].Description is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "5e6c9c68-8a82-408e-8749-ddad78cbb9c5",
					"ruleIndex": 227,
					"kind": "informational",
					"message": {
						"text": "Resources.WebNodeSG.Properties.SecurityGroupIngress[0].Description is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 118
								}
							}
						}
					]
				},
				{
					"ruleId": "5e6c9c68-8a82-408e-8749-ddad78cbb9c5",
					"ruleIndex": 227,
					"kind": "informational",
					"message": {
						"text": "Resources.DefaultSG.Properties.SecurityGroupIngress[0].Description is undefined"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/cfngoat/cfngoat.yaml"
								},
								"region": {
									"startLine": 604
								}
							}
						}
					]
				},
				{
					"ruleId": "cb3f5ed6-0d18-40de-a93d-b3538db31e8c",
					"ruleIndex": 228,
					"kind": "informational",
					"message": {
						"text": "aws_security_group[{{default}}] description is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/db-app.tf"
								},
								"region": {
									"startLine": 117
								}
							}
						}
					]
				},
				{
					"ruleId": "68eb4bf3-f9bf-463d-b5cf-e029bb446d2e",
					"ruleIndex": 229,
					"kind": "informational",
					"message": {
						"text": "aws_security_group[{{web-node}}].ingress description is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 90
								}
							}
						}
					]
				},
				{
					"ruleId": "68eb4bf3-f9bf-463d-b5cf-e029bb446d2e",
					"ruleIndex": 229,
					"kind": "informational",
					"message": {
						"text": "aws_security_group_rule[{{egress}}] description is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/db-app.tf"
								},
								"region": {
									"startLine": 416
								}
							}
						}
					]
				},
				{
					"ruleId": "68eb4bf3-f9bf-463d-b5cf-e029bb446d2e",
					"ruleIndex": 229,
					"kind": "informational",
					"message": {
						"text": "aws_security_group_rule[{{ingress}}] description is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/db-app.tf"
								},
								"region": {
									"startLine": 416
								}
							}
						}
					]
				},
				{
					"ruleId": "68eb4bf3-f9bf-463d-b5cf-e029bb446d2e",
					"ruleIndex": 229,
					"kind": "informational",
					"message": {
						"text": "aws_security_group[{{web-node}}].ingress description is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 83
								}
							}
						}
					]
				},
				{
					"ruleId": "68eb4bf3-f9bf-463d-b5cf-e029bb446d2e",
					"ruleIndex": 229,
					"kind": "informational",
					"message": {
						"text": "aws_security_group[{{web-node}}].egress description is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/ec2.tf"
								},
								"region": {
									"startLine": 97
								}
							}
						}
					]
				},
				{
					"ruleId": "2a153952-2544-4687-bcc9-cc8fea814a9b",
					"ruleIndex": 230,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/variables.tf"
								},
								"region": {
									"startLine": 11
								}
							}
						}
					]
				},
				{
					"ruleId": "2a153952-2544-4687-bcc9-cc8fea814a9b",
					"ruleIndex": 230,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/variables.tf"
								},
								"region": {
									"startLine": 21
								}
							}
						}
					]
				},
				{
					"ruleId": "2a153952-2544-4687-bcc9-cc8fea814a9b",
					"ruleIndex": 230,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/consts.tf"
								},
								"region": {
									"startLine": 24
								}
							}
						}
					]
				},
				{
					"ruleId": "2a153952-2544-4687-bcc9-cc8fea814a9b",
					"ruleIndex": 230,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/consts.tf"
								},
								"region": {
									"startLine": 8
								}
							}
						}
					]
				},
				{
					"ruleId": "2a153952-2544-4687-bcc9-cc8fea814a9b",
					"ruleIndex": 230,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/consts.tf"
								},
								"region": {
									"startLine": 4
								}
							}
						}
					]
				},
				{
					"ruleId": "2a153952-2544-4687-bcc9-cc8fea814a9b",
					"ruleIndex": 230,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/consts.tf"
								},
								"region": {
									"startLine": 20
								}
							}
						}
					]
				},
				{
					"ruleId": "2a153952-2544-4687-bcc9-cc8fea814a9b",
					"ruleIndex": 230,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/variables.tf"
								},
								"region": {
									"startLine": 7
								}
							}
						}
					]
				},
				{
					"ruleId": "2a153952-2544-4687-bcc9-cc8fea814a9b",
					"ruleIndex": 230,
					"kind": "informational",
					"message": {
						"text": "'description' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/consts.tf"
								},
								"region": {
									"startLine": 28
								}
							}
						}
					]
				},
				{
					"ruleId": "fc5109bf-01fd-49fb-8bde-4492b543c34a",
					"ruleIndex": 231,
					"kind": "informational",
					"message": {
						"text": "'type' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/consts.tf"
								},
								"region": {
									"startLine": 8
								}
							}
						}
					]
				},
				{
					"ruleId": "fc5109bf-01fd-49fb-8bde-4492b543c34a",
					"ruleIndex": 231,
					"kind": "informational",
					"message": {
						"text": "'type' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/gcp/variables.tf"
								},
								"region": {
									"startLine": 16
								}
							}
						}
					]
				},
				{
					"ruleId": "fc5109bf-01fd-49fb-8bde-4492b543c34a",
					"ruleIndex": 231,
					"kind": "informational",
					"message": {
						"text": "'type' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/azure/variables.tf"
								},
								"region": {
									"startLine": 12
								}
							}
						}
					]
				},
				{
					"ruleId": "fc5109bf-01fd-49fb-8bde-4492b543c34a",
					"ruleIndex": 231,
					"kind": "informational",
					"message": {
						"text": "'type' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/oracle/variables.tf"
								},
								"region": {
									"startLine": 1
								}
							}
						}
					]
				},
				{
					"ruleId": "fc5109bf-01fd-49fb-8bde-4492b543c34a",
					"ruleIndex": 231,
					"kind": "informational",
					"message": {
						"text": "'type' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/consts.tf"
								},
								"region": {
									"startLine": 20
								}
							}
						}
					]
				},
				{
					"ruleId": "fc5109bf-01fd-49fb-8bde-4492b543c34a",
					"ruleIndex": 231,
					"kind": "informational",
					"message": {
						"text": "'type' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/consts.tf"
								},
								"region": {
									"startLine": 24
								}
							}
						}
					]
				},
				{
					"ruleId": "fc5109bf-01fd-49fb-8bde-4492b543c34a",
					"ruleIndex": 231,
					"kind": "informational",
					"message": {
						"text": "'type' is undefined or null"
					},
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "../../path/iac/terragoat/terraform/aws/consts.tf"
								},
								"region": {
									"startLine": 4
								}
							}
						}
					]
				}
			],
			"taxonomies": [
				{
					"guid": "58cdcc6f-fe41-4724-bfb3-131a93df4c3f",
					"name": "Categories",
					"fullDescription": {
						"text": "This taxonomy contains the types an issue can assume"
					},
					"shortDescription": {
						"text": "Vulnerabilities categories"
					},
					"taxa": [
						{
							"id": "CAT000",
							"name": "Undefined Category",
							"shortDescription": {
								"text": "Category is not defined"
							},
							"fullDescription": {
								"text": "Category is not defined"
							}
						},
						{
							"id": "CAT006",
							"name": "Encryption",
							"shortDescription": {
								"text": "Data Security and Encryption configuration"
							},
							"fullDescription": {
								"text": "Data Security and Encryption configuration"
							}
						},
						{
							"id": "CAT008",
							"name": "Insecure Defaults",
							"shortDescription": {
								"text": "Configurations that are insecure by default"
							},
							"fullDescription": {
								"text": "Configurations that are insecure by default"
							}
						},
						{
							"id": "CAT010",
							"name": "Observability",
							"shortDescription": {
								"text": "Logging and Monitoring"
							},
							"fullDescription": {
								"text": "Logging and Monitoring"
							}
						},
						{
							"id": "CAT003",
							"name": "Backup",
							"shortDescription": {
								"text": "Survivability and Recovery"
							},
							"fullDescription": {
								"text": "Survivability and Recovery"
							}
						},
						{
							"id": "CAT007",
							"name": "Insecure Configurations",
							"shortDescription": {
								"text": "Configurations which expose the application unnecessarily"
							},
							"fullDescription": {
								"text": "Configurations which expose the application unnecessarily"
							}
						},
						{
							"id": "CAT013",
							"name": "Supply-Chain",
							"shortDescription": {
								"text": "Dependency version management"
							},
							"fullDescription": {
								"text": "Dependency version management"
							}
						},
						{
							"id": "CAT014",
							"name": "Structure and Semantics",
							"shortDescription": {
								"text": "Malformed document structure or inadequate semantics"
							},
							"fullDescription": {
								"text": "Malformed document structure or inadequate semantics"
							}
						},
						{
							"id": "CAT001",
							"name": "Access Control",
							"shortDescription": {
								"text": "Service permission and identity management"
							},
							"fullDescription": {
								"text": "Service permission and identity management"
							}
						},
						{
							"id": "CAT009",
							"name": "Networking and Firewall",
							"shortDescription": {
								"text": "Network port exposure and firewall configuration"
							},
							"fullDescription": {
								"text": "Network port exposure and firewall configuration"
							}
						},
						{
							"id": "CAT012",
							"name": "Secret Management",
							"shortDescription": {
								"text": "Secret and Key management"
							},
							"fullDescription": {
								"text": "Secret and Key management"
							}
						},
						{
							"id": "CAT015",
							"name": "Bill Of Materials",
							"shortDescription": {
								"text": "List of resources provisioned"
							},
							"fullDescription": {
								"text": "List of resources provisioned"
							}
						},
						{
							"id": "CAT004",
							"name": "Best Practices",
							"shortDescription": {
								"text": "Metadata management"
							},
							"fullDescription": {
								"text": "Metadata management"
							}
						},
						{
							"id": "CAT005",
							"name": "Build Process",
							"shortDescription": {
								"text": "Insecure configurations when building/deploying"
							},
							"fullDescription": {
								"text": "Insecure configurations when building/deploying"
							}
						},
						{
							"id": "CAT011",
							"name": "Resource Management",
							"shortDescription": {
								"text": "Resource and privilege limit configuration"
							},
							"fullDescription": {
								"text": "Resource and privilege limit configuration"
							}
						},
						{
							"id": "CAT002",
							"name": "Availability",
							"shortDescription": {
								"text": "Reliability and Scalability"
							},
							"fullDescription": {
								"text": "Reliability and Scalability"
							}
						}
					]
				}
			]
		}
	]
}
