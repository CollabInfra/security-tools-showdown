{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0-rtm.5.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://github.com/aquasecurity/defsec",
          "name": "defsec",
          "rules": [
            {
              "id": "aws-s3-block-public-acls",
              "shortDescription": {
                "text": "S3 Access block should block public ACL"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-acls/"
            },
            {
              "id": "aws-s3-block-public-policy",
              "shortDescription": {
                "text": "S3 Access block should block public policy"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-policy/"
            },
            {
              "id": "aws-s3-enable-bucket-encryption",
              "shortDescription": {
                "text": "Unencrypted S3 bucket."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-encryption/"
            },
            {
              "id": "aws-s3-enable-bucket-logging",
              "shortDescription": {
                "text": "S3 Bucket does not have logging enabled."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-logging/"
            },
            {
              "id": "aws-s3-enable-versioning",
              "shortDescription": {
                "text": "S3 Data should be versioned"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-versioning/"
            },
            {
              "id": "aws-s3-encryption-customer-key",
              "shortDescription": {
                "text": "S3 encryption should use Customer Managed Keys"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/encryption-customer-key/"
            },
            {
              "id": "aws-s3-ignore-public-acls",
              "shortDescription": {
                "text": "S3 Access Block should Ignore Public Acl"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/ignore-public-acls/"
            },
            {
              "id": "aws-s3-no-public-access-with-acl",
              "shortDescription": {
                "text": "S3 Buckets not publicly accessible through ACL."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-access-with-acl/"
            },
            {
              "id": "aws-s3-no-public-buckets",
              "shortDescription": {
                "text": "S3 Access block should restrict public bucket to limit access"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-buckets/"
            },
            {
              "id": "aws-s3-specify-public-access-block",
              "shortDescription": {
                "text": "S3 buckets should each define an aws_s3_bucket_public_access_block"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/specify-public-access-block/"
            },
            {
              "id": "aws-ec2-add-description-to-security-group",
              "shortDescription": {
                "text": "Missing description for security group."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group/"
            },
            {
              "id": "aws-ec2-add-description-to-security-group-rule",
              "shortDescription": {
                "text": "Missing description for security group rule."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/"
            },
            {
              "id": "aws-ec2-enable-at-rest-encryption",
              "shortDescription": {
                "text": "Instance with unencrypted block device."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enable-at-rest-encryption/"
            },
            {
              "id": "aws-ec2-enable-volume-encryption",
              "shortDescription": {
                "text": "EBS volumes must be encrypted"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enable-volume-encryption/"
            },
            {
              "id": "aws-ec2-enforce-http-token-imds",
              "shortDescription": {
                "text": "aws_instance should activate session tokens for Instance Metadata Service."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enforce-http-token-imds/"
            },
            {
              "id": "aws-ec2-no-public-egress-sgr",
              "shortDescription": {
                "text": "An egress security group rule allows traffic to /0."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-egress-sgr/"
            },
            {
              "id": "aws-ec2-no-public-ingress-sgr",
              "shortDescription": {
                "text": "An ingress security group rule allows traffic from /0."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ingress-sgr/"
            },
            {
              "id": "aws-ec2-no-public-ip-subnet",
              "shortDescription": {
                "text": "Instances in a subnet should not receive a public IP address by default."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ip-subnet/"
            },
            {
              "id": "aws-ec2-no-secrets-in-user-data",
              "shortDescription": {
                "text": "User data for EC2 instances must not contain sensitive AWS keys"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-secrets-in-user-data/"
            },
            {
              "id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
              "shortDescription": {
                "text": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"
            },
            {
              "id": "aws-ec2-volume-encryption-customer-key",
              "shortDescription": {
                "text": "EBS volume encryption should use Customer Managed Keys"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/volume-encryption-customer-key/"
            },
            {
              "id": "aws-ecr-enable-image-scans",
              "shortDescription": {
                "text": "ECR repository has image scans disabled."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ecr/enable-image-scans/"
            },
            {
              "id": "aws-ecr-enforce-immutable-repository",
              "shortDescription": {
                "text": "ECR images tags shouldn't be mutable."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ecr/enforce-immutable-repository/"
            },
            {
              "id": "aws-ecr-repository-customer-key",
              "shortDescription": {
                "text": "ECR Repository should use customer managed keys to allow more control"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ecr/repository-customer-key/"
            },
            {
              "id": "aws-eks-enable-control-plane-logging",
              "shortDescription": {
                "text": "EKS Clusters should have cluster control plane logging turned on"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/enable-control-plane-logging/"
            },
            {
              "id": "aws-eks-encrypt-secrets",
              "shortDescription": {
                "text": "EKS should have the encryption of secrets enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/encrypt-secrets/"
            },
            {
              "id": "aws-eks-no-public-cluster-access",
              "shortDescription": {
                "text": "EKS Clusters should have the public access disabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/no-public-cluster-access/"
            },
            {
              "id": "aws-eks-no-public-cluster-access-to-cidr",
              "shortDescription": {
                "text": "EKS cluster should not have open CIDR range for public access"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/no-public-cluster-access-to-cidr/"
            },
            {
              "id": "aws-elastic-search-enable-domain-encryption",
              "shortDescription": {
                "text": "Elasticsearch domain isn't encrypted at rest."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enable-domain-encryption/"
            },
            {
              "id": "aws-elastic-search-enable-domain-logging",
              "shortDescription": {
                "text": "Domain logging should be enabled for Elastic Search domains"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enable-domain-logging/"
            },
            {
              "id": "aws-elastic-search-enable-in-transit-encryption",
              "shortDescription": {
                "text": "Elasticsearch domain uses plaintext traffic for node to node communication."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enable-in-transit-encryption/"
            },
            {
              "id": "aws-elastic-search-enforce-https",
              "shortDescription": {
                "text": "Elasticsearch doesn't enforce HTTPS traffic."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enforce-https/"
            },
            {
              "id": "aws-elastic-search-use-secure-tls-policy",
              "shortDescription": {
                "text": "Elasticsearch domain endpoint is using outdated TLS policy."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/use-secure-tls-policy/"
            },
            {
              "id": "aws-elb-alb-not-public",
              "shortDescription": {
                "text": "Load balancer is exposed to the internet."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elb/alb-not-public/"
            },
            {
              "id": "aws-iam-no-policy-wildcards",
              "shortDescription": {
                "text": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-policy-wildcards/"
            },
            {
              "id": "aws-iam-no-user-attached-policies",
              "shortDescription": {
                "text": "IAM policies should not be granted directly to users."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-user-attached-policies/"
            },
            {
              "id": "aws-kms-auto-rotate-keys",
              "shortDescription": {
                "text": "A KMS key is not configured to auto-rotate."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/kms/auto-rotate-keys/"
            },
            {
              "id": "aws-lambda-enable-tracing",
              "shortDescription": {
                "text": "Lambda functions should have X-Ray tracing enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/lambda/enable-tracing/"
            },
            {
              "id": "aws-neptune-enable-log-export",
              "shortDescription": {
                "text": "Neptune logs export should be enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/neptune/enable-log-export/"
            },
            {
              "id": "aws-neptune-enable-storage-encryption",
              "shortDescription": {
                "text": "Neptune storage must be encrypted at rest"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/neptune/enable-storage-encryption/"
            },
            {
              "id": "aws-neptune-encryption-customer-key",
              "shortDescription": {
                "text": "Neptune encryption should use Customer Managed Keys"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/neptune/encryption-customer-key/"
            },
            {
              "id": "aws-rds-enable-deletion-protection",
              "shortDescription": {
                "text": "RDS Deletion Protection Disabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/enable-deletion-protection/"
            },
            {
              "id": "aws-rds-enable-iam-auth",
              "shortDescription": {
                "text": "RDS IAM Database Authentication Disabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/enable-iam-auth/"
            },
            {
              "id": "aws-rds-enable-performance-insights",
              "shortDescription": {
                "text": "Enable Performance Insights to detect potential problems"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/enable-performance-insights/"
            },
            {
              "id": "aws-rds-encrypt-cluster-storage-data",
              "shortDescription": {
                "text": "There is no encryption specified or encryption is disabled on the RDS Cluster."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-cluster-storage-data/"
            },
            {
              "id": "aws-rds-encrypt-instance-storage-data",
              "shortDescription": {
                "text": "RDS encryption has not been enabled at a DB Instance level."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-instance-storage-data/"
            },
            {
              "id": "aws-rds-no-public-db-access",
              "shortDescription": {
                "text": "A database resource is marked as publicly accessible."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/no-public-db-access/"
            },
            {
              "id": "aws-rds-specify-backup-retention",
              "shortDescription": {
                "text": "RDS Cluster and RDS instance should have backup retention longer than default 1 day"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/specify-backup-retention/"
            },
            {
              "id": "azure-appservice-account-identity-registered",
              "shortDescription": {
                "text": "Web App has registration with AD enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/account-identity-registered/"
            },
            {
              "id": "azure-appservice-authentication-enabled",
              "shortDescription": {
                "text": "App Service authentication is activated"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/authentication-enabled/"
            },
            {
              "id": "azure-appservice-enable-http2",
              "shortDescription": {
                "text": "Web App uses the latest HTTP version"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/enable-http2/"
            },
            {
              "id": "azure-appservice-require-client-cert",
              "shortDescription": {
                "text": "Web App accepts incoming client certificate"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/require-client-cert/"
            },
            {
              "id": "azure-appservice-use-secure-tls-policy",
              "shortDescription": {
                "text": "Web App uses latest TLS version"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/use-secure-tls-policy/"
            },
            {
              "id": "azure-compute-disable-password-authentication",
              "shortDescription": {
                "text": "Password authentication should be disabled on Azure virtual machines"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/compute/disable-password-authentication/"
            },
            {
              "id": "azure-compute-enable-disk-encryption",
              "shortDescription": {
                "text": "Enable disk encryption on managed disk"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/compute/enable-disk-encryption/"
            },
            {
              "id": "azure-container-configured-network-policy",
              "shortDescription": {
                "text": "Ensure AKS cluster has Network Policy configured"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/container/configured-network-policy/"
            },
            {
              "id": "azure-container-limit-authorized-ips",
              "shortDescription": {
                "text": "Ensure AKS has an API Server Authorized IP Ranges enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/container/limit-authorized-ips/"
            },
            {
              "id": "azure-container-logging",
              "shortDescription": {
                "text": "Ensure AKS logging to Azure Monitoring is Configured"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/container/logging/"
            },
            {
              "id": "azure-container-use-rbac-permissions",
              "shortDescription": {
                "text": "Ensure RBAC is enabled on AKS clusters"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/container/use-rbac-permissions/"
            },
            {
              "id": "azure-database-all-threat-alerts-enabled",
              "shortDescription": {
                "text": "No threat detections are set"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/all-threat-alerts-enabled/"
            },
            {
              "id": "azure-database-enable-audit",
              "shortDescription": {
                "text": "Auditing should be enabled on Azure SQL Databases"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-audit/"
            },
            {
              "id": "azure-database-enable-ssl-enforcement",
              "shortDescription": {
                "text": "SSL should be enforced on database connections where applicable"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-ssl-enforcement/"
            },
            {
              "id": "azure-database-no-public-access",
              "shortDescription": {
                "text": "Ensure databases are not publicly accessible"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/no-public-access/"
            },
            {
              "id": "azure-database-postgres-configuration-connection-throttling",
              "shortDescription": {
                "text": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/postgres-configuration-connection-throttling/"
            },
            {
              "id": "azure-database-postgres-configuration-log-checkpoints",
              "shortDescription": {
                "text": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/postgres-configuration-log-checkpoints/"
            },
            {
              "id": "azure-database-postgres-configuration-log-connections",
              "shortDescription": {
                "text": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/postgres-configuration-log-connections/"
            },
            {
              "id": "azure-database-secure-tls-policy",
              "shortDescription": {
                "text": "Databases should have the minimum TLS set for connections"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/secure-tls-policy/"
            },
            {
              "id": "azure-database-threat-alert-email-set",
              "shortDescription": {
                "text": "At least one email address is set for threat alerts"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-set/"
            },
            {
              "id": "azure-database-threat-alert-email-to-owner",
              "shortDescription": {
                "text": "Security threat alerts go to subcription owners and co-administrators"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-to-owner/"
            },
            {
              "id": "azure-keyvault-content-type-for-secret",
              "shortDescription": {
                "text": "Key vault Secret should have a content type set"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/keyvault/content-type-for-secret/"
            },
            {
              "id": "azure-keyvault-ensure-key-expiry",
              "shortDescription": {
                "text": "Ensure that the expiration date is set on all keys"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/keyvault/ensure-key-expiry/"
            },
            {
              "id": "azure-keyvault-ensure-secret-expiry",
              "shortDescription": {
                "text": "Key Vault Secret should have an expiration date set"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/keyvault/ensure-secret-expiry/"
            },
            {
              "id": "azure-keyvault-no-purge",
              "shortDescription": {
                "text": "Key vault should have purge protection enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/keyvault/no-purge/"
            },
            {
              "id": "azure-keyvault-specify-network-acl",
              "shortDescription": {
                "text": "Key vault should have the network acl block specified"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/keyvault/specify-network-acl/"
            },
            {
              "id": "azure-monitor-activity-log-retention-set",
              "shortDescription": {
                "text": "Ensure the activity retention log is set to at least a year"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/monitor/activity-log-retention-set/"
            },
            {
              "id": "azure-monitor-capture-all-activities",
              "shortDescription": {
                "text": "Ensure log profile captures all activities"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/monitor/capture-all-activities/"
            },
            {
              "id": "azure-monitor-capture-all-regions",
              "shortDescription": {
                "text": "Ensure activitys are captured for all locations"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/monitor/capture-all-regions/"
            },
            {
              "id": "azure-network-disable-rdp-from-internet",
              "shortDescription": {
                "text": "RDP access should not be accessible from the Internet, should be blocked on port 3389"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/network/disable-rdp-from-internet/"
            },
            {
              "id": "azure-network-no-public-ingress",
              "shortDescription": {
                "text": "An inbound network security rule allows traffic from /0."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/network/no-public-ingress/"
            },
            {
              "id": "azure-network-retention-policy-set",
              "shortDescription": {
                "text": "Retention policy for flow logs should be enabled and set to greater than 90 days"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/network/retention-policy-set/"
            },
            {
              "id": "azure-network-ssh-blocked-from-internet",
              "shortDescription": {
                "text": "SSH access should not be accessible from the Internet, should be blocked on port 22"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/network/ssh-blocked-from-internet/"
            },
            {
              "id": "azure-security-center-alert-on-severe-notifications",
              "shortDescription": {
                "text": "Send notification emails for high severity alerts"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/security-center/alert-on-severe-notifications/"
            },
            {
              "id": "azure-security-center-enable-standard-subscription",
              "shortDescription": {
                "text": "Enable the standard security center subscription tier"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/security-center/enable-standard-subscription/"
            },
            {
              "id": "azure-security-center-set-required-contact-details",
              "shortDescription": {
                "text": "The required contact details should be set for security center"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/security-center/set-required-contact-details/"
            },
            {
              "id": "azure-storage-allow-microsoft-service-bypass",
              "shortDescription": {
                "text": "Trusted Microsoft Services should have bypass access to Storage accounts"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/storage/allow-microsoft-service-bypass/"
            },
            {
              "id": "azure-storage-use-secure-tls-policy",
              "shortDescription": {
                "text": "The minimum TLS version for Storage Accounts should be TLS1_2"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/storage/use-secure-tls-policy/"
            },
            {
              "id": "google-bigquery-no-public-access",
              "shortDescription": {
                "text": "BigQuery datasets should only be accessible within the organisation"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/bigquery/no-public-access/"
            },
            {
              "id": "google-compute-disk-encryption-customer-key",
              "shortDescription": {
                "text": "Disks should be encrypted with customer managed encryption keys"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/disk-encryption-customer-key/"
            },
            {
              "id": "google-compute-enable-shielded-vm-im",
              "shortDescription": {
                "text": "Instances should have Shielded VM integrity monitoring enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/enable-shielded-vm-im/"
            },
            {
              "id": "google-compute-enable-shielded-vm-vtpm",
              "shortDescription": {
                "text": "Instances should have Shielded VM VTPM enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/enable-shielded-vm-vtpm/"
            },
            {
              "id": "google-compute-enable-vpc-flow-logs",
              "shortDescription": {
                "text": "VPC flow logs should be enabled for all subnetworks"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/enable-vpc-flow-logs/"
            },
            {
              "id": "google-compute-no-ip-forwarding",
              "shortDescription": {
                "text": "Instances should not have IP forwarding enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-ip-forwarding/"
            },
            {
              "id": "google-compute-no-oslogin-override",
              "shortDescription": {
                "text": "Instances should not override the project setting for OS Login"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-oslogin-override/"
            },
            {
              "id": "google-compute-no-project-wide-ssh-keys",
              "shortDescription": {
                "text": "Disable project-wide SSH keys for all instances"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-project-wide-ssh-keys/"
            },
            {
              "id": "google-compute-no-public-ingress",
              "shortDescription": {
                "text": "An inbound firewall rule allows traffic from /0."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-public-ingress/"
            },
            {
              "id": "google-compute-no-public-ip",
              "shortDescription": {
                "text": "Instances should not have public IP addresses"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-public-ip/"
            },
            {
              "id": "google-compute-no-serial-port",
              "shortDescription": {
                "text": "Disable serial port connectivity for all instances"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-serial-port/"
            },
            {
              "id": "google-compute-vm-disk-encryption-customer-key",
              "shortDescription": {
                "text": "VM disks should be encrypted with Customer Supplied Encryption Keys"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/vm-disk-encryption-customer-key/"
            },
            {
              "id": "google-gke-enable-auto-repair",
              "shortDescription": {
                "text": "Kubernetes should have 'Automatic repair' enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-auto-repair/"
            },
            {
              "id": "google-gke-enable-auto-upgrade",
              "shortDescription": {
                "text": "Kubernetes should have 'Automatic upgrade' enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-auto-upgrade/"
            },
            {
              "id": "google-gke-enable-ip-aliasing",
              "shortDescription": {
                "text": "Clusters should have IP aliasing enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-ip-aliasing/"
            },
            {
              "id": "google-gke-enable-network-policy",
              "shortDescription": {
                "text": "Network Policy should be enabled on GKE clusters"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-network-policy/"
            },
            {
              "id": "google-gke-enable-private-cluster",
              "shortDescription": {
                "text": "Clusters should be set to private"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-private-cluster/"
            },
            {
              "id": "google-gke-enable-stackdriver-logging",
              "shortDescription": {
                "text": "Stackdriver Logging should be enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-stackdriver-logging/"
            },
            {
              "id": "google-gke-enable-stackdriver-monitoring",
              "shortDescription": {
                "text": "Stackdriver Monitoring should be enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-stackdriver-monitoring/"
            },
            {
              "id": "google-gke-enforce-pod-security-policy",
              "shortDescription": {
                "text": "Pod security policy enforcement not defined."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enforce-pod-security-policy/"
            },
            {
              "id": "google-gke-metadata-endpoints-disabled",
              "shortDescription": {
                "text": "Legacy metadata endpoints enabled."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/metadata-endpoints-disabled/"
            },
            {
              "id": "google-gke-no-public-control-plane",
              "shortDescription": {
                "text": "GKE Control Plane should not be publicly accessible"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/no-public-control-plane/"
            },
            {
              "id": "google-gke-node-metadata-security",
              "shortDescription": {
                "text": "Node metadata value disables metadata concealment."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/node-metadata-security/"
            },
            {
              "id": "google-gke-node-pool-uses-cos",
              "shortDescription": {
                "text": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/node-pool-uses-cos/"
            },
            {
              "id": "google-gke-use-cluster-labels",
              "shortDescription": {
                "text": "Clusters should be configured with Labels"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/use-cluster-labels/"
            },
            {
              "id": "google-gke-use-rbac-permissions",
              "shortDescription": {
                "text": "Legacy ABAC permissions are enabled."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/use-rbac-permissions/"
            },
            {
              "id": "google-gke-use-service-account",
              "shortDescription": {
                "text": "Checks for service account defined for GKE nodes"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/use-service-account/"
            },
            {
              "id": "google-sql-enable-backup",
              "shortDescription": {
                "text": "Enable automated backups to recover from data-loss"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/enable-backup/"
            },
            {
              "id": "google-sql-enable-pg-temp-file-logging",
              "shortDescription": {
                "text": "Temporary file logging should be enabled for all temporary files."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/enable-pg-temp-file-logging/"
            },
            {
              "id": "google-sql-encrypt-in-transit-data",
              "shortDescription": {
                "text": "SSL connections to a SQL database instance should be enforced."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/encrypt-in-transit-data/"
            },
            {
              "id": "google-sql-no-public-access",
              "shortDescription": {
                "text": "Ensure that Cloud SQL Database Instances are not publicly exposed"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/no-public-access/"
            },
            {
              "id": "google-sql-pg-log-checkpoints",
              "shortDescription": {
                "text": "Ensure that logging of checkpoints is enabled."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/pg-log-checkpoints/"
            },
            {
              "id": "google-sql-pg-log-connections",
              "shortDescription": {
                "text": "Ensure that logging of connections is enabled."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/pg-log-connections/"
            },
            {
              "id": "google-sql-pg-log-disconnections",
              "shortDescription": {
                "text": "Ensure that logging of disconnections is enabled."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/pg-log-disconnections/"
            },
            {
              "id": "google-sql-pg-log-lock-waits",
              "shortDescription": {
                "text": "Ensure that logging of lock waits is enabled."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/pg-log-lock-waits/"
            },
            {
              "id": "google-storage-bucket-encryption-customer-key",
              "shortDescription": {
                "text": "Cloud Storage buckets should be encrypted with a customer-managed key."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/storage/bucket-encryption-customer-key/"
            },
            {
              "id": "google-storage-enable-ubla",
              "shortDescription": {
                "text": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled"
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/storage/enable-ubla/"
            },
            {
              "id": "google-storage-no-public-access",
              "shortDescription": {
                "text": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible."
              },
              "helpUri": "https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/storage/no-public-access/"
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "aws-s3-block-public-acls",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 94
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-acls",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 72
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-acls",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-acls",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-acls",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-policy",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public policies"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 94
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-policy",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public policies"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 72
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-policy",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public policies"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-policy",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public policies"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-policy",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public policies"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-encryption",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Bucket does not have encryption enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 72
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-encryption",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Bucket does not have encryption enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-encryption",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Bucket does not have encryption enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-encryption",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Bucket does not have encryption enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-logging",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Bucket does not have logging enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-logging",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Bucket does not have logging enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-logging",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Bucket does not have logging enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-versioning",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Bucket does not have versioning enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-versioning",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Bucket does not have versioning enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-encryption-customer-key",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Bucket does not encrypt data with a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 72
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-encryption-customer-key",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Bucket does not encrypt data with a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-encryption-customer-key",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Bucket does not encrypt data with a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-encryption-customer-key",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Bucket does not encrypt data with a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-ignore-public-acls",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "No public access block so not ignoring public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 94
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-ignore-public-acls",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "No public access block so not ignoring public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 72
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-ignore-public-acls",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "No public access block so not ignoring public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-ignore-public-acls",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "No public access block so not ignoring public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-ignore-public-acls",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "No public access block so not ignoring public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-access-with-acl",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Bucket has a public ACL: 'public-read'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-buckets",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "No public access block so not restricting public buckets"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 94
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-buckets",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "No public access block so not restricting public buckets"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 72
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-buckets",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "No public access block so not restricting public buckets"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-buckets",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "No public access block so not restricting public buckets"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-buckets",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "No public access block so not restricting public buckets"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-specify-public-access-block",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Bucket does not have a corresponding public access block."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 94
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-specify-public-access-block",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Bucket does not have a corresponding public access block."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 72
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-specify-public-access-block",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Bucket does not have a corresponding public access block."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-specify-public-access-block",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Bucket does not have a corresponding public access block."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-specify-public-access-block",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Bucket does not have a corresponding public access block."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/main.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-add-description-to-security-group",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Security group explicitly uses the default description."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 117,
                  "endLine": 134
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-add-description-to-security-group-rule",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Security group rule does not have a description."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 115
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-add-description-to-security-group-rule",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Security group rule does not have a description."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 115
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-add-description-to-security-group-rule",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Security group rule does not have a description."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 115
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-add-description-to-security-group-rule",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Security group rule does not have a description."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 145,
                  "endLine": 152
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-add-description-to-security-group-rule",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Security group rule does not have a description."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 136,
                  "endLine": 143
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-enable-at-rest-encryption",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Root block device is not encrypted."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 32
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-enable-at-rest-encryption",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Root block device is not encrypted."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 243,
                  "endLine": 413
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-enable-volume-encryption",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "EBS volume is not encrypted."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-enforce-http-token-imds",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Instance does not require IMDS access to require a token"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 32
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-enforce-http-token-imds",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Instance does not require IMDS access to require a token"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 243,
                  "endLine": 413
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-no-public-egress-sgr",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Security group rule allows egress to multiple public internet addresses."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 115
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-no-public-egress-sgr",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Security group rule allows egress to multiple public internet addresses."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 145,
                  "endLine": 152
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-no-public-ingress-sgr",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Security group rule allows ingress from public internet."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 115
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-no-public-ingress-sgr",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Security group rule allows ingress from public internet."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 115
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-no-public-ip-subnet",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "Subnet associates public IP address."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/eks.tf"
                },
                "region": {
                  "startLine": 90,
                  "endLine": 116
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-no-public-ip-subnet",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "Subnet associates public IP address."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/eks.tf"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 88
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-no-public-ip-subnet",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "Subnet associates public IP address."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 155,
                  "endLine": 173
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-no-public-ip-subnet",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "Subnet associates public IP address."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 135,
                  "endLine": 153
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-no-secrets-in-user-data",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "Sensitive data found in instance user data: Check for AWS Access Key Id"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 32
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "VPC Flow Logs is not enabled for VPC "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/eks.tf"
                },
                "region": {
                  "startLine": 44,
                  "endLine": 60
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ec2-volume-encryption-customer-key",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "EBS volume does not use a customer-managed KMS key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ecr-enable-image-scans",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Image scanning is not enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ecr.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ecr-enforce-immutable-repository",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Repository tags are mutable."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ecr.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-ecr-repository-customer-key",
          "ruleIndex": 23,
          "level": "note",
          "message": {
            "text": "Repository is not encrypted using KMS."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ecr.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-eks-enable-control-plane-logging",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Control plane API logging is not enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/eks.tf"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-eks-enable-control-plane-logging",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Control plane audit logging is not enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/eks.tf"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-eks-enable-control-plane-logging",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Control plane authenticator logging is not enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/eks.tf"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-eks-enable-control-plane-logging",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Control plane controller manager logging is not enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/eks.tf"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-eks-enable-control-plane-logging",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Control plane scheduler logging is not enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/eks.tf"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-eks-encrypt-secrets",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Cluster does not have secret encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/eks.tf"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-eks-no-public-cluster-access",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "Public cluster access is enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/eks.tf"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-eks-no-public-cluster-access-to-cidr",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "Cluster allows access from a public CIDR: 0.0.0.0/0."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/eks.tf"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-elastic-search-enable-domain-encryption",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "Domain does not have at-rest encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/es.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-elastic-search-enable-domain-logging",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "Domain audit logging is not enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/es.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-elastic-search-enable-in-transit-encryption",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "Domain does not have in-transit encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/es.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-elastic-search-enforce-https",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "Domain does not enforce HTTPS."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/es.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-elastic-search-use-secure-tls-policy",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "Domain does not have a secure TLS policy."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/es.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-elb-alb-not-public",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "Load balancer is exposed publicly."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/elb.tf"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-iam-no-policy-wildcards",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "IAM policy document uses sensitive action 'ec2:*' on wildcarded resource '*'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/iam.tf"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 46
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-iam-no-policy-wildcards",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "IAM policy document uses wildcarded action 'ec2:*'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/iam.tf"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 46
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-iam-no-policy-wildcards",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "IAM policy document uses wildcarded action 'ec2:*'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/iam.tf"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 46
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-iam-no-policy-wildcards",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "IAM policy document uses wildcarded action 'ec2:*'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/iam.tf"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 46
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-iam-no-policy-wildcards",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "IAM policy document uses wildcarded action 'ec2:*'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/iam.tf"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 46
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-iam-no-policy-wildcards",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "IAM policy document uses sensitive action 's3:*' on wildcarded resource '*'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 226
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-iam-no-policy-wildcards",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "IAM policy document uses wildcarded action 's3:*'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 226
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-iam-no-policy-wildcards",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "IAM policy document uses wildcarded action 's3:*'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 226
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-iam-no-policy-wildcards",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "IAM policy document uses wildcarded action 's3:*'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 226
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-iam-no-user-attached-policies",
          "ruleIndex": 35,
          "level": "note",
          "message": {
            "text": "One or more policies are attached directly to a user"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/iam.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-kms-auto-rotate-keys",
          "ruleIndex": 36,
          "level": "warning",
          "message": {
            "text": "Key does not have rotation enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/kms.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-lambda-enable-tracing",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Function does not have tracing enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/lambda.tf"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 59
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-neptune-enable-log-export",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "Cluster does not have audit logging enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/neptune.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 20
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-neptune-enable-storage-encryption",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "Cluster does not have storage encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/neptune.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 20
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-neptune-encryption-customer-key",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "Cluster does not encrypt data with a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/neptune.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 20
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-enable-deletion-protection",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "Instance does not have Deletion Protection enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-enable-iam-auth",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "Instance does not have IAM Authentication enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-enable-performance-insights",
          "ruleIndex": 43,
          "level": "note",
          "message": {
            "text": "Instance does not have performance insights enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-encrypt-cluster-storage-data",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Cluster does not have storage encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/rds.tf"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 111
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-encrypt-cluster-storage-data",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Cluster does not have storage encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/rds.tf"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 95
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-encrypt-cluster-storage-data",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Cluster does not have storage encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/rds.tf"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 79
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-encrypt-cluster-storage-data",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Cluster does not have storage encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/rds.tf"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-encrypt-cluster-storage-data",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Cluster does not have storage encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/rds.tf"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 47
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-encrypt-cluster-storage-data",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Cluster does not have storage encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/rds.tf"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-encrypt-cluster-storage-data",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Cluster does not have storage encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/rds.tf"
                },
                "region": {
                  "startLine": 130,
                  "endLine": 144
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-encrypt-cluster-storage-data",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Cluster does not have storage encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/rds.tf"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 128
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-encrypt-cluster-storage-data",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Cluster does not have storage encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/rds.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-encrypt-instance-storage-data",
          "ruleIndex": 45,
          "level": "error",
          "message": {
            "text": "Instance does not have storage encryption enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-no-public-db-access",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "Instance is exposed publicly."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-specify-backup-retention",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "Cluster has very low backup retention period."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/rds.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-specify-backup-retention",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "Cluster has very low backup retention period."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/rds.tf"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-rds-specify-backup-retention",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "Instance has very low backup retention period."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/db-app.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-acls",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 111
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-acls",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 87
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-acls",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-acls",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-acls",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-acls",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 288
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-policy",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public policies"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 111
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-policy",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public policies"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 87
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-policy",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public policies"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-policy",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public policies"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-policy",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public policies"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-block-public-policy",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "No public access block so not blocking public policies"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 288
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-encryption",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Bucket does not have encryption enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 111
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-encryption",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Bucket does not have encryption enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 87
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-encryption",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Bucket does not have encryption enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-encryption",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Bucket does not have encryption enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-encryption",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Bucket does not have encryption enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 288
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-logging",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Bucket does not have logging enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 87
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-logging",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Bucket does not have logging enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-logging",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Bucket does not have logging enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-bucket-logging",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Bucket does not have logging enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 288
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-versioning",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Bucket does not have versioning enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-versioning",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Bucket does not have versioning enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-enable-versioning",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Bucket does not have versioning enabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 288
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-encryption-customer-key",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Bucket does not encrypt data with a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 111
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-encryption-customer-key",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Bucket does not encrypt data with a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 87
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-encryption-customer-key",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Bucket does not encrypt data with a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-encryption-customer-key",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Bucket does not encrypt data with a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-encryption-customer-key",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Bucket does not encrypt data with a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 288
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-ignore-public-acls",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "No public access block so not ignoring public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 111
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-ignore-public-acls",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "No public access block so not ignoring public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 87
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-ignore-public-acls",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "No public access block so not ignoring public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-ignore-public-acls",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "No public access block so not ignoring public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-ignore-public-acls",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "No public access block so not ignoring public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-ignore-public-acls",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "No public access block so not ignoring public acls"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 288
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-buckets",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "No public access block so not restricting public buckets"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 111
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-buckets",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "No public access block so not restricting public buckets"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 87
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-buckets",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "No public access block so not restricting public buckets"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-buckets",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "No public access block so not restricting public buckets"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-buckets",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "No public access block so not restricting public buckets"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-no-public-buckets",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "No public access block so not restricting public buckets"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 288
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-specify-public-access-block",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Bucket does not have a corresponding public access block."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 111
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-specify-public-access-block",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Bucket does not have a corresponding public access block."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 87
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-specify-public-access-block",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Bucket does not have a corresponding public access block."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-specify-public-access-block",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Bucket does not have a corresponding public access block."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 141
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-specify-public-access-block",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Bucket does not have a corresponding public access block."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/s3.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "aws-s3-specify-public-access-block",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Bucket does not have a corresponding public access block."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/ec2.tf"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 288
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-appservice-account-identity-registered",
          "ruleIndex": 48,
          "level": "note",
          "message": {
            "text": "App service does not have an identity type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/app_service.tf"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-appservice-account-identity-registered",
          "ruleIndex": 48,
          "level": "note",
          "message": {
            "text": "App service does not have an identity type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/app_service.tf"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-appservice-authentication-enabled",
          "ruleIndex": 49,
          "level": "warning",
          "message": {
            "text": "App service does not have authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/app_service.tf"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-appservice-authentication-enabled",
          "ruleIndex": 49,
          "level": "warning",
          "message": {
            "text": "App service does not have authentication enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/app_service.tf"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-appservice-enable-http2",
          "ruleIndex": 50,
          "level": "note",
          "message": {
            "text": "App service does not have HTTP/2 enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/app_service.tf"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-appservice-enable-http2",
          "ruleIndex": 50,
          "level": "note",
          "message": {
            "text": "App service does not have HTTP/2 enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/app_service.tf"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-appservice-require-client-cert",
          "ruleIndex": 51,
          "level": "note",
          "message": {
            "text": "App service does not have client certificates enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/app_service.tf"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-appservice-require-client-cert",
          "ruleIndex": 51,
          "level": "note",
          "message": {
            "text": "App service does not have client certificates enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/app_service.tf"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-appservice-use-secure-tls-policy",
          "ruleIndex": 52,
          "level": "error",
          "message": {
            "text": "App service does not require a secure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/app_service.tf"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-compute-disable-password-authentication",
          "ruleIndex": 53,
          "level": "error",
          "message": {
            "text": "Linux virtual machine allows password authentication."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/instance.tf"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-compute-enable-disk-encryption",
          "ruleIndex": 54,
          "level": "error",
          "message": {
            "text": "Managed disk is not encrypted."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/storage.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-container-configured-network-policy",
          "ruleIndex": 55,
          "level": "error",
          "message": {
            "text": "Kubernetes cluster does not have a network policy set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/aks.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 35
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-container-limit-authorized-ips",
          "ruleIndex": 56,
          "level": "error",
          "message": {
            "text": "Cluster does not limit API access to specific IP addresses."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/aks.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 35
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-container-logging",
          "ruleIndex": 57,
          "level": "warning",
          "message": {
            "text": "Cluster does not have logging enabled via OMS Agent."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/aks.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 35
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-container-use-rbac-permissions",
          "ruleIndex": 58,
          "level": "error",
          "message": {
            "text": "Cluster has RBAC disabled"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/aks.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 35
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-all-threat-alerts-enabled",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "Server has a security alert policy which disables alerts."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-all-threat-alerts-enabled",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "Server has a security alert policy which disables alerts."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 236,
                  "endLine": 248
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-all-threat-alerts-enabled",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "Server has a security alert policy which disables alerts."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 222,
                  "endLine": 234
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-all-threat-alerts-enabled",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "Server has a security alert policy which disables alerts."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 209,
                  "endLine": 220
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-all-threat-alerts-enabled",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "Server has a security alert policy which disables alerts."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 195,
                  "endLine": 207
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-all-threat-alerts-enabled",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "Server has a security alert policy which disables alerts."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 181,
                  "endLine": 193
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-all-threat-alerts-enabled",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "Server has a security alert policy which disables alerts."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 179
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-all-threat-alerts-enabled",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "Server has a security alert policy which disables alerts."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 153,
                  "endLine": 165
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-enable-audit",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Server does not have an extended audit policy configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 29
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-enable-audit",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Server does not have an extended audit policy configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 113
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-enable-audit",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Server does not have an extended audit policy configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 94
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-enable-audit",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Server does not have an extended audit policy configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 75
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-enable-audit",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Server does not have an extended audit policy configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 56
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-enable-audit",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Server does not have an extended audit policy configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-enable-audit",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Server does not have an extended audit policy configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 151
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-enable-audit",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Server does not have an extended audit policy configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 132
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-enable-ssl-enforcement",
          "ruleIndex": 61,
          "level": "warning",
          "message": {
            "text": "Database server does not have enforce SSL."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 96
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-enable-ssl-enforcement",
          "ruleIndex": 61,
          "level": "warning",
          "message": {
            "text": "Database server does not have enforce SSL."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 44,
                  "endLine": 71
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-no-public-access",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Database server has public network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 29
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-no-public-access",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Database server has public network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 96
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-no-public-access",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Database server has public network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 44,
                  "endLine": 71
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-no-public-access",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Database server has public network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 113
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-no-public-access",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Database server has public network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 94
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-no-public-access",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Database server has public network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 75
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-no-public-access",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Database server has public network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 56
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-no-public-access",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Database server has public network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-no-public-access",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Database server has public network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 151
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-no-public-access",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Database server has public network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 132
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-postgres-configuration-connection-throttling",
          "ruleIndex": 63,
          "level": "warning",
          "message": {
            "text": "Database server is not configured to throttle connections."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 103
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-postgres-configuration-log-checkpoints",
          "ruleIndex": 64,
          "level": "warning",
          "message": {
            "text": "Database server is not configured to log checkpoints."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 105,
                  "endLine": 110
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-postgres-configuration-log-connections",
          "ruleIndex": 65,
          "level": "warning",
          "message": {
            "text": "Database server is not configured to log connections."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 96
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-secure-tls-policy",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "Database server does not require a secure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 29
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-secure-tls-policy",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "Database server does not require a secure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 96
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-secure-tls-policy",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "Database server does not require a secure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 44,
                  "endLine": 71
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-secure-tls-policy",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "Database server does not require a secure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 113
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-secure-tls-policy",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "Database server does not require a secure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 94
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-secure-tls-policy",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "Database server does not require a secure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 75
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-secure-tls-policy",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "Database server does not require a secure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 56
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-secure-tls-policy",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "Database server does not require a secure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-secure-tls-policy",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "Database server does not require a secure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 151
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-secure-tls-policy",
          "ruleIndex": 66,
          "level": "warning",
          "message": {
            "text": "Database server does not require a secure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 132
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-threat-alert-email-set",
          "ruleIndex": 67,
          "level": "warning",
          "message": {
            "text": "Security alert policy does not include any email addresses for notification."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-threat-alert-email-set",
          "ruleIndex": 67,
          "level": "warning",
          "message": {
            "text": "Security alert policy does not include any email addresses for notification."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 209,
                  "endLine": 220
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-threat-alert-email-to-owner",
          "ruleIndex": 68,
          "level": "note",
          "message": {
            "text": "Security alert policy does not alert account admins."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/sql.tf"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-threat-alert-email-to-owner",
          "ruleIndex": 68,
          "level": "note",
          "message": {
            "text": "Security alert policy does not alert account admins."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 236,
                  "endLine": 248
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-threat-alert-email-to-owner",
          "ruleIndex": 68,
          "level": "note",
          "message": {
            "text": "Security alert policy does not alert account admins."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 222,
                  "endLine": 234
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-threat-alert-email-to-owner",
          "ruleIndex": 68,
          "level": "note",
          "message": {
            "text": "Security alert policy does not alert account admins."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 209,
                  "endLine": 220
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-threat-alert-email-to-owner",
          "ruleIndex": 68,
          "level": "note",
          "message": {
            "text": "Security alert policy does not alert account admins."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 195,
                  "endLine": 207
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-threat-alert-email-to-owner",
          "ruleIndex": 68,
          "level": "note",
          "message": {
            "text": "Security alert policy does not alert account admins."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 181,
                  "endLine": 193
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-threat-alert-email-to-owner",
          "ruleIndex": 68,
          "level": "note",
          "message": {
            "text": "Security alert policy does not alert account admins."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 179
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-database-threat-alert-email-to-owner",
          "ruleIndex": 68,
          "level": "note",
          "message": {
            "text": "Security alert policy does not alert account admins."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 153,
                  "endLine": 165
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-keyvault-content-type-for-secret",
          "ruleIndex": 69,
          "level": "note",
          "message": {
            "text": "Secret does not have a content-type specified."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/key_vault.tf"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 72
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-keyvault-ensure-key-expiry",
          "ruleIndex": 70,
          "level": "warning",
          "message": {
            "text": "Key should have an expiry date specified."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/key_vault.tf"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 56
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-keyvault-ensure-secret-expiry",
          "ruleIndex": 71,
          "level": "note",
          "message": {
            "text": "Secret should have an expiry date specified."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/key_vault.tf"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 72
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-keyvault-no-purge",
          "ruleIndex": 72,
          "level": "warning",
          "message": {
            "text": "Vault does not have purge protection enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/key_vault.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-keyvault-specify-network-acl",
          "ruleIndex": 73,
          "level": "error",
          "message": {
            "text": "Vault network ACL does not block access by default."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/key_vault.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-monitor-activity-log-retention-set",
          "ruleIndex": 74,
          "level": "warning",
          "message": {
            "text": "Profile has a log retention policy of less than 1 year."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/logging.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 10
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-monitor-capture-all-activities",
          "ruleIndex": 75,
          "level": "warning",
          "message": {
            "text": "Log profile does not require the 'Write' category."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/logging.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 10
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-monitor-capture-all-activities",
          "ruleIndex": 75,
          "level": "warning",
          "message": {
            "text": "Log profile does not require the 'Delete' category."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/logging.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 10
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-monitor-capture-all-regions",
          "ruleIndex": 76,
          "level": "warning",
          "message": {
            "text": "Log profile does not log to all regions (68 regions missing)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/logging.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 10
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-network-disable-rdp-from-internet",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "Security group rule allows ingress to RDP port from multiple public internet addresses."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/networking.tf"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 107
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-network-no-public-ingress",
          "ruleIndex": 78,
          "level": "error",
          "message": {
            "text": "Security group rule allows ingress from public internet."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/networking.tf"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 107
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-network-no-public-ingress",
          "ruleIndex": 78,
          "level": "error",
          "message": {
            "text": "Security group rule allows ingress from public internet."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/networking.tf"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 107
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-network-retention-policy-set",
          "ruleIndex": 79,
          "level": "note",
          "message": {
            "text": "Flow log does not enable the log retention policy."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/networking.tf"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 145
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-network-ssh-blocked-from-internet",
          "ruleIndex": 80,
          "level": "error",
          "message": {
            "text": "Security group rule allows ingress to SSH port from multiple public internet addresses."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/networking.tf"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 107
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-security-center-alert-on-severe-notifications",
          "ruleIndex": 81,
          "level": "warning",
          "message": {
            "text": "Security contact has alert notifications disabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/security_center.tf"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-security-center-enable-standard-subscription",
          "ruleIndex": 82,
          "level": "note",
          "message": {
            "text": "Security center subscription uses the free tier."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/security_center.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-security-center-set-required-contact-details",
          "ruleIndex": 83,
          "level": "note",
          "message": {
            "text": "Security contact does not have a phone number listed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/security_center.tf"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-storage-allow-microsoft-service-bypass",
          "ruleIndex": 84,
          "level": "error",
          "message": {
            "text": "Network rules do not allow bypass for Microsoft Services."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/storage.tf"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 69
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-storage-use-secure-tls-policy",
          "ruleIndex": 85,
          "level": "error",
          "message": {
            "text": "Storage account uses an insecure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/storage.tf"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 60
                }
              }
            }
          ]
        },
        {
          "ruleId": "azure-storage-use-secure-tls-policy",
          "ruleIndex": 85,
          "level": "error",
          "message": {
            "text": "Storage account uses an insecure TLS version."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/azure/mssql.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-bigquery-no-public-access",
          "ruleIndex": 86,
          "level": "error",
          "message": {
            "text": "Dataset grants access to all authenticated GCP users."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/big_data.tf"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-compute-disk-encryption-customer-key",
          "ruleIndex": 87,
          "level": "note",
          "message": {
            "text": "Disk is not encrypted with a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/instances.tf"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-compute-enable-shielded-vm-im",
          "ruleIndex": 88,
          "level": "warning",
          "message": {
            "text": "Instance does not have shielded VM integrity monitoring enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/instances.tf"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-compute-enable-shielded-vm-vtpm",
          "ruleIndex": 89,
          "level": "warning",
          "message": {
            "text": "Instance does not have VTPM for shielded VMs enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/instances.tf"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-compute-enable-vpc-flow-logs",
          "ruleIndex": 90,
          "level": "note",
          "message": {
            "text": "Subnetwork does not have VPC flow logs enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/networks.tf"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-compute-no-ip-forwarding",
          "ruleIndex": 91,
          "level": "error",
          "message": {
            "text": "Instance has IP forwarding allowed."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/instances.tf"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-compute-no-oslogin-override",
          "ruleIndex": 92,
          "level": "warning",
          "message": {
            "text": "Instance has OS Login disabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/instances.tf"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-compute-no-project-wide-ssh-keys",
          "ruleIndex": 93,
          "level": "warning",
          "message": {
            "text": "Instance allows use of project-level SSH keys."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/instances.tf"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-compute-no-public-ingress",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "Firewall rule allows ingress traffic from multiple addresses on the public internet."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/networks.tf"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 27
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-compute-no-public-ip",
          "ruleIndex": 95,
          "level": "error",
          "message": {
            "text": "Instance has a public IP allocated."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/instances.tf"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-compute-no-serial-port",
          "ruleIndex": 96,
          "level": "warning",
          "message": {
            "text": "Instance has serial port enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/instances.tf"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-compute-vm-disk-encryption-customer-key",
          "ruleIndex": 97,
          "level": "note",
          "message": {
            "text": "Instance disk encryption does not use a customer managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/instances.tf"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-enable-auto-repair",
          "ruleIndex": 98,
          "level": "note",
          "message": {
            "text": "Node pool does not have auto-repair enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-enable-auto-upgrade",
          "ruleIndex": 99,
          "level": "note",
          "message": {
            "text": "Node pool does not have auto-upgraade enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-enable-ip-aliasing",
          "ruleIndex": 100,
          "level": "note",
          "message": {
            "text": "Cluster has IP aliasing disabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-enable-network-policy",
          "ruleIndex": 101,
          "level": "warning",
          "message": {
            "text": "Cluster does not have a network policy enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-enable-private-cluster",
          "ruleIndex": 102,
          "level": "warning",
          "message": {
            "text": "Cluster does not have private nodes."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-enable-stackdriver-logging",
          "ruleIndex": 103,
          "level": "note",
          "message": {
            "text": "Cluster does not use the logging.googleapis.com/kubernetes StackDriver logging service."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-enable-stackdriver-monitoring",
          "ruleIndex": 104,
          "level": "note",
          "message": {
            "text": "Cluster does not use the monitoring.googleapis.com/kubernetes StackDriver monitoring service."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-enforce-pod-security-policy",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "Cluster pod security policy is not enforced."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-metadata-endpoints-disabled",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "Cluster has legacy metadata endpoints enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-no-public-control-plane",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "Cluster exposes control plane to the public internet."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-node-metadata-security",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "Cluster exposes node metadata of pools by default."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-node-metadata-security",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "Node pool exposes node metadata."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-node-pool-uses-cos",
          "ruleIndex": 109,
          "level": "note",
          "message": {
            "text": "Node pool is not using the COS containerd image type."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-node-pool-uses-cos",
          "ruleIndex": 109,
          "level": "note",
          "message": {
            "text": "Cluster is not configuring node pools to use the COS containerd image type by default."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-use-cluster-labels",
          "ruleIndex": 110,
          "level": "note",
          "message": {
            "text": "Cluster does not use GCE resource labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-use-rbac-permissions",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "Cluster has legacy ABAC enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-gke-use-service-account",
          "ruleIndex": 112,
          "level": "warning",
          "message": {
            "text": "Node pool does not override the default service account."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gke.tf"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-sql-enable-backup",
          "ruleIndex": 113,
          "level": "warning",
          "message": {
            "text": "Database instance does not have backups enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/big_data.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-sql-enable-pg-temp-file-logging",
          "ruleIndex": 114,
          "level": "warning",
          "message": {
            "text": "Database instance has temporary file logging disabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/big_data.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-sql-encrypt-in-transit-data",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "Database instance does not require TLS for all connections."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/big_data.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-sql-no-public-access",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "Database instance is granted a public internet address."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/big_data.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-sql-no-public-access",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "Database instance allows access from the public internet."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/big_data.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-sql-pg-log-checkpoints",
          "ruleIndex": 117,
          "level": "warning",
          "message": {
            "text": "Database instance is not configured to log checkpoints."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/big_data.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-sql-pg-log-connections",
          "ruleIndex": 118,
          "level": "warning",
          "message": {
            "text": "Database instance is not configured to log connections."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/big_data.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-sql-pg-log-disconnections",
          "ruleIndex": 119,
          "level": "warning",
          "message": {
            "text": "Database instance is not configured to log disconnections."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/big_data.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-sql-pg-log-lock-waits",
          "ruleIndex": 120,
          "level": "warning",
          "message": {
            "text": "Database instance is not configured to log lock waits."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/big_data.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-storage-bucket-encryption-customer-key",
          "ruleIndex": 121,
          "level": "note",
          "message": {
            "text": "Storage bucket encryption does not use a customer-managed key."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gcs.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-storage-enable-ubla",
          "ruleIndex": 122,
          "level": "warning",
          "message": {
            "text": "Bucket has uniform bucket level access disabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gcs.tf"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "google-storage-no-public-access",
          "ruleIndex": 123,
          "level": "error",
          "message": {
            "text": "Bucket allows public access."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/gcp/gcs.tf"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 21
                }
              }
            }
          ]
        }
      ]
    }
  ]
}