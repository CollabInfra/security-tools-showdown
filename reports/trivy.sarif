{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0-rtm.5.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "DS002",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Image user should not be \u0026#39;root\u0026#39;"
              },
              "fullDescription": {
                "text": "Running containers with \u0026#39;root\u0026#39; user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a \u0026#39;USER\u0026#39; statement to the Dockerfile."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds002",
              "help": {
                "text": "Misconfiguration DS002\nType: Dockerfile Security Check\nSeverity: HIGH\nCheck: Image user should not be 'root'\nMessage: Specify at least 1 USER command in Dockerfile with non-root user as argument\nLink: [DS002](https://avd.aquasec.com/misconfig/ds002)\nRunning containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.",
                "markdown": "**Misconfiguration DS002**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|HIGH|Image user should not be 'root'|Specify at least 1 USER command in Dockerfile with non-root user as argument|[DS002](https://avd.aquasec.com/misconfig/ds002)|\n\nRunning containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "DS013",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "\u0026#39;RUN cd ...\u0026#39; to change directory"
              },
              "fullDescription": {
                "text": "Use WORKDIR instead of proliferating instructions like \u0026#39;RUN cd … \u0026amp;\u0026amp; do-something\u0026#39;, which are hard to read, troubleshoot, and maintain."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds013",
              "help": {
                "text": "Misconfiguration DS013\nType: Dockerfile Security Check\nSeverity: MEDIUM\nCheck: 'RUN cd ...' to change directory\nMessage: RUN should not be used to change directory: 'curl -LO ${CURL_OPTIONS}       https://sourceforge.net/projects/p7zip/files/p7zip/9.20.1/p7zip_9.20.1_src_all.tar.bz2 \u0026\u0026     bzcat p7zip_9.20.1_src_all.tar.bz2 | tar x \u0026\u0026     cd p7zip_9.20.1 \u0026\u0026     cp install.sh install.sh.orig \u0026\u0026     cat install.sh.orig | sed -e 's|DEST_HOME=/usr/local|DEST_HOME=/opt/p7zip|g' \u003e install.sh \u0026\u0026     make \u0026\u0026     ./install.sh \u0026\u0026     cd - \u0026\u0026     rm -rf p7zip_9.20.1 \u0026\u0026     rm *.tar.bz2'. Use 'WORKDIR' statement instead.\nLink: [DS013](https://avd.aquasec.com/misconfig/ds013)\nUse WORKDIR instead of proliferating instructions like 'RUN cd … \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
                "markdown": "**Misconfiguration DS013**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|MEDIUM|'RUN cd ...' to change directory|RUN should not be used to change directory: 'curl -LO ${CURL_OPTIONS}       https://sourceforge.net/projects/p7zip/files/p7zip/9.20.1/p7zip_9.20.1_src_all.tar.bz2 \u0026\u0026     bzcat p7zip_9.20.1_src_all.tar.bz2 | tar x \u0026\u0026     cd p7zip_9.20.1 \u0026\u0026     cp install.sh install.sh.orig \u0026\u0026     cat install.sh.orig | sed -e 's|DEST_HOME=/usr/local|DEST_HOME=/opt/p7zip|g' \u003e install.sh \u0026\u0026     make \u0026\u0026     ./install.sh \u0026\u0026     cd - \u0026\u0026     rm -rf p7zip_9.20.1 \u0026\u0026     rm *.tar.bz2'. Use 'WORKDIR' statement instead.|[DS013](https://avd.aquasec.com/misconfig/ds013)|\n\nUse WORKDIR instead of proliferating instructions like 'RUN cd … \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "DS015",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "\u0026#39;yum clean all\u0026#39; missing"
              },
              "fullDescription": {
                "text": "You should use \u0026#39;yum clean all\u0026#39; after using a \u0026#39;yum install\u0026#39; command to clean package cached data and reduce image size."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds015",
              "help": {
                "text": "Misconfiguration DS015\nType: Dockerfile Security Check\nSeverity: HIGH\nCheck: 'yum clean all' missing\nMessage: 'yum clean all' is missed: yum -y install deltarpm \u0026\u0026 yum -y update\nLink: [DS015](https://avd.aquasec.com/misconfig/ds015)\nYou should use 'yum clean all' after using a 'yum install' command to clean package cached data and reduce image size.",
                "markdown": "**Misconfiguration DS015**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|HIGH|'yum clean all' missing|'yum clean all' is missed: yum -y install deltarpm \u0026\u0026 yum -y update|[DS015](https://avd.aquasec.com/misconfig/ds015)|\n\nYou should use 'yum clean all' after using a 'yum install' command to clean package cached data and reduce image size."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "DS017",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "\u0026#39;RUN \u0026lt;package-manager\u0026gt; update\u0026#39; instruction alone"
              },
              "fullDescription": {
                "text": "The instruction \u0026#39;RUN \u0026lt;package-manager\u0026gt; update\u0026#39; should always be followed by \u0026#39;\u0026lt;package-manager\u0026gt; install\u0026#39; in the same RUN statement."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds017",
              "help": {
                "text": "Misconfiguration DS017\nType: Dockerfile Security Check\nSeverity: HIGH\nCheck: 'RUN \u003cpackage-manager\u003e update' instruction alone\nMessage: The instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement.\nLink: [DS017](https://avd.aquasec.com/misconfig/ds017)\nThe instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement.",
                "markdown": "**Misconfiguration DS017**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|HIGH|'RUN \u003cpackage-manager\u003e update' instruction alone|The instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement.|[DS017](https://avd.aquasec.com/misconfig/ds017)|\n\nThe instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "DS022",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Deprecated MAINTAINER used"
              },
              "fullDescription": {
                "text": "MAINTAINER has been deprecated since Docker 1.13.0."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds022",
              "help": {
                "text": "Misconfiguration DS022\nType: Dockerfile Security Check\nSeverity: HIGH\nCheck: Deprecated MAINTAINER used\nMessage: MAINTAINER should not be used: 'MAINTAINER adrianp@stindustries.net'\nLink: [DS022](https://avd.aquasec.com/misconfig/ds022)\nMAINTAINER has been deprecated since Docker 1.13.0.",
                "markdown": "**Misconfiguration DS022**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|HIGH|Deprecated MAINTAINER used|MAINTAINER should not be used: 'MAINTAINER adrianp@stindustries.net'|[DS022](https://avd.aquasec.com/misconfig/ds022)|\n\nMAINTAINER has been deprecated since Docker 1.13.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "DS026",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "No HEALTHCHECK defined"
              },
              "fullDescription": {
                "text": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ds026",
              "help": {
                "text": "Misconfiguration DS026\nType: Dockerfile Security Check\nSeverity: LOW\nCheck: No HEALTHCHECK defined\nMessage: Add HEALTHCHECK instruction in your Dockerfile\nLink: [DS026](https://avd.aquasec.com/misconfig/ds026)\nYou should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
                "markdown": "**Misconfiguration DS026**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Dockerfile Security Check|LOW|No HEALTHCHECK defined|Add HEALTHCHECK instruction in your Dockerfile|[DS026](https://avd.aquasec.com/misconfig/ds026)|\n\nYou should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "AVD-AWS-0026",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "EBS volumes must be encrypted"
              },
              "fullDescription": {
                "text": "By enabling encryption on EBS volumes you protect the volume, the disk I/O and any derived snapshots from compromise if intercepted."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0026",
              "help": {
                "text": "Misconfiguration AVD-AWS-0026\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: EBS volumes must be encrypted\nMessage: EBS volume is not encrypted.\nLink: [AVD-AWS-0026](https://avd.aquasec.com/misconfig/avd-aws-0026)\nBy enabling encryption on EBS volumes you protect the volume, the disk I/O and any derived snapshots from compromise if intercepted.",
                "markdown": "**Misconfiguration AVD-AWS-0026**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|EBS volumes must be encrypted|EBS volume is not encrypted.|[AVD-AWS-0026](https://avd.aquasec.com/misconfig/avd-aws-0026)|\n\nBy enabling encryption on EBS volumes you protect the volume, the disk I/O and any derived snapshots from compromise if intercepted."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0027",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "EBS volume encryption should use Customer Managed Keys"
              },
              "fullDescription": {
                "text": "Encryption using AWS keys provides protection for your EBS volume. To increase control of the encryption and manage factors like rotation use customer managed keys."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0027",
              "help": {
                "text": "Misconfiguration AVD-AWS-0027\nType: CloudFormation Security Check\nSeverity: LOW\nCheck: EBS volume encryption should use Customer Managed Keys\nMessage: EBS volume does not use a customer-managed KMS key.\nLink: [AVD-AWS-0027](https://avd.aquasec.com/misconfig/avd-aws-0027)\nEncryption using AWS keys provides protection for your EBS volume. To increase control of the encryption and manage factors like rotation use customer managed keys.",
                "markdown": "**Misconfiguration AVD-AWS-0027**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|LOW|EBS volume encryption should use Customer Managed Keys|EBS volume does not use a customer-managed KMS key.|[AVD-AWS-0027](https://avd.aquasec.com/misconfig/avd-aws-0027)|\n\nEncryption using AWS keys provides protection for your EBS volume. To increase control of the encryption and manage factors like rotation use customer managed keys."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "AVD-AWS-0028",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "aws_instance should activate session tokens for Instance Metadata Service."
              },
              "fullDescription": {
                "text": "\nIMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS.\nBy default \u0026lt;code\u0026gt;aws_instance\u0026lt;/code\u0026gt; resource sets IMDS session auth tokens to be optional. \nTo fully protect IMDS you need to enable session tokens by using \u0026lt;code\u0026gt;metadata_options\u0026lt;/code\u0026gt; block and its \u0026lt;code\u0026gt;http_tokens\u0026lt;/code\u0026gt; variable set to \u0026lt;code\u0026gt;required\u0026lt;/code\u0026gt;.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0028",
              "help": {
                "text": "Misconfiguration AVD-AWS-0028\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: aws_instance should activate session tokens for Instance Metadata Service.\nMessage: Instance does not require IMDS access to require a token\nLink: [AVD-AWS-0028](https://avd.aquasec.com/misconfig/avd-aws-0028)\n\nIMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS.\nBy default \u003ccode\u003eaws_instance\u003c/code\u003e resource sets IMDS session auth tokens to be optional. \nTo fully protect IMDS you need to enable session tokens by using \u003ccode\u003emetadata_options\u003c/code\u003e block and its \u003ccode\u003ehttp_tokens\u003c/code\u003e variable set to \u003ccode\u003erequired\u003c/code\u003e.\n",
                "markdown": "**Misconfiguration AVD-AWS-0028**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|aws_instance should activate session tokens for Instance Metadata Service.|Instance does not require IMDS access to require a token|[AVD-AWS-0028](https://avd.aquasec.com/misconfig/avd-aws-0028)|\n\n\nIMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS.\nBy default \u003ccode\u003eaws_instance\u003c/code\u003e resource sets IMDS session auth tokens to be optional. \nTo fully protect IMDS you need to enable session tokens by using \u003ccode\u003emetadata_options\u003c/code\u003e block and its \u003ccode\u003ehttp_tokens\u003c/code\u003e variable set to \u003ccode\u003erequired\u003c/code\u003e.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0057",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege"
              },
              "fullDescription": {
                "text": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0057",
              "help": {
                "text": "Misconfiguration AVD-AWS-0057\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: IAM policy should avoid use of wildcards and instead apply the principle of least privilege\nMessage: IAM policy document uses wildcarded action 's3:*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)\nYou should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
                "markdown": "**Misconfiguration AVD-AWS-0057**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|IAM policy should avoid use of wildcards and instead apply the principle of least privilege|IAM policy document uses wildcarded action 's3:*'|[AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)|\n\nYou should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0066",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Lambda functions should have X-Ray tracing enabled"
              },
              "fullDescription": {
                "text": "X-Ray tracing enables end-to-end debugging and analysis of all function activity. This will allow for identifying bottlenecks, slow downs and timeouts."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0066",
              "help": {
                "text": "Misconfiguration AVD-AWS-0066\nType: CloudFormation Security Check\nSeverity: LOW\nCheck: Lambda functions should have X-Ray tracing enabled\nMessage: Function does not have tracing enabled.\nLink: [AVD-AWS-0066](https://avd.aquasec.com/misconfig/avd-aws-0066)\nX-Ray tracing enables end-to-end debugging and analysis of all function activity. This will allow for identifying bottlenecks, slow downs and timeouts.",
                "markdown": "**Misconfiguration AVD-AWS-0066**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|LOW|Lambda functions should have X-Ray tracing enabled|Function does not have tracing enabled.|[AVD-AWS-0066](https://avd.aquasec.com/misconfig/avd-aws-0066)|\n\nX-Ray tracing enables end-to-end debugging and analysis of all function activity. This will allow for identifying bottlenecks, slow downs and timeouts."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "AVD-AWS-0077",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "RDS Cluster and RDS instance should have backup retention longer than default 1 day"
              },
              "fullDescription": {
                "text": "RDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0077",
              "help": {
                "text": "Misconfiguration AVD-AWS-0077\nType: CloudFormation Security Check\nSeverity: MEDIUM\nCheck: RDS Cluster and RDS instance should have backup retention longer than default 1 day\nMessage: Instance has very low backup retention period.\nLink: [AVD-AWS-0077](https://avd.aquasec.com/misconfig/avd-aws-0077)\nRDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.",
                "markdown": "**Misconfiguration AVD-AWS-0077**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|MEDIUM|RDS Cluster and RDS instance should have backup retention longer than default 1 day|Instance has very low backup retention period.|[AVD-AWS-0077](https://avd.aquasec.com/misconfig/avd-aws-0077)|\n\nRDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "AVD-AWS-0080",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "RDS encryption has not been enabled at a DB Instance level."
              },
              "fullDescription": {
                "text": "Encryption should be enabled for an RDS Database instances. \n\nWhen enabling encryption by setting the kms_key_id."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0080",
              "help": {
                "text": "Misconfiguration AVD-AWS-0080\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: RDS encryption has not been enabled at a DB Instance level.\nMessage: Instance does not have storage encryption enabled.\nLink: [AVD-AWS-0080](https://avd.aquasec.com/misconfig/avd-aws-0080)\nEncryption should be enabled for an RDS Database instances. \n\nWhen enabling encryption by setting the kms_key_id.",
                "markdown": "**Misconfiguration AVD-AWS-0080**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|RDS encryption has not been enabled at a DB Instance level.|Instance does not have storage encryption enabled.|[AVD-AWS-0080](https://avd.aquasec.com/misconfig/avd-aws-0080)|\n\nEncryption should be enabled for an RDS Database instances. \n\nWhen enabling encryption by setting the kms_key_id."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0082",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "A database resource is marked as publicly accessible."
              },
              "fullDescription": {
                "text": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0082",
              "help": {
                "text": "Misconfiguration AVD-AWS-0082\nType: CloudFormation Security Check\nSeverity: CRITICAL\nCheck: A database resource is marked as publicly accessible.\nMessage: Instance is exposed publicly.\nLink: [AVD-AWS-0082](https://avd.aquasec.com/misconfig/avd-aws-0082)\nDatabase resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
                "markdown": "**Misconfiguration AVD-AWS-0082**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|CRITICAL|A database resource is marked as publicly accessible.|Instance is exposed publicly.|[AVD-AWS-0082](https://avd.aquasec.com/misconfig/avd-aws-0082)|\n\nDatabase resources should not publicly available. You should limit all access to the minimum that is required for your application to function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "AVD-AWS-0086",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "S3 Access block should block public ACL"
              },
              "fullDescription": {
                "text": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0086",
              "help": {
                "text": "Misconfiguration AVD-AWS-0086\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: S3 Access block should block public ACL\nMessage: No public access block so not blocking public acls\nLink: [AVD-AWS-0086](https://avd.aquasec.com/misconfig/avd-aws-0086)\n\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
                "markdown": "**Misconfiguration AVD-AWS-0086**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|S3 Access block should block public ACL|No public access block so not blocking public acls|[AVD-AWS-0086](https://avd.aquasec.com/misconfig/avd-aws-0086)|\n\n\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0087",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "S3 Access block should block public policy"
              },
              "fullDescription": {
                "text": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0087",
              "help": {
                "text": "Misconfiguration AVD-AWS-0087\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: S3 Access block should block public policy\nMessage: No public access block so not blocking public policies\nLink: [AVD-AWS-0087](https://avd.aquasec.com/misconfig/avd-aws-0087)\n\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
                "markdown": "**Misconfiguration AVD-AWS-0087**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|S3 Access block should block public policy|No public access block so not blocking public policies|[AVD-AWS-0087](https://avd.aquasec.com/misconfig/avd-aws-0087)|\n\n\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0088",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Unencrypted S3 bucket."
              },
              "fullDescription": {
                "text": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0088",
              "help": {
                "text": "Misconfiguration AVD-AWS-0088\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: Unencrypted S3 bucket.\nMessage: Bucket does not have encryption enabled\nLink: [AVD-AWS-0088](https://avd.aquasec.com/misconfig/avd-aws-0088)\nS3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
                "markdown": "**Misconfiguration AVD-AWS-0088**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|Unencrypted S3 bucket.|Bucket does not have encryption enabled|[AVD-AWS-0088](https://avd.aquasec.com/misconfig/avd-aws-0088)|\n\nS3 Buckets should be encrypted to protect the data that is stored within them if access is compromised."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0089",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "S3 Bucket does not have logging enabled."
              },
              "fullDescription": {
                "text": "Buckets should have logging enabled so that access can be audited."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0089",
              "help": {
                "text": "Misconfiguration AVD-AWS-0089\nType: CloudFormation Security Check\nSeverity: MEDIUM\nCheck: S3 Bucket does not have logging enabled.\nMessage: Bucket does not have logging enabled\nLink: [AVD-AWS-0089](https://avd.aquasec.com/misconfig/avd-aws-0089)\nBuckets should have logging enabled so that access can be audited.",
                "markdown": "**Misconfiguration AVD-AWS-0089**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|MEDIUM|S3 Bucket does not have logging enabled.|Bucket does not have logging enabled|[AVD-AWS-0089](https://avd.aquasec.com/misconfig/avd-aws-0089)|\n\nBuckets should have logging enabled so that access can be audited."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "AVD-AWS-0090",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "S3 Data should be versioned"
              },
              "fullDescription": {
                "text": "\nVersioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. \nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. \nWith versioning you can recover more easily from both unintended user actions and application failures.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0090",
              "help": {
                "text": "Misconfiguration AVD-AWS-0090\nType: CloudFormation Security Check\nSeverity: MEDIUM\nCheck: S3 Data should be versioned\nMessage: Bucket does not have versioning enabled\nLink: [AVD-AWS-0090](https://avd.aquasec.com/misconfig/avd-aws-0090)\n\nVersioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. \nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. \nWith versioning you can recover more easily from both unintended user actions and application failures.\n",
                "markdown": "**Misconfiguration AVD-AWS-0090**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|MEDIUM|S3 Data should be versioned|Bucket does not have versioning enabled|[AVD-AWS-0090](https://avd.aquasec.com/misconfig/avd-aws-0090)|\n\n\nVersioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. \nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. \nWith versioning you can recover more easily from both unintended user actions and application failures.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "AVD-AWS-0091",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "S3 Access Block should Ignore Public Acl"
              },
              "fullDescription": {
                "text": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0091",
              "help": {
                "text": "Misconfiguration AVD-AWS-0091\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: S3 Access Block should Ignore Public Acl\nMessage: No public access block so not ignoring public acls\nLink: [AVD-AWS-0091](https://avd.aquasec.com/misconfig/avd-aws-0091)\n\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
                "markdown": "**Misconfiguration AVD-AWS-0091**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|S3 Access Block should Ignore Public Acl|No public access block so not ignoring public acls|[AVD-AWS-0091](https://avd.aquasec.com/misconfig/avd-aws-0091)|\n\n\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0092",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "S3 Buckets not publicly accessible through ACL."
              },
              "fullDescription": {
                "text": "\nBuckets should not have ACLs that allow public access\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0092",
              "help": {
                "text": "Misconfiguration AVD-AWS-0092\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: S3 Buckets not publicly accessible through ACL.\nMessage: Bucket has a public ACL: 'public-read'.\nLink: [AVD-AWS-0092](https://avd.aquasec.com/misconfig/avd-aws-0092)\n\nBuckets should not have ACLs that allow public access\n",
                "markdown": "**Misconfiguration AVD-AWS-0092**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|S3 Buckets not publicly accessible through ACL.|Bucket has a public ACL: 'public-read'.|[AVD-AWS-0092](https://avd.aquasec.com/misconfig/avd-aws-0092)|\n\n\nBuckets should not have ACLs that allow public access\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0093",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "S3 Access block should restrict public bucket to limit access"
              },
              "fullDescription": {
                "text": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0093",
              "help": {
                "text": "Misconfiguration AVD-AWS-0093\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: S3 Access block should restrict public bucket to limit access\nMessage: No public access block so not restricting public buckets\nLink: [AVD-AWS-0093](https://avd.aquasec.com/misconfig/avd-aws-0093)\nS3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
                "markdown": "**Misconfiguration AVD-AWS-0093**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|S3 Access block should restrict public bucket to limit access|No public access block so not restricting public buckets|[AVD-AWS-0093](https://avd.aquasec.com/misconfig/avd-aws-0093)|\n\nS3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0094",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "S3 buckets should each define an aws_s3_bucket_public_access_block"
              },
              "fullDescription": {
                "text": "The \u0026#34;block public access\u0026#34; settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0094",
              "help": {
                "text": "Misconfiguration AVD-AWS-0094\nType: CloudFormation Security Check\nSeverity: LOW\nCheck: S3 buckets should each define an aws_s3_bucket_public_access_block\nMessage: Bucket does not have a corresponding public access block.\nLink: [AVD-AWS-0094](https://avd.aquasec.com/misconfig/avd-aws-0094)\nThe \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
                "markdown": "**Misconfiguration AVD-AWS-0094**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|LOW|S3 buckets should each define an aws_s3_bucket_public_access_block|Bucket does not have a corresponding public access block.|[AVD-AWS-0094](https://avd.aquasec.com/misconfig/avd-aws-0094)|\n\nThe \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "AVD-AWS-0107",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "An ingress security group rule allows traffic from /0."
              },
              "fullDescription": {
                "text": "Opening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0107",
              "help": {
                "text": "Misconfiguration AVD-AWS-0107\nType: CloudFormation Security Check\nSeverity: CRITICAL\nCheck: An ingress security group rule allows traffic from /0.\nMessage: Security group rule allows ingress from public internet.\nLink: [AVD-AWS-0107](https://avd.aquasec.com/misconfig/avd-aws-0107)\nOpening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.",
                "markdown": "**Misconfiguration AVD-AWS-0107**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|CRITICAL|An ingress security group rule allows traffic from /0.|Security group rule allows ingress from public internet.|[AVD-AWS-0107](https://avd.aquasec.com/misconfig/avd-aws-0107)|\n\nOpening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "AVD-AWS-0124",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Missing description for security group rule."
              },
              "fullDescription": {
                "text": "Security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0124",
              "help": {
                "text": "Misconfiguration AVD-AWS-0124\nType: CloudFormation Security Check\nSeverity: LOW\nCheck: Missing description for security group rule.\nMessage: Security group rule does not have a description.\nLink: [AVD-AWS-0124](https://avd.aquasec.com/misconfig/avd-aws-0124)\nSecurity group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
                "markdown": "**Misconfiguration AVD-AWS-0124**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|LOW|Missing description for security group rule.|Security group rule does not have a description.|[AVD-AWS-0124](https://avd.aquasec.com/misconfig/avd-aws-0124)|\n\nSecurity group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "AVD-AWS-0132",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "S3 encryption should use Customer Managed Keys"
              },
              "fullDescription": {
                "text": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0132",
              "help": {
                "text": "Misconfiguration AVD-AWS-0132\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: S3 encryption should use Customer Managed Keys\nMessage: Bucket does not encrypt data with a customer managed key.\nLink: [AVD-AWS-0132](https://avd.aquasec.com/misconfig/avd-aws-0132)\nEncryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.",
                "markdown": "**Misconfiguration AVD-AWS-0132**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|S3 encryption should use Customer Managed Keys|Bucket does not encrypt data with a customer managed key.|[AVD-AWS-0132](https://avd.aquasec.com/misconfig/avd-aws-0132)|\n\nEncryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0133",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Enable Performance Insights to detect potential problems"
              },
              "fullDescription": {
                "text": "Enabling Performance insights allows for greater depth in monitoring data.\n\t\t\nFor example, information about active sessions could help diagose a compromise or assist in the investigation"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0133",
              "help": {
                "text": "Misconfiguration AVD-AWS-0133\nType: CloudFormation Security Check\nSeverity: LOW\nCheck: Enable Performance Insights to detect potential problems\nMessage: Instance does not have performance insights enabled.\nLink: [AVD-AWS-0133](https://avd.aquasec.com/misconfig/avd-aws-0133)\nEnabling Performance insights allows for greater depth in monitoring data.\n\t\t\nFor example, information about active sessions could help diagose a compromise or assist in the investigation",
                "markdown": "**Misconfiguration AVD-AWS-0133**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|LOW|Enable Performance Insights to detect potential problems|Instance does not have performance insights enabled.|[AVD-AWS-0133](https://avd.aquasec.com/misconfig/avd-aws-0133)|\n\nEnabling Performance insights allows for greater depth in monitoring data.\n\t\t\nFor example, information about active sessions could help diagose a compromise or assist in the investigation"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "AVD-AWS-0164",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Instances in a subnet should not receive a public IP address by default."
              },
              "fullDescription": {
                "text": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0164",
              "help": {
                "text": "Misconfiguration AVD-AWS-0164\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: Instances in a subnet should not receive a public IP address by default.\nMessage: Subnet associates public IP address.\nLink: [AVD-AWS-0164](https://avd.aquasec.com/misconfig/avd-aws-0164)\nYou should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.",
                "markdown": "**Misconfiguration AVD-AWS-0164**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|Instances in a subnet should not receive a public IP address by default.|Subnet associates public IP address.|[AVD-AWS-0164](https://avd.aquasec.com/misconfig/avd-aws-0164)|\n\nYou should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "N/A",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "RDS Publicly Accessible"
              },
              "fullDescription": {
                "text": "Ensures RDS instances are not launched into the public cloud."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/n/a",
              "help": {
                "text": "Misconfiguration N/A\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: RDS Publicly Accessible\nMessage: Instance has Public Access enabled\nLink: [N/A](https://avd.aquasec.com/misconfig/n/a)\nEnsures RDS instances are not launched into the public cloud.",
                "markdown": "**Misconfiguration N/A**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|RDS Publicly Accessible|Instance has Public Access enabled|[N/A](https://avd.aquasec.com/misconfig/n/a)|\n\nEnsures RDS instances are not launched into the public cloud."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "AVD-AWS-0039",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "EKS should have the encryption of secrets enabled"
              },
              "fullDescription": {
                "text": "EKS cluster resources should have the encryption_config block set with protection of the secrets resource."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/avd-aws-0039",
              "help": {
                "text": "Misconfiguration AVD-AWS-0039\nType: CloudFormation Security Check\nSeverity: HIGH\nCheck: EKS should have the encryption of secrets enabled\nMessage: Cluster does not have secret encryption enabled.\nLink: [AVD-AWS-0039](https://avd.aquasec.com/misconfig/avd-aws-0039)\nEKS cluster resources should have the encryption_config block set with protection of the secrets resource.",
                "markdown": "**Misconfiguration AVD-AWS-0039**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|CloudFormation Security Check|HIGH|EKS should have the encryption of secrets enabled|Cluster does not have secret encryption enabled.|[AVD-AWS-0039](https://avd.aquasec.com/misconfig/avd-aws-0039)|\n\nEKS cluster resources should have the encryption_config block set with protection of the secrets resource."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "KSV001",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Process can elevate its own privileges"
              },
              "fullDescription": {
                "text": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv001",
              "help": {
                "text": "Misconfiguration KSV001\nType: Kubernetes Security Check\nSeverity: MEDIUM\nCheck: Process can elevate its own privileges\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.allowPrivilegeEscalation' to false\nLink: [KSV001](https://avd.aquasec.com/misconfig/ksv001)\nA program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
                "markdown": "**Misconfiguration KSV001**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|MEDIUM|Process can elevate its own privileges|Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.allowPrivilegeEscalation' to false|[KSV001](https://avd.aquasec.com/misconfig/ksv001)|\n\nA program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "KSV003",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Default capabilities not dropped"
              },
              "fullDescription": {
                "text": "The container should drop all default capabilities and add only those that are needed for its execution."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv003",
              "help": {
                "text": "Misconfiguration KSV003\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: Default capabilities not dropped\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should add 'ALL' to 'securityContext.capabilities.drop'\nLink: [KSV003](https://avd.aquasec.com/misconfig/ksv003)\nThe container should drop all default capabilities and add only those that are needed for its execution.",
                "markdown": "**Misconfiguration KSV003**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|Default capabilities not dropped|Container 'health-check' of Deployment 'health-check-deployment' should add 'ALL' to 'securityContext.capabilities.drop'|[KSV003](https://avd.aquasec.com/misconfig/ksv003)|\n\nThe container should drop all default capabilities and add only those that are needed for its execution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV011",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "CPU not limited"
              },
              "fullDescription": {
                "text": "Enforcing CPU limits prevents DoS via resource exhaustion."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv011",
              "help": {
                "text": "Misconfiguration KSV011\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: CPU not limited\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'resources.limits.cpu'\nLink: [KSV011](https://avd.aquasec.com/misconfig/ksv011)\nEnforcing CPU limits prevents DoS via resource exhaustion.",
                "markdown": "**Misconfiguration KSV011**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|CPU not limited|Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'resources.limits.cpu'|[KSV011](https://avd.aquasec.com/misconfig/ksv011)|\n\nEnforcing CPU limits prevents DoS via resource exhaustion."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV012",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Runs as root user"
              },
              "fullDescription": {
                "text": "\u0026#39;runAsNonRoot\u0026#39; forces the running image to run as a non-root user to ensure least privileges."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv012",
              "help": {
                "text": "Misconfiguration KSV012\nType: Kubernetes Security Check\nSeverity: MEDIUM\nCheck: Runs as root user\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.runAsNonRoot' to true\nLink: [KSV012](https://avd.aquasec.com/misconfig/ksv012)\n'runAsNonRoot' forces the running image to run as a non-root user to ensure least privileges.",
                "markdown": "**Misconfiguration KSV012**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|MEDIUM|Runs as root user|Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.runAsNonRoot' to true|[KSV012](https://avd.aquasec.com/misconfig/ksv012)|\n\n'runAsNonRoot' forces the running image to run as a non-root user to ensure least privileges."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "KSV014",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Root file system is not read-only"
              },
              "fullDescription": {
                "text": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv014",
              "help": {
                "text": "Misconfiguration KSV014\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: Root file system is not read-only\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.readOnlyRootFilesystem' to true\nLink: [KSV014](https://avd.aquasec.com/misconfig/ksv014)\nAn immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
                "markdown": "**Misconfiguration KSV014**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|Root file system is not read-only|Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.readOnlyRootFilesystem' to true|[KSV014](https://avd.aquasec.com/misconfig/ksv014)|\n\nAn immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV015",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "CPU requests not specified"
              },
              "fullDescription": {
                "text": "When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv015",
              "help": {
                "text": "Misconfiguration KSV015\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: CPU requests not specified\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'resources.requests.cpu'\nLink: [KSV015](https://avd.aquasec.com/misconfig/ksv015)\nWhen containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
                "markdown": "**Misconfiguration KSV015**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|CPU requests not specified|Container 'health-check' of Deployment 'health-check-deployment' should set 'resources.requests.cpu'|[KSV015](https://avd.aquasec.com/misconfig/ksv015)|\n\nWhen containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV016",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Memory requests not specified"
              },
              "fullDescription": {
                "text": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv016",
              "help": {
                "text": "Misconfiguration KSV016\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: Memory requests not specified\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'resources.requests.memory'\nLink: [KSV016](https://avd.aquasec.com/misconfig/ksv016)\nWhen containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
                "markdown": "**Misconfiguration KSV016**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|Memory requests not specified|Container 'health-check' of Deployment 'health-check-deployment' should set 'resources.requests.memory'|[KSV016](https://avd.aquasec.com/misconfig/ksv016)|\n\nWhen containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV018",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Memory not limited"
              },
              "fullDescription": {
                "text": "Enforcing memory limits prevents DoS via resource exhaustion."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv018",
              "help": {
                "text": "Misconfiguration KSV018\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: Memory not limited\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'resources.limits.memory'\nLink: [KSV018](https://avd.aquasec.com/misconfig/ksv018)\nEnforcing memory limits prevents DoS via resource exhaustion.",
                "markdown": "**Misconfiguration KSV018**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|Memory not limited|Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'resources.limits.memory'|[KSV018](https://avd.aquasec.com/misconfig/ksv018)|\n\nEnforcing memory limits prevents DoS via resource exhaustion."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV020",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Runs with low user ID"
              },
              "fullDescription": {
                "text": "Force the container to run with user ID \u0026gt; 10000 to avoid conflicts with the host’s user table."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv020",
              "help": {
                "text": "Misconfiguration KSV020\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: Runs with low user ID\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.runAsUser' \u003e 10000\nLink: [KSV020](https://avd.aquasec.com/misconfig/ksv020)\nForce the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
                "markdown": "**Misconfiguration KSV020**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|Runs with low user ID|Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.runAsUser' \u003e 10000|[KSV020](https://avd.aquasec.com/misconfig/ksv020)|\n\nForce the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV021",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Runs with low group ID"
              },
              "fullDescription": {
                "text": "Force the container to run with group ID \u0026gt; 10000 to avoid conflicts with the host’s user table."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv021",
              "help": {
                "text": "Misconfiguration KSV021\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: Runs with low group ID\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.runAsGroup' \u003e 10000\nLink: [KSV021](https://avd.aquasec.com/misconfig/ksv021)\nForce the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
                "markdown": "**Misconfiguration KSV021**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|Runs with low group ID|Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.runAsGroup' \u003e 10000|[KSV021](https://avd.aquasec.com/misconfig/ksv021)|\n\nForce the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV030",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Default Seccomp profile not set"
              },
              "fullDescription": {
                "text": "The RuntimeDefault/Localhost seccomp profile must be required, or allow specific additional profiles."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv030",
              "help": {
                "text": "Misconfiguration KSV030\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: Default Seccomp profile not set\nMessage: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'\nLink: [KSV030](https://avd.aquasec.com/misconfig/ksv030)\nThe RuntimeDefault/Localhost seccomp profile must be required, or allow specific additional profiles.",
                "markdown": "**Misconfiguration KSV030**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|Default Seccomp profile not set|Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'|[KSV030](https://avd.aquasec.com/misconfig/ksv030)|\n\nThe RuntimeDefault/Localhost seccomp profile must be required, or allow specific additional profiles."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV106",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Container capabilities must only include NET_BIND_SERVICE"
              },
              "fullDescription": {
                "text": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv106",
              "help": {
                "text": "Misconfiguration KSV106\nType: Kubernetes Security Check\nSeverity: LOW\nCheck: Container capabilities must only include NET_BIND_SERVICE\nMessage: container should drop all\nLink: [KSV106](https://avd.aquasec.com/misconfig/ksv106)\nContainers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
                "markdown": "**Misconfiguration KSV106**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|LOW|Container capabilities must only include NET_BIND_SERVICE|container should drop all|[KSV106](https://avd.aquasec.com/misconfig/ksv106)|\n\nContainers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "KSV006",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "hostPath volume mounted with docker.sock"
              },
              "fullDescription": {
                "text": "Mounting docker.sock from the host can give the container full root access to the host."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv006",
              "help": {
                "text": "Misconfiguration KSV006\nType: Kubernetes Security Check\nSeverity: HIGH\nCheck: hostPath volume mounted with docker.sock\nMessage: Deployment 'health-check-deployment' should not specify '/var/run/docker.socker' in 'spec.template.volumes.hostPath.path'\nLink: [KSV006](https://avd.aquasec.com/misconfig/ksv006)\nMounting docker.sock from the host can give the container full root access to the host.",
                "markdown": "**Misconfiguration KSV006**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|HIGH|hostPath volume mounted with docker.sock|Deployment 'health-check-deployment' should not specify '/var/run/docker.socker' in 'spec.template.volumes.hostPath.path'|[KSV006](https://avd.aquasec.com/misconfig/ksv006)|\n\nMounting docker.sock from the host can give the container full root access to the host."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "KSV013",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Image tag \u0026#39;:latest\u0026#39; used"
              },
              "fullDescription": {
                "text": "It is best to avoid using the \u0026#39;:latest\u0026#39; image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv013",
              "help": {
                "text": "Misconfiguration KSV013\nType: Kubernetes Security Check\nSeverity: MEDIUM\nCheck: Image tag ':latest' used\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should specify an image tag\nLink: [KSV013](https://avd.aquasec.com/misconfig/ksv013)\nIt is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.",
                "markdown": "**Misconfiguration KSV013**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|MEDIUM|Image tag ':latest' used|Container 'health-check' of Deployment 'health-check-deployment' should specify an image tag|[KSV013](https://avd.aquasec.com/misconfig/ksv013)|\n\nIt is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "KSV017",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "Privileged container"
              },
              "fullDescription": {
                "text": "Privileged containers share namespaces with the host system and do not offer any security. They should be used exclusively for system containers that require high privileges."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv017",
              "help": {
                "text": "Misconfiguration KSV017\nType: Kubernetes Security Check\nSeverity: HIGH\nCheck: Privileged container\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.privileged' to false\nLink: [KSV017](https://avd.aquasec.com/misconfig/ksv017)\nPrivileged containers share namespaces with the host system and do not offer any security. They should be used exclusively for system containers that require high privileges.",
                "markdown": "**Misconfiguration KSV017**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|HIGH|Privileged container|Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.privileged' to false|[KSV017](https://avd.aquasec.com/misconfig/ksv017)|\n\nPrivileged containers share namespaces with the host system and do not offer any security. They should be used exclusively for system containers that require high privileges."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "misconfiguration",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "KSV023",
              "name": "Misconfiguration",
              "shortDescription": {
                "text": "hostPath volumes mounted"
              },
              "fullDescription": {
                "text": "HostPath volumes must be forbidden."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/misconfig/ksv023",
              "help": {
                "text": "Misconfiguration KSV023\nType: Kubernetes Security Check\nSeverity: MEDIUM\nCheck: hostPath volumes mounted\nMessage: Deployment 'health-check-deployment' should not set 'spec.template.volumes.hostPath'\nLink: [KSV023](https://avd.aquasec.com/misconfig/ksv023)\nHostPath volumes must be forbidden.",
                "markdown": "**Misconfiguration KSV023**\n| Type | Severity | Check | Message | Link |\n| --- | --- | --- | --- | --- |\n|Kubernetes Security Check|MEDIUM|hostPath volumes mounted|Deployment 'health-check-deployment' should not set 'spec.template.volumes.hostPath'|[KSV023](https://avd.aquasec.com/misconfig/ksv023)|\n\nHostPath volumes must be forbidden."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "misconfiguration",
                  "security",
                  "MEDIUM"
                ]
              }
            }
          ],
          "version": "0.41.0"
        }
      },
      "results": [
        {
          "ruleId": "DS002",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS002\nSeverity: HIGH\nMessage: Specify at least 1 USER command in Dockerfile with non-root user as argument\nLink: [DS002](https://avd.aquasec.com/misconfig/ds002)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS013",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS013\nSeverity: MEDIUM\nMessage: RUN should not be used to change directory: 'curl -LO ${CURL_OPTIONS}           https://pypi.python.org/packages/8c/2b/e6e2f554368785c7eb68d618fd6457625be1535e807f6abf11c7db710f34/hpack-2.1.1.tar.gz \u0026\u0026         tar xvf hpack-2.1.1.tar.gz \u0026\u0026         mkdir /opt/hpack \u0026\u0026         cd hpack-2.1.1 \u0026\u0026         cp -R . /opt/hpack \u0026\u0026         cd - \u0026\u0026         rm -rf hpack-2.1.1 \u0026\u0026         rm -f *.tar.gz'. Use 'WORKDIR' statement instead.\nLink: [DS013](https://avd.aquasec.com/misconfig/ds013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 1,
                  "endLine": 131,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS013",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS013\nSeverity: MEDIUM\nMessage: RUN should not be used to change directory: 'curl -LO ${CURL_OPTIONS}       http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.69/bin/apache-tomcat-7.0.69.tar.gz \u0026\u0026     tar zxf apache-tomcat-7.0.69.tar.gz \u0026\u0026     mkdir /opt/tomcat \u0026\u0026     cd apache-tomcat-7.0.69 \u0026\u0026     cp -R . /opt/tomcat \u0026\u0026     cd - \u0026\u0026     rm -rf apache-tomcat-7.0.69 \u0026\u0026     rm -f *.tar.gz'. Use 'WORKDIR' statement instead.\nLink: [DS013](https://avd.aquasec.com/misconfig/ds013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 1,
                  "endLine": 87,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS013",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS013\nSeverity: MEDIUM\nMessage: RUN should not be used to change directory: 'curl -LO ${CURL_OPTIONS}       http://www.mirrorservice.org/sites/ftp.gnu.org/gnu/wget/wget-1.15.tar.gz \u0026\u0026     tar zxf wget-1.15.tar.gz \u0026\u0026     cd wget-1.15 \u0026\u0026     ./configure --prefix=/opt/wget \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     rm -rf wget-1.15 \u0026\u0026     rm *.tar.gz'. Use 'WORKDIR' statement instead.\nLink: [DS013](https://avd.aquasec.com/misconfig/ds013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS013",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS013\nSeverity: MEDIUM\nMessage: RUN should not be used to change directory: 'curl -LO ${CURL_OPTIONS}       https://ftp.drupal.org/files/projects/drupal-7.42.tar.gz \u0026\u0026     tar zxf drupal-7.42.tar.gz \u0026\u0026     mkdir /opt/drupal \u0026\u0026     cd drupal-7.42 \u0026\u0026     cp -R . /opt/drupal \u0026\u0026     cd - \u0026\u0026     rm -rf drupal-7.42 \u0026\u0026     rm -f *.tar.gz'. Use 'WORKDIR' statement instead.\nLink: [DS013](https://avd.aquasec.com/misconfig/ds013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 1,
                  "endLine": 73,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS013",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS013\nSeverity: MEDIUM\nMessage: RUN should not be used to change directory: 'curl -LO ${CURL_OPTIONS}       https://ftp.heanet.ie/mirrors/ftp.gnu.org/gnu/bash/bash-4.3.tar.gz \u0026\u0026     tar zxf bash-4.3.tar.gz \u0026\u0026     mkdir /opt/bash \u0026\u0026 cd bash-4.3 \u0026\u0026     ./configure --prefix=/opt/bash \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     rm -rf bash-4.3 \u0026\u0026     rm -rf *.tar.gz'. Use 'WORKDIR' statement instead.\nLink: [DS013](https://avd.aquasec.com/misconfig/ds013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 1,
                  "endLine": 179,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS013",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS013\nSeverity: MEDIUM\nMessage: RUN should not be used to change directory: 'curl -LO ${CURL_OPTIONS}       https://nodejs.org/dist/v0.10.41/node-v0.10.41-linux-x64.tar.gz \u0026\u0026     tar zxf node-v0.10.41-linux-x64.tar.gz \u0026\u0026     mkdir /opt/nodejs \u0026\u0026     cd node-v0.10.41-linux-x64 \u0026\u0026     cp -R . /opt/nodejs \u0026\u0026     cd - \u0026\u0026     rm -rf node-v0.10.41-linux-x64 \u0026\u0026     rm -rf *.tar.gz'. Use 'WORKDIR' statement instead.\nLink: [DS013](https://avd.aquasec.com/misconfig/ds013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 1,
                  "endLine": 164,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS013",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS013\nSeverity: MEDIUM\nMessage: RUN should not be used to change directory: 'curl -LO ${CURL_OPTIONS}       https://sourceforge.net/projects/p7zip/files/p7zip/9.20.1/p7zip_9.20.1_src_all.tar.bz2 \u0026\u0026     bzcat p7zip_9.20.1_src_all.tar.bz2 | tar x \u0026\u0026     cd p7zip_9.20.1 \u0026\u0026     cp install.sh install.sh.orig \u0026\u0026     cat install.sh.orig | sed -e 's|DEST_HOME=/usr/local|DEST_HOME=/opt/p7zip|g' \u003e install.sh \u0026\u0026     make \u0026\u0026     ./install.sh \u0026\u0026     cd - \u0026\u0026     rm -rf p7zip_9.20.1 \u0026\u0026     rm *.tar.bz2'. Use 'WORKDIR' statement instead.\nLink: [DS013](https://avd.aquasec.com/misconfig/ds013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 1,
                  "endLine": 59,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS015",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS015\nSeverity: HIGH\nMessage: 'yum clean all' is missed: curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/tomcat-7.0.42-4.el7.noarch.rpm \u0026\u0026     curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/tomcat-el-2.2-api-7.0.42-4.el7.noarch.rpm \u0026\u0026     curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/tomcat-jsp-2.2-api-7.0.42-4.el7.noarch.rpm \u0026\u0026     curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/tomcat-lib-7.0.42-4.el7.noarch.rpm \u0026\u0026     curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/tomcat-servlet-3.0-api-7.0.42-4.el7.noarch.rpm \u0026\u0026     touch /var/lib/rpm/* \u0026\u0026     yum -y install yum install tomcat-7.0.42-4.el7.noarch.rpm tomcat-lib-7.0.42-4.el7.noarch.rpm tomcat-servlet-3.0-api-7.0.42-4.el7.noarch.rpm tomcat-el-2.2-api-7.0.42-4.el7.noarch.rpm tomcat-jsp-2.2-api-7.0.42-4.el7.noarch.rpm \u0026\u0026     rm -f *.rpm\nLink: [DS015](https://avd.aquasec.com/misconfig/ds015)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 1,
                  "endLine": 117,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS015",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS015\nSeverity: HIGH\nMessage: 'yum clean all' is missed: curl -LO ${CURL_OPTIONS}       http://vault.centos.org/7.0.1406/os/x86_64/Packages/wget-1.14-10.el7.x86_64.rpm \u0026\u0026     yum -y install wget-1.14-10.el7.x86_64.rpm \u0026\u0026     rm *.rpm\nLink: [DS015](https://avd.aquasec.com/misconfig/ds015)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS015",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS015\nSeverity: HIGH\nMessage: 'yum clean all' is missed: curl -LO ${CURL_OPTIONS}       http://www.nic.funet.fi/pub/Linux/INSTALL/scientific/7.0/x86_64/updates/security/java-1.8.0-openjdk-1.8.0.91-0.b14.el7_2.x86_64.rpm \u0026\u0026     curl -LO ${CURL_OPTIONS}       http://www.nic.funet.fi/pub/Linux/INSTALL/scientific/7.0/x86_64/updates/security/java-1.8.0-openjdk-headless-1.8.0.91-0.b14.el7_2.x86_64.rpm \u0026\u0026     touch /var/lib/rpm/* \u0026\u0026     yum -y install java-1.8.0-openjdk-1.8.0.91-0.b14.el7_2.x86_64.rpm java-1.8.0-openjdk-headless-1.8.0.91-0.b14.el7_2.x86_64.rpm \u0026\u0026     rm -f *.rpm \u0026\u0026     echo \"exclude=java-1.8.0-openjdk java-1.8.0-openjdk-headless\"  \u003e\u003e /etc/yum.conf\nLink: [DS015](https://avd.aquasec.com/misconfig/ds015)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 1,
                  "endLine": 99,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS015",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS015\nSeverity: HIGH\nMessage: 'yum clean all' is missed: touch /var/lib/rpm/* \u0026\u0026     yum -y install rpm-build redhat-rpm-config rpmdevtools\nLink: [DS015](https://avd.aquasec.com/misconfig/ds015)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 1,
                  "endLine": 184,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS015",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS015\nSeverity: HIGH\nMessage: 'yum clean all' is missed: yum -y install deltarpm \u0026\u0026 yum -y update\nLink: [DS015](https://avd.aquasec.com/misconfig/ds015)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS017",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS017\nSeverity: HIGH\nMessage: The instruction 'RUN \u003cpackage-manager\u003e update' should always be followed by '\u003cpackage-manager\u003e install' in the same RUN statement.\nLink: [DS017](https://avd.aquasec.com/misconfig/ds017)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS022",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS022\nSeverity: HIGH\nMessage: MAINTAINER should not be used: 'MAINTAINER adrianp@stindustries.net'\nLink: [DS022](https://avd.aquasec.com/misconfig/ds022)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS026",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Artifact: docker/bad-dockerfile/Dockerfile\nType: dockerfile\nVulnerability DS026\nSeverity: LOW\nMessage: Add HEALTHCHECK instruction in your Dockerfile\nLink: [DS026](https://avd.aquasec.com/misconfig/ds026)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/bad-dockerfile/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "docker/bad-dockerfile/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0026",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0026\nSeverity: HIGH\nMessage: EBS volume is not encrypted.\nLink: [AVD-AWS-0026](https://avd.aquasec.com/misconfig/avd-aws-0026)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 1,
                  "endLine": 101,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0027",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0027\nSeverity: LOW\nMessage: EBS volume does not use a customer-managed KMS key.\nLink: [AVD-AWS-0027](https://avd.aquasec.com/misconfig/avd-aws-0027)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 1,
                  "endLine": 101,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0028",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0028\nSeverity: HIGH\nMessage: Instance does not require IMDS access to require a token\nLink: [AVD-AWS-0028](https://avd.aquasec.com/misconfig/avd-aws-0028)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 63,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0028",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0028\nSeverity: HIGH\nMessage: Instance does not require IMDS access to require a token\nLink: [AVD-AWS-0028](https://avd.aquasec.com/misconfig/avd-aws-0028)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 690,
                  "startColumn": 1,
                  "endLine": 723,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses sensitive action 'logs:*' on wildcarded resource '*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1081,
                  "startColumn": 1,
                  "endLine": 1081,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses sensitive action 's3:GetObject' on wildcarded resource '*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1088,
                  "startColumn": 1,
                  "endLine": 1088,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses wildcarded action 'logs:*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1081,
                  "startColumn": 1,
                  "endLine": 1081,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses sensitive action 'ec2:*' on wildcarded resource '*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 1,
                  "endLine": 407,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses wildcarded action 'ec2:*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 1,
                  "endLine": 407,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses wildcarded action 'ec2:*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 1,
                  "endLine": 407,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses wildcarded action 'ec2:*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 1,
                  "endLine": 407,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses wildcarded action 'ec2:*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 1,
                  "endLine": 407,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses sensitive action 's3:*' on wildcarded resource '*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 674,
                  "startColumn": 1,
                  "endLine": 674,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses wildcarded action 's3:*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 674,
                  "startColumn": 1,
                  "endLine": 674,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses wildcarded action 's3:*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 674,
                  "startColumn": 1,
                  "endLine": 674,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0057",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0057\nSeverity: HIGH\nMessage: IAM policy document uses wildcarded action 's3:*'\nLink: [AVD-AWS-0057](https://avd.aquasec.com/misconfig/avd-aws-0057)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 674,
                  "startColumn": 1,
                  "endLine": 674,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0066",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0066\nSeverity: LOW\nMessage: Function does not have tracing enabled.\nLink: [AVD-AWS-0066](https://avd.aquasec.com/misconfig/avd-aws-0066)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1115,
                  "startColumn": 1,
                  "endLine": 1268,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0066",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0066\nSeverity: LOW\nMessage: Function does not have tracing enabled.\nLink: [AVD-AWS-0066](https://avd.aquasec.com/misconfig/avd-aws-0066)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 878,
                  "startColumn": 1,
                  "endLine": 912,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0077",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0077\nSeverity: MEDIUM\nMessage: Instance has very low backup retention period.\nLink: [AVD-AWS-0077](https://avd.aquasec.com/misconfig/avd-aws-0077)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 487,
                  "startColumn": 1,
                  "endLine": 487,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0080",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0080\nSeverity: HIGH\nMessage: Instance does not have storage encryption enabled.\nLink: [AVD-AWS-0080](https://avd.aquasec.com/misconfig/avd-aws-0080)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 1,
                  "endLine": 488,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0082",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0082\nSeverity: CRITICAL\nMessage: Instance is exposed publicly.\nLink: [AVD-AWS-0082](https://avd.aquasec.com/misconfig/avd-aws-0082)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 1,
                  "endLine": 490,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0086",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0086\nSeverity: HIGH\nMessage: No public access block so not blocking public acls\nLink: [AVD-AWS-0086](https://avd.aquasec.com/misconfig/avd-aws-0086)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1000,
                  "startColumn": 1,
                  "endLine": 1029,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0086",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0086\nSeverity: HIGH\nMessage: No public access block so not blocking public acls\nLink: [AVD-AWS-0086](https://avd.aquasec.com/misconfig/avd-aws-0086)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1031,
                  "startColumn": 1,
                  "endLine": 1062,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0086",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0086\nSeverity: HIGH\nMessage: No public access block so not blocking public acls\nLink: [AVD-AWS-0086](https://avd.aquasec.com/misconfig/avd-aws-0086)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 1,
                  "endLine": 372,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0086",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0086\nSeverity: HIGH\nMessage: No public access block so not blocking public acls\nLink: [AVD-AWS-0086](https://avd.aquasec.com/misconfig/avd-aws-0086)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 1,
                  "endLine": 942,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0086",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0086\nSeverity: HIGH\nMessage: No public access block so not blocking public acls\nLink: [AVD-AWS-0086](https://avd.aquasec.com/misconfig/avd-aws-0086)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 1,
                  "endLine": 970,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0086",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0086\nSeverity: HIGH\nMessage: No public access block so not blocking public acls\nLink: [AVD-AWS-0086](https://avd.aquasec.com/misconfig/avd-aws-0086)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 1,
                  "endLine": 998,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0087",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0087\nSeverity: HIGH\nMessage: No public access block so not blocking public policies\nLink: [AVD-AWS-0087](https://avd.aquasec.com/misconfig/avd-aws-0087)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1000,
                  "startColumn": 1,
                  "endLine": 1029,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0087",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0087\nSeverity: HIGH\nMessage: No public access block so not blocking public policies\nLink: [AVD-AWS-0087](https://avd.aquasec.com/misconfig/avd-aws-0087)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1031,
                  "startColumn": 1,
                  "endLine": 1062,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0087",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0087\nSeverity: HIGH\nMessage: No public access block so not blocking public policies\nLink: [AVD-AWS-0087](https://avd.aquasec.com/misconfig/avd-aws-0087)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 1,
                  "endLine": 372,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0087",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0087\nSeverity: HIGH\nMessage: No public access block so not blocking public policies\nLink: [AVD-AWS-0087](https://avd.aquasec.com/misconfig/avd-aws-0087)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 1,
                  "endLine": 942,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0087",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0087\nSeverity: HIGH\nMessage: No public access block so not blocking public policies\nLink: [AVD-AWS-0087](https://avd.aquasec.com/misconfig/avd-aws-0087)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 1,
                  "endLine": 970,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0087",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0087\nSeverity: HIGH\nMessage: No public access block so not blocking public policies\nLink: [AVD-AWS-0087](https://avd.aquasec.com/misconfig/avd-aws-0087)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 1,
                  "endLine": 998,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0088",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0088\nSeverity: HIGH\nMessage: Bucket does not have encryption enabled\nLink: [AVD-AWS-0088](https://avd.aquasec.com/misconfig/avd-aws-0088)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1000,
                  "startColumn": 1,
                  "endLine": 1029,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0088",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0088\nSeverity: HIGH\nMessage: Bucket does not have encryption enabled\nLink: [AVD-AWS-0088](https://avd.aquasec.com/misconfig/avd-aws-0088)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1041,
                  "startColumn": 1,
                  "endLine": 1043,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0088",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0088\nSeverity: HIGH\nMessage: Bucket does not have encryption enabled\nLink: [AVD-AWS-0088](https://avd.aquasec.com/misconfig/avd-aws-0088)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 1,
                  "endLine": 372,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0088",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0088\nSeverity: HIGH\nMessage: Bucket does not have encryption enabled\nLink: [AVD-AWS-0088](https://avd.aquasec.com/misconfig/avd-aws-0088)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 1,
                  "endLine": 942,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0088",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0088\nSeverity: HIGH\nMessage: Bucket does not have encryption enabled\nLink: [AVD-AWS-0088](https://avd.aquasec.com/misconfig/avd-aws-0088)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 1,
                  "endLine": 970,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0088",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0088\nSeverity: HIGH\nMessage: Bucket does not have encryption enabled\nLink: [AVD-AWS-0088](https://avd.aquasec.com/misconfig/avd-aws-0088)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 1,
                  "endLine": 998,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0089",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0089\nSeverity: MEDIUM\nMessage: Bucket does not have logging enabled\nLink: [AVD-AWS-0089](https://avd.aquasec.com/misconfig/avd-aws-0089)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 1,
                  "endLine": 372,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0089",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0089\nSeverity: MEDIUM\nMessage: Bucket does not have logging enabled\nLink: [AVD-AWS-0089](https://avd.aquasec.com/misconfig/avd-aws-0089)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 1,
                  "endLine": 942,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0089",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0089\nSeverity: MEDIUM\nMessage: Bucket does not have logging enabled\nLink: [AVD-AWS-0089](https://avd.aquasec.com/misconfig/avd-aws-0089)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 1,
                  "endLine": 970,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0089",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0089\nSeverity: MEDIUM\nMessage: Bucket does not have logging enabled\nLink: [AVD-AWS-0089](https://avd.aquasec.com/misconfig/avd-aws-0089)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 1,
                  "endLine": 998,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0090",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0090\nSeverity: MEDIUM\nMessage: Bucket does not have versioning enabled\nLink: [AVD-AWS-0090](https://avd.aquasec.com/misconfig/avd-aws-0090)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 1,
                  "endLine": 372,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0090",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0090\nSeverity: MEDIUM\nMessage: Bucket does not have versioning enabled\nLink: [AVD-AWS-0090](https://avd.aquasec.com/misconfig/avd-aws-0090)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 1,
                  "endLine": 942,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0090",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0090\nSeverity: MEDIUM\nMessage: Bucket does not have versioning enabled\nLink: [AVD-AWS-0090](https://avd.aquasec.com/misconfig/avd-aws-0090)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 1,
                  "endLine": 970,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0091",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0091\nSeverity: HIGH\nMessage: No public access block so not ignoring public acls\nLink: [AVD-AWS-0091](https://avd.aquasec.com/misconfig/avd-aws-0091)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1000,
                  "startColumn": 1,
                  "endLine": 1029,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0091",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0091\nSeverity: HIGH\nMessage: No public access block so not ignoring public acls\nLink: [AVD-AWS-0091](https://avd.aquasec.com/misconfig/avd-aws-0091)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1031,
                  "startColumn": 1,
                  "endLine": 1062,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0091",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0091\nSeverity: HIGH\nMessage: No public access block so not ignoring public acls\nLink: [AVD-AWS-0091](https://avd.aquasec.com/misconfig/avd-aws-0091)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 1,
                  "endLine": 372,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0091",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0091\nSeverity: HIGH\nMessage: No public access block so not ignoring public acls\nLink: [AVD-AWS-0091](https://avd.aquasec.com/misconfig/avd-aws-0091)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 1,
                  "endLine": 942,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0091",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0091\nSeverity: HIGH\nMessage: No public access block so not ignoring public acls\nLink: [AVD-AWS-0091](https://avd.aquasec.com/misconfig/avd-aws-0091)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 1,
                  "endLine": 970,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0091",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0091\nSeverity: HIGH\nMessage: No public access block so not ignoring public acls\nLink: [AVD-AWS-0091](https://avd.aquasec.com/misconfig/avd-aws-0091)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 1,
                  "endLine": 998,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0092",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0092\nSeverity: HIGH\nMessage: Bucket has a public ACL: 'public-read'.\nLink: [AVD-AWS-0092](https://avd.aquasec.com/misconfig/avd-aws-0092)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 923,
                  "startColumn": 1,
                  "endLine": 923,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0093",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0093\nSeverity: HIGH\nMessage: No public access block so not restricting public buckets\nLink: [AVD-AWS-0093](https://avd.aquasec.com/misconfig/avd-aws-0093)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1000,
                  "startColumn": 1,
                  "endLine": 1029,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0093",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0093\nSeverity: HIGH\nMessage: No public access block so not restricting public buckets\nLink: [AVD-AWS-0093](https://avd.aquasec.com/misconfig/avd-aws-0093)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1031,
                  "startColumn": 1,
                  "endLine": 1062,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0093",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0093\nSeverity: HIGH\nMessage: No public access block so not restricting public buckets\nLink: [AVD-AWS-0093](https://avd.aquasec.com/misconfig/avd-aws-0093)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 1,
                  "endLine": 372,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0093",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0093\nSeverity: HIGH\nMessage: No public access block so not restricting public buckets\nLink: [AVD-AWS-0093](https://avd.aquasec.com/misconfig/avd-aws-0093)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 1,
                  "endLine": 942,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0093",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0093\nSeverity: HIGH\nMessage: No public access block so not restricting public buckets\nLink: [AVD-AWS-0093](https://avd.aquasec.com/misconfig/avd-aws-0093)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 1,
                  "endLine": 970,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0093",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0093\nSeverity: HIGH\nMessage: No public access block so not restricting public buckets\nLink: [AVD-AWS-0093](https://avd.aquasec.com/misconfig/avd-aws-0093)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 1,
                  "endLine": 998,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0094",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0094\nSeverity: LOW\nMessage: Bucket does not have a corresponding public access block.\nLink: [AVD-AWS-0094](https://avd.aquasec.com/misconfig/avd-aws-0094)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1000,
                  "startColumn": 1,
                  "endLine": 1029,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0094",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0094\nSeverity: LOW\nMessage: Bucket does not have a corresponding public access block.\nLink: [AVD-AWS-0094](https://avd.aquasec.com/misconfig/avd-aws-0094)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1031,
                  "startColumn": 1,
                  "endLine": 1062,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0094",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0094\nSeverity: LOW\nMessage: Bucket does not have a corresponding public access block.\nLink: [AVD-AWS-0094](https://avd.aquasec.com/misconfig/avd-aws-0094)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 1,
                  "endLine": 372,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0094",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0094\nSeverity: LOW\nMessage: Bucket does not have a corresponding public access block.\nLink: [AVD-AWS-0094](https://avd.aquasec.com/misconfig/avd-aws-0094)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 1,
                  "endLine": 942,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0094",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0094\nSeverity: LOW\nMessage: Bucket does not have a corresponding public access block.\nLink: [AVD-AWS-0094](https://avd.aquasec.com/misconfig/avd-aws-0094)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 1,
                  "endLine": 970,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0094",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0094\nSeverity: LOW\nMessage: Bucket does not have a corresponding public access block.\nLink: [AVD-AWS-0094](https://avd.aquasec.com/misconfig/avd-aws-0094)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 1,
                  "endLine": 998,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0107",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0107\nSeverity: CRITICAL\nMessage: Security group rule allows ingress from public internet.\nLink: [AVD-AWS-0107](https://avd.aquasec.com/misconfig/avd-aws-0107)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 1,
                  "endLine": 122,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0107",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0107\nSeverity: CRITICAL\nMessage: Security group rule allows ingress from public internet.\nLink: [AVD-AWS-0107](https://avd.aquasec.com/misconfig/avd-aws-0107)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 1,
                  "endLine": 130,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0107",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0107\nSeverity: CRITICAL\nMessage: Security group rule allows ingress from public internet.\nLink: [AVD-AWS-0107](https://avd.aquasec.com/misconfig/avd-aws-0107)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 1,
                  "endLine": 126,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0124",
          "ruleIndex": 24,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0124\nSeverity: LOW\nMessage: Security group rule does not have a description.\nLink: [AVD-AWS-0124](https://avd.aquasec.com/misconfig/avd-aws-0124)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 1,
                  "endLine": 130,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0124",
          "ruleIndex": 24,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0124\nSeverity: LOW\nMessage: Security group rule does not have a description.\nLink: [AVD-AWS-0124](https://avd.aquasec.com/misconfig/avd-aws-0124)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 1,
                  "endLine": 122,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0124",
          "ruleIndex": 24,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0124\nSeverity: LOW\nMessage: Security group rule does not have a description.\nLink: [AVD-AWS-0124](https://avd.aquasec.com/misconfig/avd-aws-0124)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 1,
                  "endLine": 126,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0124",
          "ruleIndex": 24,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0124\nSeverity: LOW\nMessage: Security group rule does not have a description.\nLink: [AVD-AWS-0124](https://avd.aquasec.com/misconfig/avd-aws-0124)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 605,
                  "startColumn": 1,
                  "endLine": 608,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0132",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0132\nSeverity: HIGH\nMessage: Bucket does not encrypt data with a customer managed key.\nLink: [AVD-AWS-0132](https://avd.aquasec.com/misconfig/avd-aws-0132)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1000,
                  "startColumn": 1,
                  "endLine": 1029,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0132",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0132\nSeverity: HIGH\nMessage: Bucket does not encrypt data with a customer managed key.\nLink: [AVD-AWS-0132](https://avd.aquasec.com/misconfig/avd-aws-0132)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 1,
                  "endLine": 372,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0132",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0132\nSeverity: HIGH\nMessage: Bucket does not encrypt data with a customer managed key.\nLink: [AVD-AWS-0132](https://avd.aquasec.com/misconfig/avd-aws-0132)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 1,
                  "endLine": 942,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0132",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0132\nSeverity: HIGH\nMessage: Bucket does not encrypt data with a customer managed key.\nLink: [AVD-AWS-0132](https://avd.aquasec.com/misconfig/avd-aws-0132)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 1,
                  "endLine": 970,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0132",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0132\nSeverity: HIGH\nMessage: Bucket does not encrypt data with a customer managed key.\nLink: [AVD-AWS-0132](https://avd.aquasec.com/misconfig/avd-aws-0132)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 1,
                  "endLine": 998,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0133",
          "ruleIndex": 26,
          "level": "note",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0133\nSeverity: LOW\nMessage: Instance does not have performance insights enabled.\nLink: [AVD-AWS-0133](https://avd.aquasec.com/misconfig/avd-aws-0133)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 1,
                  "endLine": 511,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0164",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0164\nSeverity: HIGH\nMessage: Subnet associates public IP address.\nLink: [AVD-AWS-0164](https://avd.aquasec.com/misconfig/avd-aws-0164)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 1,
                  "endLine": 182,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0164",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability AVD-AWS-0164\nSeverity: HIGH\nMessage: Subnet associates public IP address.\nLink: [AVD-AWS-0164](https://avd.aquasec.com/misconfig/avd-aws-0164)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 1,
                  "endLine": 211,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "N/A",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability N/A\nSeverity: MEDIUM\nMessage: Instance does not have Deletion Protection enabled\nLink: [N/A](https://avd.aquasec.com/misconfig/n/a)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 1,
                  "endLine": 511,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "N/A",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/cfngoat.yaml\nType: cloudformation\nVulnerability N/A\nSeverity: HIGH\nMessage: Instance has Public Access enabled\nLink: [N/A](https://avd.aquasec.com/misconfig/n/a)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/cfngoat.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 1,
                  "endLine": 490,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/cfngoat.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0039",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "Artifact: iac/cfngoat/eks.yaml\nType: cloudformation\nVulnerability AVD-AWS-0039\nSeverity: HIGH\nMessage: Cluster does not have secret encryption enabled.\nLink: [AVD-AWS-0039](https://avd.aquasec.com/misconfig/avd-aws-0039)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/cfngoat/eks.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 439,
                  "startColumn": 1,
                  "endLine": 453,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/cfngoat/eks.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "DS026",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/Dockerfile\nType: dockerfile\nVulnerability DS026\nSeverity: LOW\nMessage: Add HEALTHCHECK instruction in your Dockerfile\nLink: [DS026](https://avd.aquasec.com/misconfig/ds026)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "KSV001",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV001\nSeverity: MEDIUM\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'securityContext.allowPrivilegeEscalation' to false\nLink: [KSV001](https://avd.aquasec.com/misconfig/ksv001)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV003",
          "ruleIndex": 31,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV003\nSeverity: LOW\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should add 'ALL' to 'securityContext.capabilities.drop'\nLink: [KSV003](https://avd.aquasec.com/misconfig/ksv003)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV011",
          "ruleIndex": 32,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV011\nSeverity: LOW\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'resources.limits.cpu'\nLink: [KSV011](https://avd.aquasec.com/misconfig/ksv011)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV012",
          "ruleIndex": 33,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV012\nSeverity: MEDIUM\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'securityContext.runAsNonRoot' to true\nLink: [KSV012](https://avd.aquasec.com/misconfig/ksv012)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV014",
          "ruleIndex": 34,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV014\nSeverity: LOW\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'securityContext.readOnlyRootFilesystem' to true\nLink: [KSV014](https://avd.aquasec.com/misconfig/ksv014)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV015",
          "ruleIndex": 35,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV015\nSeverity: LOW\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'resources.requests.cpu'\nLink: [KSV015](https://avd.aquasec.com/misconfig/ksv015)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV016",
          "ruleIndex": 36,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV016\nSeverity: LOW\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'resources.requests.memory'\nLink: [KSV016](https://avd.aquasec.com/misconfig/ksv016)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV018",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV018\nSeverity: LOW\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'resources.limits.memory'\nLink: [KSV018](https://avd.aquasec.com/misconfig/ksv018)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV020",
          "ruleIndex": 38,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV020\nSeverity: LOW\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'securityContext.runAsUser' \u003e 10000\nLink: [KSV020](https://avd.aquasec.com/misconfig/ksv020)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV021",
          "ruleIndex": 39,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV021\nSeverity: LOW\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'securityContext.runAsGroup' \u003e 10000\nLink: [KSV021](https://avd.aquasec.com/misconfig/ksv021)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV030",
          "ruleIndex": 40,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV030\nSeverity: LOW\nMessage: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'\nLink: [KSV030](https://avd.aquasec.com/misconfig/ksv030)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV106",
          "ruleIndex": 41,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/base/deployment.yaml\nType: kubernetes\nVulnerability KSV106\nSeverity: LOW\nMessage: container should drop all\nLink: [KSV106](https://avd.aquasec.com/misconfig/ksv106)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/base/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/base/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV020",
          "ruleIndex": 38,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml\nType: kubernetes\nVulnerability KSV020\nSeverity: LOW\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'securityContext.runAsUser' \u003e 10000\nLink: [KSV020](https://avd.aquasec.com/misconfig/ksv020)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 59,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV021",
          "ruleIndex": 39,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml\nType: kubernetes\nVulnerability KSV021\nSeverity: LOW\nMessage: Container 'kustomizegoat' of Deployment 'kustomizegoat' should set 'securityContext.runAsGroup' \u003e 10000\nLink: [KSV021](https://avd.aquasec.com/misconfig/ksv021)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 59,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV030",
          "ruleIndex": 40,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml\nType: kubernetes\nVulnerability KSV030\nSeverity: LOW\nMessage: seccomp.security.alpha.kubernetes.io/pod should be set to 'runtime/default'\nLink: [KSV030](https://avd.aquasec.com/misconfig/ksv030)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/overlays/prod/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV030",
          "ruleIndex": 40,
          "level": "note",
          "message": {
            "text": "Artifact: iac/kustomizegoat/kustomize/overlays/test/deployment.yaml\nType: kubernetes\nVulnerability KSV030\nSeverity: LOW\nMessage: seccomp.security.alpha.kubernetes.io/pod should be set to 'runtime/default'\nLink: [KSV030](https://avd.aquasec.com/misconfig/ksv030)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/kustomizegoat/kustomize/overlays/test/deployment.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/kustomizegoat/kustomize/overlays/test/deployment.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "DS026",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Artifact: iac/supplygoat/Dockerfile\nType: dockerfile\nVulnerability DS026\nSeverity: LOW\nMessage: Add HEALTHCHECK instruction in your Dockerfile\nLink: [DS026](https://avd.aquasec.com/misconfig/ds026)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "KSV001",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV001\nSeverity: MEDIUM\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.allowPrivilegeEscalation' to false\nLink: [KSV001](https://avd.aquasec.com/misconfig/ksv001)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV003",
          "ruleIndex": 31,
          "level": "note",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV003\nSeverity: LOW\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should add 'ALL' to 'securityContext.capabilities.drop'\nLink: [KSV003](https://avd.aquasec.com/misconfig/ksv003)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV006",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV006\nSeverity: HIGH\nMessage: Deployment 'health-check-deployment' should not specify '/var/run/docker.socker' in 'spec.template.volumes.hostPath.path'\nLink: [KSV006](https://avd.aquasec.com/misconfig/ksv006)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV012",
          "ruleIndex": 33,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV012\nSeverity: MEDIUM\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.runAsNonRoot' to true\nLink: [KSV012](https://avd.aquasec.com/misconfig/ksv012)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV013",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV013\nSeverity: MEDIUM\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should specify an image tag\nLink: [KSV013](https://avd.aquasec.com/misconfig/ksv013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV014",
          "ruleIndex": 34,
          "level": "note",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV014\nSeverity: LOW\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.readOnlyRootFilesystem' to true\nLink: [KSV014](https://avd.aquasec.com/misconfig/ksv014)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV015",
          "ruleIndex": 35,
          "level": "note",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV015\nSeverity: LOW\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'resources.requests.cpu'\nLink: [KSV015](https://avd.aquasec.com/misconfig/ksv015)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV016",
          "ruleIndex": 36,
          "level": "note",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV016\nSeverity: LOW\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'resources.requests.memory'\nLink: [KSV016](https://avd.aquasec.com/misconfig/ksv016)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV017",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV017\nSeverity: HIGH\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.privileged' to false\nLink: [KSV017](https://avd.aquasec.com/misconfig/ksv017)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV020",
          "ruleIndex": 38,
          "level": "note",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV020\nSeverity: LOW\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.runAsUser' \u003e 10000\nLink: [KSV020](https://avd.aquasec.com/misconfig/ksv020)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV021",
          "ruleIndex": 39,
          "level": "note",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV021\nSeverity: LOW\nMessage: Container 'health-check' of Deployment 'health-check-deployment' should set 'securityContext.runAsGroup' \u003e 10000\nLink: [KSV021](https://avd.aquasec.com/misconfig/ksv021)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV023",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV023\nSeverity: MEDIUM\nMessage: Deployment 'health-check-deployment' should not set 'spec.template.volumes.hostPath'\nLink: [KSV023](https://avd.aquasec.com/misconfig/ksv023)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV030",
          "ruleIndex": 40,
          "level": "note",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV030\nSeverity: LOW\nMessage: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'\nLink: [KSV030](https://avd.aquasec.com/misconfig/ksv030)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "KSV106",
          "ruleIndex": 41,
          "level": "note",
          "message": {
            "text": "Artifact: iac/supplygoat/deployment-kind.yaml\nType: kubernetes\nVulnerability KSV106\nSeverity: LOW\nMessage: container should drop all\nLink: [KSV106](https://avd.aquasec.com/misconfig/ksv106)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/deployment-kind.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/deployment-kind.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "AVD-AWS-0039",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "Artifact: iac/supplygoat/eks.yaml\nType: cloudformation\nVulnerability AVD-AWS-0039\nSeverity: HIGH\nMessage: Cluster does not have secret encryption enabled.\nLink: [AVD-AWS-0039](https://avd.aquasec.com/misconfig/avd-aws-0039)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/supplygoat/eks.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 1,
                  "endLine": 279,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/supplygoat/eks.yaml"
              }
            }
          ]
        },
        {
          "ruleId": "DS002",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Artifact: iac/terragoat/terraform/aws/resources/Dockerfile\nType: dockerfile\nVulnerability DS002\nSeverity: HIGH\nMessage: Specify at least 1 USER command in Dockerfile with non-root user as argument\nLink: [DS002](https://avd.aquasec.com/misconfig/ds002)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/resources/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/terragoat/terraform/aws/resources/Dockerfile"
              }
            }
          ]
        },
        {
          "ruleId": "DS026",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Artifact: iac/terragoat/terraform/aws/resources/Dockerfile\nType: dockerfile\nVulnerability DS026\nSeverity: LOW\nMessage: Add HEALTHCHECK instruction in your Dockerfile\nLink: [DS026](https://avd.aquasec.com/misconfig/ds026)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "iac/terragoat/terraform/aws/resources/Dockerfile",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "iac/terragoat/terraform/aws/resources/Dockerfile"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      }
    }
  ]
}